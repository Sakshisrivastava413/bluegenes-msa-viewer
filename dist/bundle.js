var bluegenesMSAViewer=function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./src/index.js")}({"./node_modules/@intermine/msa-viewer/lib/g sync recursive":
/*!*******************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g sync ***!
  \*******************************************************/
/*! no static exports found */function(module,exports){eval('function webpackEmptyContext(req) {\n\tvar e = new Error("Cannot find module \'" + req + "\'");\n\te.code = \'MODULE_NOT_FOUND\';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = "./node_modules/@intermine/msa-viewer/lib/g sync recursive";\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g_sync?')},"./node_modules/@intermine/msa-viewer/lib/g/StageScale.js":
/*!****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/StageScale.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar StageScale;\nvar Model = __webpack_require__(/*! backbone-thin */ \"./node_modules/backbone-thin/index.js\").Model;\nvar LinearScale = __webpack_require__(/*! linear-scale */ \"./node_modules/linear-scale/linear-scale.js\");\n\n// pixel properties for some components\nmodule.exports = StageScale = Model.extend({\n\n  constructor: function constructor(attributes, options) {\n    this.g = options.g;\n    Model.apply(this, arguments);\n    return this;\n  },\n\n  defaults: {\n    // general\n    currentSize: 5,\n    step: 1,\n    originalSize: false,\n    scaleCategories: [{ columnWidth: 1, markerStepSize: 20, stepSize: 0 }, { columnWidth: 3, markerStepSize: 20, stepSize: 0 }, { columnWidth: 5, markerStepSize: 10, stepSize: 0 }, { columnWidth: 9, markerStepSize: 5, stepSize: 1 }, { columnWidth: 15, markerStepSize: 2, stepSize: 1 }, { columnWidth: 20, markerStepSize: 1, stepSize: 1 }, { columnWidth: 30, markerStepSize: 1, stepSize: 1 }, { columnWidth: 45, markerStepSize: 1, stepSize: 1 }]\n  },\n\n  initialize: function initialize(args) {\n    var categories = this.get('scaleCategories');\n    var initialColumnWidth = this.g.zoomer.get('columnWidth') || this._getScaleInfo().columnWidth;\n\n    /* if the global columnWidth setting doesn't match any of our categories\n     * then create a category that does match and add it to a sensible place\n     * in the list\n     */\n    var category = _.find(categories, { columnWidth: initialColumnWidth });\n    if (!category) {\n      var catindex = this._insertScaleCategory(initialColumnWidth);\n      category = categories[catindex];\n      // custom columnWidth should overwrite the default currentSize\n      this.set('currentSize', catindex + 1);\n    }\n\n    var currentSize = this.get('currentSize');\n    this.set('originalSize', currentSize);\n    this.setSize(currentSize);\n\n    return this;\n  },\n\n  // insert new category based on columnWidth\n  // return the index of newly inserted category\n  _insertScaleCategory: function _insertScaleCategory(columnWidth) {\n    var categories = this.get('scaleCategories');\n    var lastcatindex = _.findLastIndex(categories, function (c) {\n      return c.columnWidth < columnWidth;\n    });\n    var lastcat = categories[lastcatindex];\n    var insertindex = lastcatindex + 1;\n    var category = { columnWidth: columnWidth, markerStepSize: lastcat.markerStepSize, stepSize: lastcat.markerStepSize };\n    categories.splice(insertindex, 0, category);\n    this.set('scaleCategories', categories);\n    return insertindex;\n  },\n\n  getSizeRange: function getSizeRange() {\n    return [1, this.get('scaleCategories').length];\n  },\n\n\n  bigger: function bigger() {\n    return this.setSize(this.get('currentSize') + this.get('step'));\n  },\n\n  smaller: function smaller() {\n    return this.setSize(this.get('currentSize') - this.get('step'));\n  },\n\n  reset: function reset() {\n    return this.setSize(this.get('originalSize'));\n  },\n\n  setSize: function setSize(size) {\n    var range = this.getSizeRange();\n    size = parseInt(size);\n    size = size < range[0] ? range[0] : size > range[1] ? range[1] : size;\n\n    this.set('currentSize', size);\n    var info = this._getScaleInfo();\n    this.g.zoomer.set({\n      columnWidth: info.columnWidth,\n      //rowHeight: columnWidth,\n      stepSize: info.stepSize,\n      markerStepSize: info.markerStepSize\n      // update font too (hackish)\n      //residueFont: nFontSize,\n      //labelFontSize:  nFontSize\n    });\n    return this;\n  },\n\n  getSize: function getSize() {\n    return this.get('currentSize');\n  },\n\n  _getScaleInfo: function _getScaleInfo() {\n    var size = this.getSize();\n    var categories = this.get('scaleCategories');\n    if (size > 0 && size <= categories.length) {\n      return categories[size - 1];\n    } else {\n      console.error(\"out of bounds\");\n    }\n  }\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/StageScale.js?")},"./node_modules/@intermine/msa-viewer/lib/g/colorscheme.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/colorscheme.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Colorscheme;\nvar Colors = __webpack_require__(/*! msa-colorschemes */ "./node_modules/msa-colorschemes/src/index.js");\n\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\n// this is an example of how one could color the MSA\n// feel free to create your own color scheme in the /css/schemes folder\nmodule.exports = Colorscheme = Model.extend({\n\n  defaults: {\n    scheme: "taylor", // name of your color scheme\n    colorBackground: true, // otherwise only the text will be colored\n    showLowerCase: true, // used to hide and show lowercase chars in the overviewbox\n    opacity: 0.6 // opacity for the residues\n  },\n\n  initialize: function initialize(data, seqs, stat) {\n    this.colors = new Colors({ seqs: seqs,\n      conservation: function conservation() {\n        return stat.scale(stat.conservation());\n      } });\n    // the stats module sends an event every time it is refreshed\n    return stat.on("reset", function () {\n      // some dynamic modules might require a redraw\n      if (this.getSelectedScheme().type === "dyn") {\n        var ref;\n        if (ref = "reset", this.getSelectedScheme().indexOf(ref) >= 0) {\n          return this.getSelectedScheme().reset();\n        }\n      }\n    }, this);\n  },\n\n  // You can enter your own color scheme here\n  addStaticScheme: function addStaticScheme(name, dict) {\n    return this.colors.addStaticScheme(name, dict);\n  },\n\n  addDynScheme: function addDynScheme(name, fun) {\n    return this.colors.addDynScheme(name, fun);\n  },\n\n  getScheme: function getScheme(name) {\n    return this.colors.getScheme(name);\n  },\n\n  getSelectedScheme: function getSelectedScheme() {\n    return this.colors.getScheme(this.get("scheme"));\n  }\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/colorscheme.js?')},"./node_modules/@intermine/msa-viewer/lib/g/columns.js":
/*!*************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/columns.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Columns;\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\n// model for column properties (like their hidden state)\nmodule.exports = Columns = Model.extend({\n\n  initialize: function initialize(o, stat) {\n    // hidden columns\n    if (!(this.get("hidden") != null)) {\n      this.set("hidden", []);\n    }\n    return this.stats = stat;\n  },\n\n  // assumes hidden columns are sorted\n  // @returns n [int] number of hidden columns until n\n  calcHiddenColumns: function calcHiddenColumns(n) {\n    var hidden = this.get("hidden");\n    var newX = n;\n    for (var j = 0, i; j < hidden.length; j++) {\n      i = hidden[j];\n      if (i <= newX) {\n        newX++;\n      }\n    }\n    return newX - n;\n  }\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/columns.js?')},"./node_modules/@intermine/msa-viewer/lib/g/config.js":
/*!************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/config.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Config;\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\n// simple user config\nmodule.exports = Config = Model.extend({\n\n  defaults: { registerMouseHover: false,\n    registerMouseClicks: true,\n    importProxy: "https://cors-anywhere.herokuapp.com/",\n    importProxyStripHttp: true,\n    eventBus: true,\n    alphabetSize: 20,\n    dropImport: false,\n    debug: false,\n    hasRef: false, // hasReference\n    bootstrapMenu: false,\n    manualRendering: false // not recommended to turn on\n  }\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/config.js?')},"./node_modules/@intermine/msa-viewer/lib/g/package.js":
/*!*************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/package.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Package;\nvar Loader = __webpack_require__(/*! ../utils/loader */ "./node_modules/@intermine/msa-viewer/lib/utils/loader.js");\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\nmodule.exports = Package = Model.extend({\n\n  initialize: function initialize(g) {\n    return this.g = g;\n  },\n\n  development: { "msa-tnt": "/node_modules/msa-tnt/build/bundle.js",\n    "biojs-io-newick": "/node_modules/biojs-io-newick/build/biojs-io-newick.min.js"\n  },\n\n  // loads a package into the MSA component (if it is not available yet)\n  loadPackage: function loadPackage(pkg, cb) {\n    try {\n      var p = __webpack_require__("./node_modules/@intermine/msa-viewer/lib/g sync recursive")(pkg);\n      return cb(p);\n    } catch (error) {\n      return Loader.default.loadScript(this._pkgURL(pkg), cb);\n    }\n  },\n\n  // loads multiple packages and calls the cb if all packages are loaded\n  loadPackages: function loadPackages(pkgs, cb) {\n    var _this = this;\n\n    var cbs = Loader.default.joinCb(function () {\n      return cb();\n    }, pkgs.length);\n    return pkgs.forEach(function (pkg) {\n      return _this.loadPackage(pkg, cbs);\n    });\n  },\n\n  // internal method to get the URL for a package\n  _pkgURL: function _pkgURL(pkg) {\n\n    if (this.g.config.get("debug")) {\n      var url = this.development[pkg];\n    } else {\n      url = "http://wzrd.in/bundle/" + pkg + "@latest";\n    }\n\n    return url;\n  }\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/package.js?')},"./node_modules/@intermine/msa-viewer/lib/g/selection/Selection.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/selection/Selection.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.columnsel = exports.rowsel = exports.possel = exports.sel = undefined;\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\n// holds the current user selection\nvar Selection = Model.extend({\n  defaults: { type: "super" }\n});\n\nvar RowSelection = Selection.extend({\n  defaults: (0, _lodash.extend)({}, Selection.prototype.defaults, { type: "row",\n    seqId: ""\n  }),\n\n  inRow: function inRow(seqId) {\n    return seqId === this.get("seqId");\n  },\n  inColumn: function inColumn(rowPos) {\n    return true;\n  },\n  getLength: function getLength() {\n    return 1;\n  }\n});\n\nvar ColumnSelection = Selection.extend({\n  defaults: (0, _lodash.extend)({}, Selection.prototype.defaults, { type: "column",\n    xStart: -1,\n    xEnd: -1\n  }),\n\n  inRow: function inRow() {\n    return true;\n  },\n  inColumn: function inColumn(rowPos) {\n    return xStart <= rowPos && rowPos <= xEnd;\n  },\n  getLength: function getLength() {\n    return xEnd - xStart;\n  }\n});\n\n// pos is a mixin of column and row\n// start with Row and only overwrite "inColumn" from Column\nvar PosSelection = RowSelection.extend((0, _lodash.extend)({}, (0, _lodash.pick)(ColumnSelection, "inColumn"), (0, _lodash.pick)(ColumnSelection, "getLength"),\n// merge both defaults\n{ defaults: (0, _lodash.extend)({}, ColumnSelection.prototype.defaults, RowSelection.prototype.defaults, { type: "pos"\n  })\n}));\n\nexports.sel = Selection;\nexports.possel = PosSelection;\nexports.rowsel = RowSelection;\nexports.columnsel = ColumnSelection;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/selection/Selection.js?')},"./node_modules/@intermine/msa-viewer/lib/g/selection/SelectionCol.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/selection/SelectionCol.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _Selection = __webpack_require__(/*! ./Selection */ "./node_modules/@intermine/msa-viewer/lib/g/selection/Selection.js");\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar Collection = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Collection;\n\n// holds the current user selection\nvar SelectionManager = Collection.extend({\n\n  model: _Selection.sel,\n\n  initialize: function initialize(data, opts) {\n    if (typeof opts !== "undefined" && opts !== null) {\n      this.g = opts.g;\n\n      this.listenTo(this.g, "residue:click", function (e) {\n        return this._handleE(e.evt, new _Selection.possel({\n          xStart: e.rowPos,\n          xEnd: e.rowPos,\n          seqId: e.seqId\n        }));\n      });\n\n      this.listenTo(this.g, "row:click", function (e) {\n        return this._handleE(e.evt, new _Selection.rowsel({\n          seqId: e.seqId\n        }));\n      });\n\n      return this.listenTo(this.g, "column:click", function (e) {\n        return this._handleE(e.evt, new _Selection.columnsel({\n          xStart: e.rowPos,\n          xEnd: e.rowPos + e.stepSize - 1\n        }));\n      });\n    }\n  },\n\n  getSelForRow: function getSelForRow(seqId) {\n    return this.filter(function (el) {\n      return el.inRow(seqId);\n    });\n  },\n\n  getSelForColumns: function getSelForColumns(rowPos) {\n    return this.filter(function (el) {\n      return el.inColumn(rowPos);\n    });\n  },\n\n  addJSON: function addJSON(model) {\n    return this.add(this._fromJSON(model));\n  },\n\n  _fromJSON: function _fromJSON(model) {\n    switch (model.type) {\n      case "column":\n        return new _Selection.columnsel(model);\n      case "row":\n        return new _Selection.rowsel(model);\n      case "pos":\n        return new _Selection.possel(model);\n    }\n  },\n\n  // allows normal JSON input\n  resetJSON: function resetJSON(arr) {\n    arr = arr.map(this._fromJSON);\n    return this.reset(arr);\n  },\n\n  // @returns array of all selected residues for a row\n  getBlocksForRow: function getBlocksForRow(seqId, maxLen) {\n    var selis = this.filter(function (el) {\n      return el.inRow(seqId);\n    });\n    var blocks = [];\n\n    var _loop = function _loop(i, seli) {\n      var seli = selis[i];\n      if (seli.attributes.type === "row") {\n        blocks = function () {\n          var result = [];\n          var i1 = 0;\n          if (0 <= maxLen) {\n            while (i1 <= maxLen) {\n              result.push(i1++);\n            }\n          } else {\n            while (i1 >= maxLen) {\n              result.push(i1--);\n            }\n          }\n          return result;\n        }();\n        return "break";\n      } else {\n        blocks = blocks.concat(function () {\n          var result = [];\n          var i1 = seli.attributes.xStart;\n          if (seli.attributes.xStart <= seli.attributes.xEnd) {\n            while (i1 <= seli.attributes.xEnd) {\n              result.push(i1++);\n            }\n          } else {\n            while (i1 >= seli.attributes.xEnd) {\n              result.push(i1--);\n            }\n          }\n          return result;\n        }());\n      }\n    };\n\n    for (var i = 0, seli; i < selis.length; i++) {\n      var _ret = _loop(i, seli);\n\n      if (_ret === "break") break;\n    }\n    return blocks;\n  },\n\n  // @returns array with all columns being selected\n  // example: 0-4... 12-14 selected -> [0,1,2,3,4,12,13,14]\n  getAllColumnBlocks: function getAllColumnBlocks(conf) {\n    var maxLen = conf.maxLen;\n    var withPos = conf.withPos;\n    var blocks = [];\n    var filtered = void 0;\n    if (conf.withPos) {\n      filtered = this.filter(function (el) {\n        return el.get(\'xStart\') != null;\n      });\n    } else {\n      filtered = this.filter(function (el) {\n        return el.get(\'type\') === "column";\n      });\n    }\n\n    var _loop2 = function _loop2(i, seli) {\n      var seli = filtered[i];\n      blocks = blocks.concat(function () {\n        var result = [];\n        var i1 = seli.attributes.xStart;\n        if (seli.attributes.xStart <= seli.attributes.xEnd) {\n          while (i1 <= seli.attributes.xEnd) {\n            result.push(i1++);\n          }\n        } else {\n          while (i1 >= seli.attributes.xEnd) {\n            result.push(i1--);\n          }\n        }\n        return result;\n      }());\n    };\n\n    for (var i = 0, seli; i < filtered.length; i++) {\n      _loop2(i, seli);\n    }\n    blocks = (0, _lodash.uniq)(blocks);\n    return blocks;\n  },\n\n  // inverts the current selection for columns\n  // @param rows [Array] all available seqId\n  invertRow: function invertRow(rows) {\n    var selRows = this.where({ type: "row" });\n    selRows = selRows.map(function (el) {\n      return el.attributes.seqId;\n    });\n    var inverted = (0, _lodash.filter)(rows, function (el) {\n      if (selRows.indexOf(el) >= 0) {\n        return false;\n      } // existing selection\n      return true;\n    });\n    // mass insert\n    var s = [];\n    for (var i = 0, el; i < inverted.length; i++) {\n      var el = inverted[i];\n      s.push(new _Selection.rowsel({ seqId: el }));\n    }\n    return this.reset(s);\n  },\n\n  // inverts the current selection for rows\n  // @param rows [Array] all available rows (0..max.length)\n  invertCol: function invertCol(columns) {\n    var selColumns = this.where({ type: "column" }).reduce(function (memo, el) {\n      return memo.concat(function () {\n        var result = [];\n        var i = el.attributes.xStart;\n        if (el.attributes.xStart <= el.attributes.xEnd) {\n          while (i <= el.attributes.xEnd) {\n            result.push(i++);\n          }\n        } else {\n          while (i >= el.attributes.xEnd) {\n            result.push(i--);\n          }\n        }\n        return result;\n      }());\n    }, []);\n    var inverted = (0, _lodash.filter)(columns, function (el) {\n      if (selColumns.indexOf(el) >= 0) {\n        // existing selection\n        return false;\n      }\n      return true;\n    });\n    // mass insert\n    if (inverted.length === 0) {\n      return;\n    }\n    var s = [];\n    var xStart = inverted[0];\n    var xEnd = xStart;\n    for (var i = 0, el; i < inverted.length; i++) {\n      el = inverted[i];\n      if (xEnd + 1 === el) {\n        // contiguous\n        xEnd = el;\n      } else {\n        // gap between\n        s.push(new _Selection.columnsel({ xStart: xStart, xEnd: xEnd }));\n        xStart = xEnd = el;\n      }\n    }\n    // check for last gap\n    if (xStart !== xEnd) {\n      s.push(new _Selection.columnsel({ xStart: xStart, xEnd: inverted[inverted.length - 1] }));\n    }\n    return this.reset(s);\n  },\n\n  // method to decide whether to start a new selection\n  // or append to the old one (depending whether CTRL was pressed)\n  _handleE: function _handleE(e, selection) {\n    if (e.ctrlKey || e.metaKey) {\n      return this.add(selection);\n    } else {\n      return this.reset([selection]);\n    }\n  },\n\n  // experimental reduce method for columns\n  _reduceColumns: function _reduceColumns() {\n    return this.each(function (el, index, arr) {\n      var cols = (0, _lodash.filter)(arr, function (el) {\n        return el.get(\'type\') === \'column\';\n      });\n      var xStart = el.get(\'xStart\');\n      var xEnd = el.get(\'xEnd\');\n\n      var lefts = (0, _lodash.filter)(cols, function (el) {\n        return el.get(\'xEnd\') === xStart - 1;\n      });\n      for (var i = 0, left; i < lefts.length; i++) {\n        var left = lefts[i];\n        left.set(\'xEnd\', xStart);\n      }\n\n      var rights = (0, _lodash.filter)(cols, function (el) {\n        return el.get(\'xStart\') === xEnd + 1;\n      });\n      for (var j = 0, right; j < rights.length; j++) {\n        var right = rights[j];\n        right.set(\'xStart\', xEnd);\n      }\n\n      if (lefts.length > 0 || rights.length > 0) {\n        console.log("removed el");\n        return el.collection.remove(el);\n      }\n    });\n  }\n});\nexports.default = SelectionManager;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/selection/SelectionCol.js?')},"./node_modules/@intermine/msa-viewer/lib/g/user.js":
/*!**********************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/user.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Config;\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\n// simple user config\nmodule.exports = Config = Model.extend({\n\n  defaults: { searchText: "" }\n\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/user.js?')},"./node_modules/@intermine/msa-viewer/lib/g/visOrdering.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/visOrdering.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Visibility;\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\n// visible areas\nmodule.exports = Visibility = Model.extend({\n\n  defaults:\n\n  // for the Stage\n  { searchBox: -10,\n    overviewBox: 30,\n    headerBox: -1,\n    alignmentBody: 0,\n    scaleSlider: 50\n  }\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/visOrdering.js?')},"./node_modules/@intermine/msa-viewer/lib/g/visibility.js":
/*!****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/visibility.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Visibility;\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\n// visible areas\nmodule.exports = Visibility = Model.extend({\n\n  defaults: { sequences: true,\n    markers: true,\n    metacell: false,\n    conserv: false,\n    overviewbox: false,\n    seqlogo: false,\n    gapHeader: false,\n    leftHeader: true,\n    scaleslider: false,\n\n    // about the labels\n    labels: true,\n    labelName: true,\n    labelId: true,\n    labelPartition: false,\n    labelCheckbox: false,\n\n    // meta stuff\n    metaGaps: true,\n    metaIdentity: true,\n    metaLinks: true\n  },\n\n  constructor: function constructor(attributes, options) {\n    this.calcDefaults(options.model);\n    return Model.apply(this, arguments);\n  },\n\n  initialize: function initialize() {\n\n    this.listenTo(this, "change:metaLinks change:metaIdentity change:metaGaps", function () {\n      return this.trigger("change:metacell");\n    }, this);\n\n    this.listenTo(this, "change:labelName change:labelId change:labelPartition change:labelCheckbox", function () {\n      return this.trigger("change:labels");\n    }, this);\n\n    return this.listenTo(this, "change:markers change:conserv change:seqlogo change:gapHeader", function () {\n      return this.trigger("change:header");\n    }, this);\n  },\n\n  calcDefaults: function calcDefaults(seqs) {\n    if (seqs.length > 0) {\n      var seq = seqs.at(0);\n      var ids = seq.get("ids");\n      if (ids !== undefined && Object.keys(ids).length === 0) {\n        return this.defaults.metaLinks = false;\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/visibility.js?')},"./node_modules/@intermine/msa-viewer/lib/g/zoomer.js":
/*!************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/g/zoomer.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Zoomer;\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n// pixel properties for some components\nmodule.exports = Zoomer = Model.extend({\n\n  constructor: function constructor(attributes, options) {\n    this.calcDefaults(options.model);\n    Model.apply(this, arguments);\n    this.g = options.g;\n\n    // events\n    this.listenTo(this, "change:labelIdLength change:labelNameLength change:labelPartLength change:labelCheckLength", function () {\n      return this.trigger("change:labelWidth", this.getLabelWidth());\n    }, this);\n    this.listenTo(this, "change:metaLinksWidth change:metaIdentWidth change:metaGapWidth", function () {\n      return this.trigger("change:metaWidth", this.getMetaWidth());\n    }, this);\n\n    return this;\n  },\n\n  defaults: {\n\n    // general\n    alignmentWidth: "auto",\n    alignmentHeight: 225,\n    columnWidth: 15,\n    rowHeight: 15,\n    autoResize: true, // only for the width\n\n    // labels\n    labelIdLength: 20,\n    labelNameLength: 100,\n    labelPartLength: 15,\n    labelCheckLength: 15,\n    labelFontsize: 13,\n    labelLineHeight: "13px",\n\n    // marker\n    markerFontsize: "10px",\n    stepSize: 1,\n    markerStepSize: 2,\n    markerHeight: 20,\n\n    // canvas\n    residueFont: "13", // in px\n    canvasEventScale: 1,\n    minLetterDrawSize: 11,\n\n    // overview box\n    boxRectHeight: 2,\n    boxRectWidth: 2,\n    overviewboxPaddingTop: 10,\n    overviewboxWidth: "fixed", // "auto" (fitting div) or "fixed"\n    overviewboxHeight: "fixed", // "fixed" or in px\n\n    // meta cell\n    metaGapWidth: 35,\n    metaIdentWidth: 40,\n    // metaLinksWidth: 25\n\n    // internal props\n    _alignmentScrollLeft: 0,\n    _alignmentScrollTop: 0\n  },\n\n  // sets some defaults, depending on the model\n  calcDefaults: function calcDefaults(model) {\n    var maxLen = model.getMaxLength();\n    if (maxLen < 200 && model.length < 30) {\n      this.defaults.boxRectWidth = this.defaults.boxRectHeight = 5;\n    }\n    return this;\n  },\n\n  // @param n [int] maxLength of all seqs\n  getAlignmentWidth: function getAlignmentWidth(n) {\n    if (this.get("autoResize") && n !== undefined) {\n      return this.get("columnWidth") * n;\n    }\n    if (this.get("alignmentWidth") === undefined || this.get("alignmentWidth") === "auto" || this.get("alignmentWidth") === 0) {\n      return this._adjustWidth();\n    } else {\n      return this.get("alignmentWidth");\n    }\n  },\n\n  // @param n [int] number of residues to scroll to the right\n  setLeftOffset: function setLeftOffset(n) {\n    var val = n;\n    val = Math.max(0, val);\n    val -= this.g.columns.calcHiddenColumns(val);\n    return this.set("_alignmentScrollLeft", val * this.get(\'columnWidth\'));\n  },\n\n  // @param n [int] row that should be on top\n  setTopOffset: function setTopOffset(n) {\n    var val = Math.max(0, n - 1);\n    var height = 0;\n    for (var i = 0; 0 < val ? i <= val : i >= val; 0 < val ? i++ : i--) {\n      var seq = this.model.at(i);\n      height += seq.attributes.height || 1;\n    }\n    return this.set("_alignmentScrollTop", height * this.get("rowHeight"));\n  },\n\n  // length of all elements left to the main sequence body: labels, metacell, ..\n  getLeftBlockWidth: function getLeftBlockWidth() {\n    var paddingLeft = 0;\n    if (this.g.vis.get("labels")) {\n      paddingLeft += this.getLabelWidth();\n    }\n    if (this.g.vis.get("metacell")) {\n      paddingLeft += this.getMetaWidth();\n    }\n    //paddingLeft += 15 # scroll bar\n    return paddingLeft;\n  },\n\n  getMetaWidth: function getMetaWidth() {\n    var val = 0;\n    if (this.g.vis.get("metaGaps")) {\n      val += this.get("metaGapWidth");\n    }\n    if (this.g.vis.get("metaIdentity")) {\n      val += this.get("metaIdentWidth");\n    }\n    if (this.g.vis.get("metaLinks")) {\n      val += this.get("metaLinksWidth");\n    }\n    return val;\n  },\n\n  getLabelWidth: function getLabelWidth() {\n    var val = 0;\n    if (this.g.vis.get("labelName")) {\n      val += this.get("labelNameLength");\n    }\n    if (this.g.vis.get("labelId")) {\n      val += this.get("labelIdLength");\n    }\n    if (this.g.vis.get("labelPartition")) {\n      val += this.get("labelPartLength");\n    }\n    if (this.g.vis.get("labelCheckbox")) {\n      val += this.get("labelCheckLength");\n    }\n    return val;\n  },\n\n  _adjustWidth: function _adjustWidth() {\n    if (!(this.el !== undefined && this.model !== undefined)) {\n      return;\n    }\n    if (this.el.parentNode != null && this.el.parentNode.offsetWidth !== 0) {\n      var parentWidth = this.el.parentNode.offsetWidth;\n    } else {\n      parentWidth = document.body.clientWidth - 35;\n    }\n\n    // TODO: dirty hack\n    var maxWidth = parentWidth - this.getLeftBlockWidth();\n    var calcWidth = this.getAlignmentWidth(this.model.getMaxLength() - this.g.columns.get(\'hidden\').length);\n    var val = Math.min(maxWidth, calcWidth);\n    // round to a valid AA box\n    val = Math.floor(val / this.get("columnWidth")) * this.get("columnWidth");\n\n    //@set "alignmentWidth", val\n    return this.attributes.alignmentWidth = val;\n  },\n\n  autoResize: function autoResize() {\n    if (this.get("autoResize")) {\n      return this._adjustWidth(this.el, this.model);\n    }\n  },\n\n  // max is the maximal allowed height\n  autoHeight: function autoHeight(max) {\n    // TODO!\n    // make seqlogo height configurable\n    var val = this.getMaxAlignmentHeight();\n    if (max !== undefined && max > 0) {\n      val = Math.min(val, max);\n    }\n\n    return this.set("alignmentHeight", val);\n  },\n\n  setEl: function setEl(el, model) {\n    this.el = el;\n    return this.model = model;\n  },\n\n  // updates both scroll properties (if needed)\n  _checkScrolling: function _checkScrolling(scrollObj, opts) {\n    var xScroll = scrollObj[0];\n    var yScroll = scrollObj[1];\n\n    this.set("_alignmentScrollLeft", xScroll, opts);\n    return this.set("_alignmentScrollTop", yScroll, opts);\n  },\n\n  getMaxAlignmentHeight: function getMaxAlignmentHeight() {\n    var height = 0;\n    this.model.each(function (seq) {\n      return height += seq.attributes.height || 1;\n    });\n\n    return height * this.get("rowHeight");\n  },\n\n  getMaxAlignmentWidth: function getMaxAlignmentWidth() {\n    return this.model.getMaxLength() * this.get("columnWidth");\n  }\n});\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/g/zoomer.js?')},"./node_modules/@intermine/msa-viewer/lib/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/index.js ***!
  \*********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.version = exports.io = exports.$ = exports.boneView = exports.view = exports.selcol = exports.selection = exports.utils = exports.menu = exports.model = exports.msa = undefined;\n\nvar _Selection = __webpack_require__(/*! ./g/selection/Selection */ "./node_modules/@intermine/msa-viewer/lib/g/selection/Selection.js");\n\nObject.defineProperty(exports, "selection", {\n    enumerable: true,\n    get: function get() {\n        return _interopRequireDefault(_Selection).default;\n    }\n});\n\nvar _SelectionCol = __webpack_require__(/*! ./g/selection/SelectionCol */ "./node_modules/@intermine/msa-viewer/lib/g/selection/SelectionCol.js");\n\nObject.defineProperty(exports, "selcol", {\n    enumerable: true,\n    get: function get() {\n        return _interopRequireDefault(_SelectionCol).default;\n    }\n});\n\nvar _backboneViewj = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\n\nObject.defineProperty(exports, "view", {\n    enumerable: true,\n    get: function get() {\n        return _interopRequireDefault(_backboneViewj).default;\n    }\n});\n\nvar _backboneChilds = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n\nObject.defineProperty(exports, "boneView", {\n    enumerable: true,\n    get: function get() {\n        return _interopRequireDefault(_backboneChilds).default;\n    }\n});\n\nvar _jbone = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\n\nObject.defineProperty(exports, "$", {\n    enumerable: true,\n    get: function get() {\n        return _interopRequireDefault(_jbone).default;\n    }\n});\n\nvar _msa = __webpack_require__(/*! ./msa */ "./node_modules/@intermine/msa-viewer/lib/msa.js");\n\nvar _msa2 = _interopRequireDefault(_msa);\n\nvar _model2 = __webpack_require__(/*! ./model */ "./node_modules/@intermine/msa-viewer/lib/model/index.js");\n\nvar _model = _interopRequireWildcard(_model2);\n\nvar _menu2 = __webpack_require__(/*! ./menu */ "./node_modules/@intermine/msa-viewer/lib/menu/index.js");\n\nvar _menu = _interopRequireWildcard(_menu2);\n\nvar _utils2 = __webpack_require__(/*! ./utils */ "./node_modules/@intermine/msa-viewer/lib/utils/index.js");\n\nvar _utils = _interopRequireWildcard(_utils2);\n\nvar _bio = __webpack_require__(/*! bio.io */ "./node_modules/bio.io/lib/index.js");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MSAWrapper = function MSAWrapper() {\n    var msa = function msa(args) {\n        return _msa2.default.apply(this, args);\n    };\n    msa.prototype = _msa2.default.prototype;\n    return new msa(arguments);\n};\nexports.default = MSAWrapper;\nexports.msa = _msa2.default;\n\n// models\n\nexports.model = _model;\n\n// extra plugins, extensions\n\nexports.menu = _menu;\nexports.utils = _utils;\n\n// probably needed more often\n\n\n// parser (are currently bundled - so we can also expose them)\n\nvar io = {\n    xhr: __webpack_require__(/*! xhr */ "./node_modules/xhr/index.js"),\n    fasta: _bio.fasta,\n    clustal: _bio.clustal,\n    gff: _bio.gff\n};\n\nexports.io = io;\n\n// version will be automatically injected by webpack\n// MSA_VERSION is only defined if loaded via webpack\n\nvar VERSION = "imported";\nif (typeof MSA_VERSION !== "undefined") {\n    VERSION = MSA_VERSION;\n}\n\nvar version = exports.version = VERSION;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/index.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/defaultmenu.js":
/*!********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/defaultmenu.js ***!
  \********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _ImportMenu = __webpack_require__(/*! ./views/ImportMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/ImportMenu.js");\n\nvar _ImportMenu2 = _interopRequireDefault(_ImportMenu);\n\nvar _FilterMenu = __webpack_require__(/*! ./views/FilterMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/FilterMenu.js");\n\nvar _FilterMenu2 = _interopRequireDefault(_FilterMenu);\n\nvar _SelectionMenu = __webpack_require__(/*! ./views/SelectionMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/SelectionMenu.js");\n\nvar _SelectionMenu2 = _interopRequireDefault(_SelectionMenu);\n\nvar _VisMenu = __webpack_require__(/*! ./views/VisMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/VisMenu.js");\n\nvar _VisMenu2 = _interopRequireDefault(_VisMenu);\n\nvar _ColorMenu = __webpack_require__(/*! ./views/ColorMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/ColorMenu.js");\n\nvar _ColorMenu2 = _interopRequireDefault(_ColorMenu);\n\nvar _OrderingMenu = __webpack_require__(/*! ./views/OrderingMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/OrderingMenu.js");\n\nvar _OrderingMenu2 = _interopRequireDefault(_OrderingMenu);\n\nvar _ExtraMenu = __webpack_require__(/*! ./views/ExtraMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/ExtraMenu.js");\n\nvar _ExtraMenu2 = _interopRequireDefault(_ExtraMenu);\n\nvar _ExportMenu = __webpack_require__(/*! ./views/ExportMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/ExportMenu.js");\n\nvar _ExportMenu2 = _interopRequireDefault(_ExportMenu);\n\nvar _HelpMenu = __webpack_require__(/*! ./views/HelpMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/HelpMenu.js");\n\nvar _HelpMenu2 = _interopRequireDefault(_HelpMenu);\n\nvar _DebugMenu = __webpack_require__(/*! ./views/DebugMenu */ "./node_modules/@intermine/msa-viewer/lib/menu/views/DebugMenu.js");\n\nvar _DebugMenu2 = _interopRequireDefault(_DebugMenu);\n\nvar _settings = __webpack_require__(/*! ./settings */ "./node_modules/@intermine/msa-viewer/lib/menu/settings.js");\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n\n// menu views\n\n\n// this very basic menu demonstrates calls to the MSA component\nvar MenuView = boneView.extend({\n\n  initialize: function initialize(data) {\n    if (!data.msa) {\n      throw new Error("No msa instance provided. Please provide .msa");\n    }\n    this.msa = data.msa;\n\n    // add menu config to the global object\n    this.msa.g.menuconfig = new _settings2.default(data.menu);\n\n    this.addView("10_import", new _ImportMenu2.default({ model: this.msa.seqs, g: this.msa.g, msa: this.msa }));\n    this.addView("15_ordering", new _OrderingMenu2.default({ model: this.msa.seqs, g: this.msa.g }));\n    this.addView("20_filter", new _FilterMenu2.default({ model: this.msa.seqs, g: this.msa.g }));\n    this.addView("30_selection", new _SelectionMenu2.default({ model: this.msa.seqs, g: this.msa.g }));\n    this.addView("40_vis", new _VisMenu2.default({ model: this.msa.seqs, g: this.msa.g }));\n    this.addView("50_color", new _ColorMenu2.default({ model: this.msa.seqs, g: this.msa.g }));\n    this.addView("70_extra", new _ExtraMenu2.default({ model: this.msa.seqs, g: this.msa.g, msa: this.msa }));\n    this.addView("80_export", new _ExportMenu2.default({ model: this.msa.seqs, g: this.msa.g, msa: this.msa }));\n    this.addView("90_help", new _HelpMenu2.default({ g: this.msa.g }));\n    if (this.msa.g.config.get("debug")) {\n      return this.addView("95_debug", new _DebugMenu2.default({ g: this.msa.g }));\n    }\n  },\n\n  render: function render() {\n    this.renderSubviews();\n    // other\n    this.el.setAttribute("class", "smenubar");\n    return this.el.appendChild(document.createElement("p"));\n  }\n});\nexports.default = MenuView;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/defaultmenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/index.js ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _defaultmenu = __webpack_require__(/*! ./defaultmenu */ "./node_modules/@intermine/msa-viewer/lib/menu/defaultmenu.js");\n\nObject.defineProperty(exports, "defaultmenu", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_defaultmenu).default;\n  }\n});\n\nvar _menubuilder = __webpack_require__(/*! ./menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nObject.defineProperty(exports, "menubuilder", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_menubuilder).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/index.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js":
/*!********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js ***!
  \********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menulib = __webpack_require__(/*! ./menulib */ "./node_modules/@intermine/msa-viewer/lib/menu/menulib.js");\n\nvar _menulib2 = _interopRequireDefault(_menulib);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MenuBuilder = _menulib2.default.extend({\n\n  buildDOM: function buildDOM() {\n    this.on("new:node", this.buildNode);\n    this.on("new:button", this.buildButton);\n    this.on("new:menu", this.buildMenu);\n    return _menulib2.default.prototype.buildDOM.call(this);\n  },\n\n  buildNode: function buildNode(li) {\n    if (this.g != null) {\n      return li.style.lineHeight = this.g.menuconfig.get("menuItemLineHeight");\n    }\n  },\n\n  buildButton: function buildButton(btn) {\n    if (this.g != null) {\n      btn.style.fontSize = this.g.menuconfig.get("menuFontsize");\n      btn.style.marginLeft = this.g.menuconfig.get("menuMarginLeft");\n      return btn.style.padding = this.g.menuconfig.get("menuPadding");\n    }\n  },\n\n  buildMenu: function buildMenu(menu) {\n    if (this.g != null) {\n      return menu.style.fontSize = this.g.menuconfig.get("menuItemFontsize");\n    }\n  }\n});\nexports.default = MenuBuilder;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/menulib.js":
/*!****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/menulib.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar jbone = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\n\n// This could has been inlined from https://github.com/wilzbach/menu-builder\n// It is intended to be replaced with in-MSA controls\n// see https://github.com/wilzbach/msa/issues/149 for more details\n\nvar MenuBuilder = view.extend({\n  initialize: function initialize(opts) {\n    this._nodes = [];\n    this.name = opts.name || "";\n    this.el.className += "smenubar";\n  },\n  render: function render() {\n\n    // remove all childs\n    var fc = this.el.firstChild;\n    while (fc) {\n      this.el.removeChild(fc);\n      fc = this.el.firstChild;\n    }\n\n    // replace child\n    this.el.appendChild(this.buildDOM());\n  },\n  setName: function setName(name) {\n    this.name = name;\n  },\n  addNode: function addNode(label, callback, opts) {\n    var style = void 0;\n    if (opts != null) {\n      style = opts.style;\n    }\n    if (this._nodes == null) {\n      this._nodes = [];\n    }\n    this._nodes.push({\n      label: label,\n      callback: callback,\n      style: style\n    });\n  },\n\n  getNode: function getNode(label) {\n    var rNode = void 0;\n    this._nodes.forEach(function (el) {\n      if (el.label === label) {\n        rNode = el;\n      }\n    });\n    return rNode;\n  },\n\n  modifyNode: function modifyNode(label, callback, opts) {\n    var node = this.getNode(label);\n    node.callback = callback || node.callback;\n    opts = opts || {};\n    node.style = opts.style || node.style;\n  },\n\n  renameNode: function renameNode(label, newLabel) {\n    var node = this.getNode(label);\n    node.label = newLabel || node.label;\n  },\n\n  removeNode: function removeNode(label) {\n    var node = this.getNode(label);\n    this._nodes.splice(this._nodes.indexOf(node), 1);\n  },\n\n  removeAllNodes: function removeAllNodes() {\n    this._nodes = [];\n  },\n\n  buildDOM: function buildDOM() {\n    var span = document.createElement("span");\n    span.appendChild(this._buildM({\n      nodes: this._nodes,\n      name: this.name\n    }));\n    return span;\n  },\n  _buildM: function _buildM(data) {\n    var displayedButton = void 0,\n        frag = void 0,\n        key = void 0,\n        li = void 0,\n        node = void 0,\n        style = void 0,\n        _ref = void 0;\n    var nodes = data.nodes;\n    var name = data.name;\n    var menu = document.createElement("div");\n    menu.className = "smenu-dropdown smenu-dropdown-tip";\n    menu.style.display = "none";\n\n    var menuUl = document.createElement("ul");\n    menuUl.className = "smenu-dropdown-menu";\n\n    // currently we support one-level\n    for (var i = 0, _len = nodes.length; i < _len; i++) {\n      node = nodes[i];\n      li = document.createElement("li");\n      li.textContent = node.label;\n      _ref = node.style;\n      for (key in _ref) {\n        style = _ref[key];\n        li.style[key] = style;\n      }\n      li.addEventListener("click", node.callback);\n      this.trigger("new:node", li);\n      menuUl.appendChild(li);\n    }\n    this.trigger("new:menu", menuUl);\n    menu.appendChild(menuUl);\n\n    displayedButton = document.createElement("a");\n    displayedButton.textContent = name;\n    displayedButton.className = "smenubar_alink";\n    this.trigger("new:button", displayedButton);\n\n    // HACK to be able to hide the submenu\n    // listens globally for click events\n    jbone(displayedButton).on("click", function (_this) {\n      return function (e) {\n        _this._showMenu(e, menu, displayedButton);\n        return window.setTimeout(function () {\n          return jbone(document.body).one("click", function (e) {\n            return menu.style.display = "none";\n          });\n        }, 5);\n      };\n    }(this));\n\n    frag = document.createDocumentFragment();\n    frag.appendChild(menu);\n    frag.appendChild(displayedButton);\n    return frag;\n  },\n\n  // internal method to display the lower menu on a click\n  _showMenu: function _showMenu(e, menu, target) {\n    var rect = void 0;\n    menu.style.display = "block";\n    menu.style.position = "absolute";\n    rect = target.getBoundingClientRect();\n    //menu.style.left = rect.left + "px";\n    //menu.style.top = (rect.top + target.offsetHeight) + "px";\n  }\n});\nexports.default = MenuBuilder;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/menulib.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/settings.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/settings.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\nvar MenuSettings = Model.extend({\n    constructor: function constructor(attributes, options) {\n        if (attributes == "small") {\n            attributes = this.small;\n        }\n        return Model.apply(this, [attributes]);\n    },\n    small: {\n        menuFontsize: "12px"\n    },\n    defaults: {\n        menuFontsize: "14px",\n        menuItemFontsize: "14px",\n        menuItemLineHeight: "14px",\n        menuMarginLeft: "3px",\n        menuPadding: "3px 4px 3px 4px"\n    }\n});\nexports.default = MenuSettings;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/settings.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/ColorMenu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/ColorMenu.js ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\nvar ColorMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.el.style.display = "inline-block";\n    return this.listenTo(this.g.colorscheme, "change", function () {\n      return this.render();\n    });\n  },\n\n  render: function render() {\n    var menuColor = this.setName("Color scheme");\n    this.removeAllNodes();\n\n    var colorschemes = this.getColorschemes();\n    for (var i = 0, scheme; i < colorschemes.length; i++) {\n      scheme = colorschemes[i];\n      this.addScheme(menuColor, scheme);\n    }\n\n    // text = "Background"\n    // if @g.colorscheme.get("colorBackground")\n    //   text = "Hide " + text\n    // else\n    //   text = "Show " + text\n\n    // @addNode text, =>\n    //   @g.colorscheme.set "colorBackground", !@g.colorscheme.get("colorBackground")\n\n    this.grey(menuColor);\n\n    // TODO: make more efficient\n    dom.removeAllChilds(this.el);\n    this.el.appendChild(this.buildDOM());\n    return this;\n  },\n\n  addScheme: function addScheme(menuColor, scheme) {\n    var _this = this;\n\n    var style = {};\n    var current = this.g.colorscheme.get("scheme");\n    if (current === scheme.id) {\n      style.backgroundColor = "#77ED80";\n    }\n\n    return this.addNode(scheme.name, function () {\n      _this.g.colorscheme.set("scheme", scheme.id);\n    }, {\n      style: style\n    });\n  },\n\n  getColorschemes: function getColorschemes() {\n    var schemes = [];\n    schemes.push({ name: "Taylor", id: "taylor" });\n    schemes.push({ name: "Buried", id: "buried" });\n    schemes.push({ name: "Cinema", id: "cinema" });\n    schemes.push({ name: "Clustal", id: "clustal" });\n    schemes.push({ name: "Clustal2", id: "clustal2" });\n    schemes.push({ name: "Helix", id: "helix" });\n    schemes.push({ name: "Hydrophobicity", id: "hydro" });\n    schemes.push({ name: "Lesk", id: "lesk" });\n    schemes.push({ name: "MAE", id: "mae" });\n    schemes.push({ name: "Nucleotide", id: "nucleotide" });\n    schemes.push({ name: "Purine", id: "purine" });\n    schemes.push({ name: "PID", id: "pid" });\n    schemes.push({ name: "Strand", id: "strand" });\n    schemes.push({ name: "Turn", id: "turn" });\n    schemes.push({ name: "Zappo", id: "zappo" });\n    schemes.push({ name: "No color", id: "foo" });\n    return schemes;\n  },\n\n  grey: function grey(menuColor) {\n\n    // greys all lowercase letters\n    // @addNode "Shade", =>\n    //   @g.colorscheme.set "showLowerCase", false\n    //   @model.each (seq) ->\n    //     residues = seq.get "seq"\n    //     grey = []\n    //     _.each residues, (el, index) ->\n    //       if el is el.toLowerCase()\n    //         grey.push index\n    //     seq.set "grey", grey\n\n    // @addNode "Shade by threshold", =>\n    //   threshold = prompt "Enter threshold (in percent)", 20\n    //   threshold = threshold / 100\n    //   maxLen = @model.getMaxLength()\n    //   # TODO: cache\n    //   conserv = @g.stats.scale @g.stats.conservation()\n    //   grey = []\n    //   for i in [0.. maxLen - 1]\n    //     if conserv[i] < threshold\n    //       grey.push i\n    //   @model.each (seq) ->\n    //     seq.set "grey", grey\n\n    // @addNode "Shade selection", =>\n    //   maxLen = @model.getMaxLength()\n    //   @model.each (seq) =>\n    //     blocks = @g.selcol.getBlocksForRow(seq.get("id"),maxLen)\n    //     seq.set "grey", blocks\n\n    // @addNode "Reset shade", =>\n    //   @g.colorscheme.set "showLowerCase", true\n    //   @model.each (seq) ->\n    //     seq.set "grey", []\n  }\n});\nexports.default = ColorMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/ColorMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/DebugMenu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/DebugMenu.js ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DebugMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    return this.el.style.display = "inline-block";\n  },\n\n  render: function render() {\n    var _this = this;\n\n    this.setName("Debug");\n\n    this.addNode("Get the code", function () {\n      return window.open("https://github.com/wilzbach/msa");\n    });\n\n    this.addNode("Toggle mouseover events", function () {\n      _this.g.config.set("registerMouseHover", !_this.g.config.get("registerMouseHover"));\n      return _this.g.onAll(function () {\n        return console.log(arguments);\n      });\n    });\n\n    this.addNode("Minimized width", function () {\n      return _this.g.zoomer.set("alignmentWidth", 600);\n    });\n    this.addNode("Minimized height", function () {\n      return _this.g.zoomer.set("alignmentHeight", 120);\n    });\n\n    this.el.appendChild(this.buildDOM());\n    return this;\n  }\n});\nexports.default = DebugMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/DebugMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/ExportMenu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/ExportMenu.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nvar _exporter = __webpack_require__(/*! ../../utils/exporter */ "./node_modules/@intermine/msa-viewer/lib/utils/exporter.js");\n\nvar _exporter2 = _interopRequireDefault(_exporter);\n\nvar _bio = __webpack_require__(/*! bio.io */ "./node_modules/bio.io/lib/index.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FastaExporter = _bio.fasta.write;\n\nvar ShareSym = "\\u21AA";\n\nvar ExportMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.msa = data.msa;\n    return this.el.style.display = "inline-block";\n  },\n\n  render: function render() {\n    var _this = this;\n\n    this.setName("Export");\n\n    this.addNode("Share view (URL)" + ShareSym, function () {\n      return _exporter2.default.shareLink(_this.msa, function (link) {\n        return window.open(link, \'_blank\');\n      });\n    });\n\n    this.addNode("View in Jalview", function () {\n      var url = _this.g.config.get(\'url\');\n      if (!(typeof url !== "undefined" && url !== null)) {\n        return alert("Sequence weren\'t imported via an URL");\n      } else {\n        if (url.indexOf("localhost" || false)) {\n          return _exporter2.default.publishWeb(_this.msa, function (link) {\n            return _exporter2.default.openInJalview(link, _this.g.colorscheme.get("scheme"));\n          });\n        } else {\n          return _exporter2.default.openInJalview(url, _this.g.colorscheme.get("scheme"));\n        }\n      }\n    });\n\n    this.addNode("Export alignment (FASTA)", function () {\n      return _exporter2.default.saveAsFile(_this.msa, "all.fasta");\n    });\n\n    this.addNode("Export alignment (URL)", function () {\n      return _exporter2.default.publishWeb(_this.msa, function (link) {\n        return window.open(link, \'_blank\');\n      });\n    });\n\n    this.addNode("Export selected sequences (FASTA)", function () {\n      return _exporter2.default.saveSelection(_this.msa, "selection.fasta");\n    });\n\n    this.addNode("Export features (GFF)", function () {\n      return _exporter2.default.saveAnnots(_this.msa, "features.gff3");\n    });\n\n    this.addNode("Export MSA image (PNG)", function () {\n      return _exporter2.default.saveAsImg(_this.msa, "biojs-msa.png");\n    });\n\n    this.el.appendChild(this.buildDOM());\n    return this;\n  }\n});\nexports.default = ExportMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/ExportMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/ExtraMenu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/ExtraMenu.js ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nvar _Sequence = __webpack_require__(/*! ../../model/Sequence */ "./node_modules/@intermine/msa-viewer/lib/model/Sequence.js");\n\nvar _Sequence2 = _interopRequireDefault(_Sequence);\n\nvar _loader = __webpack_require__(/*! ../../utils/loader */ "./node_modules/@intermine/msa-viewer/lib/utils/loader.js");\n\nvar _loader2 = _interopRequireDefault(_loader);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar xhr = __webpack_require__(/*! xhr */ "./node_modules/xhr/index.js");\n\nvar ExtraMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.el.style.display = "inline-block";\n    return this.msa = data.msa;\n  },\n\n  render: function render() {\n    var _this = this;\n\n    this.setName("Extras");\n    var stats = this.g.stats;\n    var msa = this.msa;\n    this.addNode("Add consensus seq", function () {\n      var con = stats.consensus();\n      var seq = new _Sequence2.default({\n        seq: con,\n        id: "0c",\n        name: "Consenus"\n      });\n      _this.model.add(seq);\n      _this.model.setRef(seq);\n      _this.model.comparator = function (seq) {\n        return !seq.get("ref");\n      };\n      return _this.model.sort();\n    });\n\n    // @addNode "Calc Tree", ->\n    //   # this is a very experimental feature\n    //   # TODO: exclude msa & tnt in the adapter package\n    //   newickStr = ""\n    //\n    //   cbs = Loader.joinCb ->\n    //     msa.u.tree.showTree nwkData\n    //   , 2, @\n    //\n    //   msa.u.tree.loadTree cbs\n    //   # load fake tree\n    //   nwkData =\n    //     name: "root",\n    //     children: [\n    //       name: "c1",\n    //       branch_length: 4\n    //       children: msa.seqs.filter (f,i) ->  i % 2 is 0\n    //     ,\n    //       name: "c2",\n    //       children: msa.seqs.filter (f,i) ->  i % 2 is 1\n    //       branch_length: 4\n    //     ]\n    //   msa.seqs.each (s) ->\n    //     s.set "branch_length", 2\n    //   cbs()\n\n    this.addNode("Jump to a column", function () {\n      var offset = prompt("Column", "20");\n      if (offset < 0 || offset > _this.model.getMaxLength() || isNaN(offset)) {\n        alert("invalid column");\n        return;\n      }\n      return _this.g.zoomer.setLeftOffset(offset);\n    });\n\n    this.el.appendChild(this.buildDOM());\n    return this;\n  }\n});\nexports.default = ExtraMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/ExtraMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/FilterMenu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/FilterMenu.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FilterMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    return this.el.style.display = "inline-block";\n  },\n\n  render: function render() {\n    var _this = this;\n\n    this.setName("Filter");\n    this.addNode("Hide columns by threshold", function (e) {\n      var threshold = prompt("Enter threshold (in percent)", 20);\n      threshold = threshold / 100;\n      var maxLen = _this.model.getMaxLength();\n      var hidden = [];\n      // TODO: cache this value\n      var conserv = _this.g.stats.scale(_this.g.stats.conservation());\n      var end = maxLen - 1;\n      for (var i = 0; i <= end; i++) {\n        if (conserv[i] < threshold) {\n          hidden.push(i);\n        }\n      }\n      return _this.g.columns.set("hidden", hidden);\n    });\n\n    this.addNode("Hide columns by selection", function () {\n      var hiddenOld = _this.g.columns.get("hidden");\n      var hidden = hiddenOld.concat(_this.g.selcol.getAllColumnBlocks({ maxLen: _this.model.getMaxLength(), withPos: true }));\n      _this.g.selcol.reset([]);\n      return _this.g.columns.set("hidden", hidden);\n    });\n\n    this.addNode("Hide columns by gaps", function () {\n      var threshold = prompt("Enter threshold (in percent)", 20);\n      threshold = threshold / 100;\n      var maxLen = _this.model.getMaxLength();\n      var hidden = [];\n      var end = maxLen - 1;\n\n      var _loop = function _loop(i) {\n        var gaps = 0;\n        var total = 0;\n        _this.model.each(function (el) {\n          if (el.get(\'seq\')[i] === "-") {\n            gaps++;\n          }\n          return total++;\n        });\n        var gapContent = gaps / total;\n        if (gapContent > threshold) {\n          hidden.push(i);\n        }\n      };\n\n      for (var i = 0; i <= end; i++) {\n        _loop(i);\n      }\n      return _this.g.columns.set("hidden", hidden);\n    });\n\n    this.addNode("Hide seqs by identity", function () {\n      var threshold = prompt("Enter threshold (in percent)", 20);\n      threshold = threshold / 100;\n      return _this.model.each(function (el) {\n        if (el.get(\'identity\') < threshold) {\n          return el.set(\'hidden\', true);\n        }\n      });\n    });\n\n    this.addNode("Hide seqs by selection", function () {\n      var hidden = _this.g.selcol.where({ type: "row" });\n      var ids = hidden.map(function (el) {\n        return el.get(\'seqId\');\n      });\n      _this.g.selcol.reset([]);\n      return _this.model.each(function (el) {\n        if (ids.indexOf(el.get(\'id\')) >= 0) {\n          return el.set(\'hidden\', true);\n        }\n      });\n    });\n\n    this.addNode("Hide seqs by gaps", function () {\n      var threshold = prompt("Enter threshold (in percent)", 40);\n      return _this.model.each(function (el, i) {\n        var seq = el.get(\'seq\');\n        var gaps = seq.reduce(function (memo, c) {\n          return c === \'-\' ? ++memo : undefined;\n        }, 0);\n        if (gaps > threshold) {\n          return el.set(\'hidden\', true);\n        }\n      });\n    });\n\n    this.addNode("Reset", function () {\n      _this.g.columns.set("hidden", []);\n      return _this.model.each(function (el) {\n        if (el.get(\'hidden\')) {\n          return el.set(\'hidden\', false);\n        }\n      });\n    });\n\n    this.el.appendChild(this.buildDOM());\n    return this;\n  }\n});\nexports.default = FilterMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/FilterMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/HelpMenu.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/HelpMenu.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HelpMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    return this.g = data.g;\n  },\n\n  render: function render() {\n    this.setName("Help");\n    this.addNode("About the project", function () {\n      return window.open("https://github.com/wilzbach/msa");\n    });\n    this.addNode("Report issues", function () {\n      return window.open("https://github.com/wilzbach/msa/issues");\n    });\n    this.addNode("User manual", function () {\n      return window.open("https://github.com/wilzbach/msa/wiki/User-manual");\n    });\n    this.el.style.display = "inline-block";\n    this.el.appendChild(this.buildDOM());\n    return this;\n  }\n});\nexports.default = HelpMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/HelpMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/ImportMenu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/ImportMenu.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar k = __webpack_require__(/*! koala-js */ "./node_modules/koala-js/index.js");\n\nvar ImportMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.el.style.display = "inline-block";\n    return this.msa = data.msa;\n  },\n\n  render: function render() {\n    var _this = this;\n\n    var msa = this.msa;\n    var uploader = k.mk("input");\n    uploader.type = "file";\n    uploader.style.display = "none";\n    //uploader.accept\n    // http://www.w3schools.com/jsref/prop_fileupload_accept.asp\n    // for now we allow multiple files\n    uploader.multiple = true;\n    uploader.addEventListener("change", function () {\n      var files = uploader.files || [];\n      return msa.u.file.importFiles(files);\n    });\n\n    this.el.appendChild(uploader);\n\n    var filetypes = "(Fasta, Clustal, GFF, Jalview features, Newick)";\n\n    this.setName("Import");\n    this.addNode("URL", function (e) {\n      var url = prompt("URL " + filetypes, "http://rostlab.org/~goldberg/clustalw2-I20140818-215249-0556-53699878-pg.clustalw");\n      if (url.length > 5) {\n        return _this.msa.u.file.importURL(url, function () {});\n      }\n    });\n    // mass update on zoomer\n    //zoomer = @g.zoomer.toJSON()\n    //#zoomer.textVisible = false\n    //#zoomer.columnWidth = 4\n    //zoomer.boxRectHeight = 2\n    //zoomer.boxRectWidth = 2\n    //@g.zoomer.set zoomer\n\n    this.addNode("From file " + filetypes, function () {\n      return uploader.click();\n    });\n\n    this.addNode("Drag & Drop", function () {\n      return alert("Yep. Just drag & drop your file " + filetypes);\n    });\n\n    this.el.appendChild(this.buildDOM());\n    return this;\n  }\n});\nexports.default = ImportMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/ImportMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/OrderingMenu.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/OrderingMenu.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\nvar arrowUp = "\\u2191";\nvar arrowDown = "\\u2193";\n\nvar OrderingMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.order = "ID";\n    return this.el.style.display = "inline-block";\n  },\n\n  setOrder: function setOrder(order) {\n    this.order = order;\n    return this.render();\n  },\n\n  // TODO: make more generic\n  render: function render() {\n    this.setName("Sorting");\n    this.removeAllNodes();\n\n    var comps = this.getComparators();\n    for (var i = 0, m; i < comps.length; i++) {\n      m = comps[i];\n      this._addNode(m);\n    }\n\n    var el = this.buildDOM();\n\n    // TODO: make more efficient\n    dom.removeAllChilds(this.el);\n    this.el.appendChild(el);\n    return this;\n  },\n\n  _addNode: function _addNode(m) {\n    var _this = this;\n\n    var text = m.text;\n    var style = {};\n    if (text === this.order) {\n      style.backgroundColor = "#77ED80";\n    }\n    return this.addNode(text, function () {\n      if (m.precode != null) {\n        m.precode();\n      }\n      _this.model.comparator = m.comparator;\n      _this.model.sort();\n      return _this.setOrder(m.text);\n    }, {\n      style: style\n    });\n  },\n\n\n  getComparators: function getComparators() {\n    var _this2 = this;\n\n    var models = [];\n\n    models.push({ text: "ID " + arrowUp, comparator: "id" });\n\n    models.push({ text: "ID " + arrowDown, comparator: function comparator(a, b) {\n        // auto converts to string for localeCompare\n        return -("" + a.get("id")).localeCompare("" + b.get("id"), [], { numeric: true });\n      } });\n\n    models.push({ text: "Label " + arrowUp, comparator: "name" });\n\n    models.push({ text: "Label " + arrowDown, comparator: function comparator(a, b) {\n        return -a.get("name").localeCompare(b.get("name"));\n      } });\n\n    models.push({ text: "Seq " + arrowUp, comparator: "seq" });\n\n    models.push({ text: "Seq " + arrowDown, comparator: function comparator(a, b) {\n        return -a.get("seq").localeCompare(b.get("seq"));\n      } });\n\n    var setIdent = function setIdent() {\n      return _this2.ident = _this2.g.stats.identity();\n    };\n\n    var setGaps = function setGaps() {\n      _this2.gaps = {};\n      return _this2.model.each(function (el) {\n        var seq = el.attributes.seq;\n        return _this2.gaps[el.id] = (seq.reduce(function (memo, c) {\n          return c === \'-\' ? ++memo : undefined;\n        }), 0) / seq.length;\n      });\n    };\n\n    models.push({ text: "Identity " + arrowUp, comparator: function comparator(a, b) {\n        var val = _this2.ident[a.id] - _this2.ident[b.id];\n        console.log(_this2.ident[a.id], _this2.ident[b.id]);\n        if (val > 0) {\n          return 1;\n        }\n        if (val < 0) {\n          return -1;\n        }\n        return 0;\n      }, precode: setIdent });\n\n    models.push({ text: "Identity " + arrowDown, comparator: function comparator(a, b) {\n        var val = _this2.ident[a.id] - _this2.ident[b.id];\n        if (val > 0) {\n          return -1;\n        }\n        if (val < 0) {\n          return 1;\n        }\n        return 0;\n      }, precode: setIdent });\n\n    models.push({ text: "Gaps " + arrowUp, comparator: function comparator(a, b) {\n        var val = _this2.gaps[a.id] - _this2.gaps[b.id];\n        if (val > 0) {\n          return 1;\n        }\n        if (val < 0) {\n          return -1;\n        }\n        return 0;\n      }, precode: setGaps });\n\n    models.push({ text: "Gaps " + arrowDown, comparator: function comparator(a, b) {\n        var val = _this2.gaps[a.id] - _this2.gaps[b.id];\n        if (val < 0) {\n          return 1;\n        }\n        if (val > 0) {\n          return -1;\n        }\n        return 0;\n      }, precode: setGaps });\n\n    models.push({ text: "Consensus to top", comparator: function comparator(seq) {\n        return !seq.get("ref");\n      }\n    });\n\n    return models;\n  }\n});\nexports.default = OrderingMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/OrderingMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/SelectionMenu.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/SelectionMenu.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SelectionMenu = _menubuilder2.default.extend({\n  initialize: function initialize(data) {\n    this.g = data.g;\n    return this.el.style.display = "inline-block";\n  },\n  render: function render() {\n    var _this = this;\n\n    this.setName("Selection");\n    this.addNode("Find Motif (supports RegEx)", function () {\n      var search = prompt("your search", "D");\n      return _this.g.user.set("searchText", search);\n    });\n\n    this.addNode("Invert columns", function () {\n      return _this.g.selcol.invertCol(function () {\n        var result = [];\n        var end = _this.model.getMaxLength();\n        var i = 0;\n        if (0 <= end) {\n          while (i <= end) {\n            result.push(i++);\n          }\n        } else {\n          while (i >= end) {\n            result.push(i--);\n          }\n        }\n        return result;\n      }());\n    });\n    this.addNode("Invert rows", function () {\n      return _this.g.selcol.invertRow(_this.model.pluck("id"));\n    });\n    this.addNode("Reset", function () {\n      return _this.g.selcol.reset();\n    });\n    this.el.appendChild(this.buildDOM());\n    return this;\n  }\n});\nexports.default = SelectionMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/SelectionMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/menu/views/VisMenu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/menu/views/VisMenu.js ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _menubuilder = __webpack_require__(/*! ../menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\nvar VisMenu = _menubuilder2.default.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.el.style.display = "inline-block";\n    return this.listenTo(this.g.vis, "change", this.render);\n  },\n\n  render: function render() {\n    var _this = this;\n\n    this.removeAllNodes();\n    this.setName("Vis.elements");\n\n    var visElements = this.getVisElements();\n    for (var i = 0, visEl; i < visElements.length; i++) {\n      visEl = visElements[i];\n      this._addVisEl(visEl);\n    }\n\n    // other\n    this.addNode("Reset", function () {\n      _this.g.vis.set("labels", true);\n      _this.g.vis.set("sequences", true);\n      _this.g.vis.set("metacell", true);\n      _this.g.vis.set("conserv", true);\n      _this.g.vis.set("labelId", true);\n      _this.g.vis.set("labelName", true);\n      _this.g.vis.set("labelCheckbox", false);\n      _this.g.vis.set("seqlogo", false);\n      _this.g.vis.set("gapHeader", false);\n      _this.g.vis.set("leftHeader", true);\n      _this.g.vis.set("metaGaps", true);\n      _this.g.vis.set("metaIdentity", true);\n      return _this.g.vis.set("metaLinks", true);\n    });\n\n    // TODO: make more efficient\n    dom.removeAllChilds(this.el);\n    this.el.appendChild(this.buildDOM());\n    return this;\n  },\n\n  _addVisEl: function _addVisEl(visEl) {\n    var _this2 = this;\n\n    var style = {};\n\n    if (this.g.vis.get(visEl.id)) {\n      var pre = "Hide ";\n      style.color = "red";\n    } else {\n      pre = "Show ";\n      style.color = "green";\n    }\n\n    return this.addNode(pre + visEl.name, function () {\n      return _this2.g.vis.set(visEl.id, !_this2.g.vis.get(visEl.id));\n    }, { style: style\n    });\n  },\n\n\n  getVisElements: function getVisElements() {\n    var vis = [];\n    vis.push({ name: "residues indices", id: "markers" });\n    vis.push({ name: "ID/Label", id: "labels" });\n    //vis.push name: "Sequences", id: "sequences"\n    vis.push({ name: "meta info (Gaps/Ident)", id: "metacell" });\n    vis.push({ name: "overview panel", id: "overviewbox" });\n    vis.push({ name: "sequence logo", id: "seqlogo" });\n    vis.push({ name: "gap weights", id: "gapHeader" });\n    vis.push({ name: "conservation weights", id: "conserv" });\n    vis.push({ name: "scale slider", id: "scaleslider" });\n    //vis.push name: "Left header", id: "leftHeader"\n    vis.push({ name: "Label", id: "labelName" });\n    vis.push({ name: "ID", id: "labelId" });\n    //vis.push name: "Label checkbox", id: "labelCheckbox"\n    vis.push({ name: "gaps %", id: "metaGaps" });\n    vis.push({ name: "identity score", id: "metaIdentity" });\n    // vis.push name: "Meta links", id: "metaLinks"\n    return vis;\n  }\n});\nexports.default = VisMenu;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/menu/views/VisMenu.js?')},"./node_modules/@intermine/msa-viewer/lib/model/Feature.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/model/Feature.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\nvar Feature = Model.extend({\n\n  defaults: {\n    xStart: -1,\n    xEnd: -1,\n    height: -1,\n    text: "",\n    fillColor: "red",\n    fillOpacity: 0.5,\n    type: "rectangle",\n    borderSize: 1,\n    borderColor: "black",\n    borderOpacity: 0.5,\n    validate: true,\n    row: 0\n  },\n\n  initialize: function initialize(obj) {\n    if (obj.start != null) {\n      // gff counts from 1 where MSA starts at 0\n      // This fix that misalignment\n      this.set("xStart", obj.start - 1);\n    }\n    if (obj.end != null) {\n      this.set("xEnd", obj.end - 1);\n    }\n    // name has a predefined meaning\n    if (obj.attributes != null) {\n      if (obj.attributes.Name != null) {\n        this.set("text", obj.attributes.Name);\n      }\n      if (obj.attributes.Color != null) {\n        this.set("fillColor", obj.attributes.Color);\n      }\n    }\n\n    if (this.attributes.xEnd < this.attributes.xStart) {\n      console.warn("invalid feature range for", this.attributes);\n    }\n\n    if (!_.isNumber(this.attributes.xStart) || !_.isNumber(this.attributes.xEnd)) {\n      console.warn("please provide numeric feature ranges", obj);\n      // trying auto-casting\n      this.set("xStart", parseInt(this.attributes.xStart));\n      return this.set("xEnd", parseInt(this.attributes.xEnd));\n    }\n  },\n\n  validate: function validate() {\n    if (isNaN(this.attributes.xStart || isNaN(this.attributes.xEnd))) {\n      return "features need integer start and end.";\n    }\n  },\n\n  contains: function contains(index) {\n    return this.attributes.xStart <= index && index <= this.attributes.xEnd;\n  }\n});\nexports.default = Feature;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/model/Feature.js?')},"./node_modules/@intermine/msa-viewer/lib/model/FeatureCol.js":
/*!********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/model/FeatureCol.js ***!
  \********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar _Feature = __webpack_require__(/*! ./Feature */ "./node_modules/@intermine/msa-viewer/lib/model/Feature.js");\n\nvar _Feature2 = _interopRequireDefault(_Feature);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Collection = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Collection;\n\n\nvar FeatureCol = Collection.extend({\n  model: _Feature2.default,\n\n  constructor: function constructor() {\n    this.startOnCache = [];\n    // invalidate cache\n    this.on("all", function () {\n      return this.startOnCache = [];\n    }, this);\n    return Collection.apply(this, arguments);\n  },\n\n  // returns all features starting on index\n  startOn: function startOn(index) {\n    if (!(this.startOnCache[index] != null)) {\n      this.startOnCache[index] = this.where({ xStart: index });\n    }\n    return this.startOnCache[index];\n  },\n\n  contains: function contains(index) {\n    return this.reduce(function (el, memo) {\n      return memo || el.contains(index);\n    }, false);\n  },\n\n  getFeatureOnRow: function getFeatureOnRow(row, x) {\n    return this.filter(function (el) {\n      return el.get("row") === row && el.get("xStart") <= x && x <= el.get("xEnd");\n    });\n  },\n\n  // tries to auto-fit the rows\n  // not a very efficient algorithm\n  assignRows: function assignRows() {\n\n    var len = this.max(function (el) {\n      return el.get("xEnd");\n    }).attributes.xEnd;\n    var rows = function () {\n      var result = [];\n      for (var x = 0; 0 < len ? x <= len : x >= len; 0 < len ? x++ : x--) {\n        result.push(0);\n      }\n      return result;\n    }();\n\n    this.each(function (el) {\n      var max = 0;\n      var start = el.get("xStart");\n      var end = el.get("xEnd");\n      for (var x = start; start < end ? x <= end : x >= end; start < end ? x++ : x--) {\n        if (rows[x] > max) {\n          max = rows[x];\n        }\n        rows[x]++;\n      }\n      return el.set("row", max);\n    });\n\n    return (0, _lodash.max)(rows);\n  },\n\n  getCurrentHeight: function getCurrentHeight() {\n    return this.max(function (el) {\n      return el.get("row");\n    }).attributes.row + 1;\n  },\n\n  // gives the minimal needed number of rows\n  // not a very efficient algorithm\n  // (there is one in O(n) )\n  getMinRows: function getMinRows() {\n\n    var len = this.max(function (el) {\n      return el.get("xEnd");\n    }).attributes.xEnd;\n    var rows = function () {\n      var result = [];\n      for (var x = 0; 0 < len ? x <= len : x >= len; 0 < len ? x++ : x--) {\n        result.push(0);\n      }\n      return result;\n    }();\n\n    this.each(function (el) {\n      return function () {\n        var result = [];\n        var start = el.get("xStart");\n        var end = el.get("xEnd");\n        for (var x = start; start < end ? x <= end : x >= end; start < end ? x++ : x++) {\n          result.push(rows[x]++);\n        }\n        return result;\n      }();\n    });\n\n    return (0, _lodash.max)(rows);\n  }\n});\nexports.default = FeatureCol;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/model/FeatureCol.js?')},"./node_modules/@intermine/msa-viewer/lib/model/SeqCollection.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/model/SeqCollection.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _Sequence = __webpack_require__(/*! ./Sequence */ "./node_modules/@intermine/msa-viewer/lib/model/Sequence.js");\n\nvar _Sequence2 = _interopRequireDefault(_Sequence);\n\nvar _FeatureCol = __webpack_require__(/*! ./FeatureCol */ "./node_modules/@intermine/msa-viewer/lib/model/FeatureCol.js");\n\nvar _FeatureCol2 = _interopRequireDefault(_FeatureCol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Collection = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Collection;\n\nvar SeqCollection = Collection.extend({\n  model: _Sequence2.default,\n\n  constructor: function constructor(seqs, g) {\n    var _this = this;\n\n    Collection.apply(this, arguments);\n    this.g = g;\n\n    this.on("add reset remove", function () {\n      // invalidate cache\n      _this.lengthCache = null;\n      return _this._bindSeqsWithFeatures();\n    }, this);\n\n    // use the first seq as reference as default\n    this.on("reset", function () {\n      return _this._autoSetRefSeq();\n    });\n    this._autoSetRefSeq();\n\n    this.lengthCache = null;\n\n    this.features = {};\n    return this;\n  },\n\n  // gives the max length of all sequences\n  // (cached)\n  getMaxLength: function getMaxLength() {\n    if (this.models.length === 0) {\n      return 0;\n    }\n    if (this.lengthCache === null) {\n      this.lengthCache = this.max(function (seq) {\n        return seq.get("seq").length;\n      }).get("seq").length;\n    }\n    return this.lengthCache;\n  },\n\n  // gets the previous model\n  // @param endless [boolean] for the first element\n  // true: returns the last element, false: returns undefined\n  prev: function prev(model, endless) {\n    var index = this.indexOf(model) - 1;\n    if (index < 0 && endless) {\n      index = this.length - 1;\n    }\n    return this.at(index);\n  },\n\n  // gets the next model\n  // @param endless [boolean] for the last element\n  // true: returns the first element, false: returns undefined\n  next: function next(model, endless) {\n    var index = this.indexOf(model) + 1;\n    if (index === this.length && endless) {\n      index = 0;\n    }\n    return this.at(index);\n  },\n\n  // @returns n [int] number of hidden columns until n\n  calcHiddenSeqs: function calcHiddenSeqs(n) {\n    var nNew = n;\n    for (var i = 0; 0 < nNew ? i <= nNew : i >= nNew; 0 < nNew ? i++ : i--) {\n      if (this.at(i).get("hidden")) {\n        nNew++;\n      }\n    }\n    return nNew - n;\n  },\n\n  // you can add features independent to the current seqs as they may be added\n  // later (lagging connection)\n  // sequence - feature binding is based on id\n  addFeatures: function addFeatures(features) {\n    var _this2 = this;\n\n    if (features.config != null) {\n      var obj = features;\n      features = features.seqs;\n      if (obj.config.colors != null) {\n        var colors = obj.config.colors;\n        _.each(features, function (seq) {\n          return _.each(seq, function (val) {\n            if (colors[val.feature] != null) {\n              return val.fillColor = colors[val.feature];\n            }\n          });\n        });\n      }\n    }\n    // we might already have features\n    if (_.isEmpty(this.features)) {\n      // replace (no existent features)\n      this.features = features;\n    } else {\n      // merge\n      _.each(features, function (val, key) {\n        if (!_this2.features.hasOwnProperty(key)) {\n          return _this2.features[key] = val;\n        } else {\n          return _this2.features[key] = _.union(_this2.features[key], val);\n        }\n      });\n    }\n    // rehash\n    return this._bindSeqsWithFeatures();\n  },\n\n  // adds features to a sequence\n  // does it silenty without triggering an event\n  _bindSeqWithFeatures: function _bindSeqWithFeatures(seq) {\n    // TODO: probably we don\'t always want to bind to name\n    var features = this.features[seq.attributes.name];\n    if (features) {\n      // do silently to avoid triggering to many events\n      seq.attributes.features = new _FeatureCol2.default(features);\n      seq.attributes.features.assignRows();\n      seq.attributes.height = seq.attributes.features.getCurrentHeight() + 1;\n    }\n  },\n\n  // rehash the sequence feature binding\n  _bindSeqsWithFeatures: function _bindSeqsWithFeatures() {\n    var _this3 = this;\n\n    return this.each(function (seq) {\n      return _this3._bindSeqWithFeatures(seq);\n    });\n  },\n\n  // removes all features from the cache (not from the seqs)\n  removeAllFeatures: function removeAllFeatures() {\n    return delete this.features;\n  },\n\n  _autoSetRefSeq: function _autoSetRefSeq() {\n    if (this.length > 0) {\n      return this.at(0).set("ref", true);\n    }\n  },\n\n  // sets a sequence (e.g. BLAST start or consensus seq) as reference\n  setRef: function setRef(seq) {\n    var obj = this.get(seq);\n    this.each(function (s) {\n      if (seq.cid) {\n        if (obj.cid === s.cid) {\n          return s.set("ref", true);\n        } else {\n          return s.set("ref", false);\n        }\n      }\n    });\n\n    this.g.config.set("hasRef", true);\n    return this.trigger("change:reference", seq);\n  }\n});\nexports.default = SeqCollection;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/model/SeqCollection.js?')},"./node_modules/@intermine/msa-viewer/lib/model/Sequence.js":
/*!******************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/model/Sequence.js ***!
  \******************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _FeatureCol = __webpack_require__(/*! ./FeatureCol */ "./node_modules/@intermine/msa-viewer/lib/model/FeatureCol.js");\n\nvar _FeatureCol2 = _interopRequireDefault(_FeatureCol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Model = __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model;\n\n\nvar Sequence = Model.extend({\n\n  defaults: {\n    name: "",\n    id: "",\n    seq: "",\n    height: 1,\n    ref: false // reference: the sequence used in BLAST or the consensus seq\n  },\n\n  initialize: function initialize() {\n    // residues without color\n    this.set("grey", []);\n    if (!(this.get("features") != null)) {\n      return this.set("features", new _FeatureCol2.default());\n    }\n  }\n});\nexports.default = Sequence;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/model/Sequence.js?')},"./node_modules/@intermine/msa-viewer/lib/model/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/model/index.js ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _Sequence = __webpack_require__(/*! ./Sequence */ "./node_modules/@intermine/msa-viewer/lib/model/Sequence.js");\n\nObject.defineProperty(exports, "seq", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Sequence).default;\n  }\n});\n\nvar _SeqCollection = __webpack_require__(/*! ./SeqCollection */ "./node_modules/@intermine/msa-viewer/lib/model/SeqCollection.js");\n\nObject.defineProperty(exports, "seqcol", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SeqCollection).default;\n  }\n});\n\nvar _Feature = __webpack_require__(/*! ./Feature */ "./node_modules/@intermine/msa-viewer/lib/model/Feature.js");\n\nObject.defineProperty(exports, "feature", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Feature).default;\n  }\n});\n\nvar _FeatureCol = __webpack_require__(/*! ./FeatureCol */ "./node_modules/@intermine/msa-viewer/lib/model/FeatureCol.js");\n\nObject.defineProperty(exports, "featurecol", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeatureCol).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/model/index.js?')},"./node_modules/@intermine/msa-viewer/lib/msa.js":
/*!*******************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/msa.js ***!
  \*******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _SeqCollection = __webpack_require__(/*! ./model/SeqCollection */ "./node_modules/@intermine/msa-viewer/lib/model/SeqCollection.js");\n\nvar _SeqCollection2 = _interopRequireDefault(_SeqCollection);\n\nvar _colorscheme = __webpack_require__(/*! ./g/colorscheme */ "./node_modules/@intermine/msa-viewer/lib/g/colorscheme.js");\n\nvar _colorscheme2 = _interopRequireDefault(_colorscheme);\n\nvar _columns = __webpack_require__(/*! ./g/columns */ "./node_modules/@intermine/msa-viewer/lib/g/columns.js");\n\nvar _columns2 = _interopRequireDefault(_columns);\n\nvar _config = __webpack_require__(/*! ./g/config */ "./node_modules/@intermine/msa-viewer/lib/g/config.js");\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _package = __webpack_require__(/*! ./g/package */ "./node_modules/@intermine/msa-viewer/lib/g/package.js");\n\nvar _package2 = _interopRequireDefault(_package);\n\nvar _SelectionCol = __webpack_require__(/*! ./g/selection/SelectionCol */ "./node_modules/@intermine/msa-viewer/lib/g/selection/SelectionCol.js");\n\nvar _SelectionCol2 = _interopRequireDefault(_SelectionCol);\n\nvar _user = __webpack_require__(/*! ./g/user */ "./node_modules/@intermine/msa-viewer/lib/g/user.js");\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _visibility = __webpack_require__(/*! ./g/visibility */ "./node_modules/@intermine/msa-viewer/lib/g/visibility.js");\n\nvar _visibility2 = _interopRequireDefault(_visibility);\n\nvar _visOrdering = __webpack_require__(/*! ./g/visOrdering */ "./node_modules/@intermine/msa-viewer/lib/g/visOrdering.js");\n\nvar _visOrdering2 = _interopRequireDefault(_visOrdering);\n\nvar _zoomer = __webpack_require__(/*! ./g/zoomer */ "./node_modules/@intermine/msa-viewer/lib/g/zoomer.js");\n\nvar _zoomer2 = _interopRequireDefault(_zoomer);\n\nvar _StageScale = __webpack_require__(/*! ./g/StageScale */ "./node_modules/@intermine/msa-viewer/lib/g/StageScale.js");\n\nvar _StageScale2 = _interopRequireDefault(_StageScale);\n\nvar _Stage = __webpack_require__(/*! ./views/Stage */ "./node_modules/@intermine/msa-viewer/lib/views/Stage.js");\n\nvar _Stage2 = _interopRequireDefault(_Stage);\n\nvar _file = __webpack_require__(/*! ./utils/file */ "./node_modules/@intermine/msa-viewer/lib/utils/file.js");\n\nvar _file2 = _interopRequireDefault(_file);\n\nvar _tree = __webpack_require__(/*! ./utils/tree */ "./node_modules/@intermine/msa-viewer/lib/utils/tree.js");\n\nvar _tree2 = _interopRequireDefault(_tree);\n\nvar _proxy = __webpack_require__(/*! ./utils/proxy */ "./node_modules/@intermine/msa-viewer/lib/utils/proxy.js");\n\nvar _proxy2 = _interopRequireDefault(_proxy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// MV from backbone\n\n\n// globals\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js"); // models\n\nvar Eventhandler = __webpack_require__(/*! biojs-events */ "./node_modules/biojs-events/index.js");\n\n// MSA views\n\n\n// statistics\nvar Stats = __webpack_require__(/*! stat.seqs */ "./node_modules/stat.seqs/lib/index.js");\n\n// utils\nvar $ = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\n\n\n// opts is a dictionary consisting of\n// @param el [String] id or reference to a DOM element\n// @param seqs [SeqArray] Array of sequences for initlization\n// @param conf [Dict] user config\n// @param vis [Dict] config of visible views\n// @param zoomer [Dict] display settings like columnWidth\nvar MSA = boneView.extend({\n\n  initialize: function initialize(data) {\n    var _this = this;\n\n    if (!(typeof data !== "undefined" && data !== null)) {\n      data = {};\n    }\n    // check for default arrays\n    if (!(data.colorscheme != null)) {\n      data.colorscheme = {};\n    }\n    if (!(data.columns != null)) {\n      data.columns = {};\n    }\n    if (!(data.conf != null)) {\n      data.conf = {};\n    }\n    if (!(data.vis != null)) {\n      data.vis = {};\n    }\n    if (!(data.visorder != null)) {\n      data.visorder = {};\n    }\n    if (!(data.zoomer != null)) {\n      data.zoomer = {};\n    }\n    if (!(data.conserv != null)) {\n      data.conserv = {};\n    }\n    if (!(data.scale != null)) {\n      data.scale = {};\n    }\n\n    // g is our global Mediator\n    this.g = Eventhandler.mixin({});\n\n    // load seqs and add subviews\n    this.seqs = this.g.seqs = new _SeqCollection2.default(data.seqs, this.g);\n\n    // populate it and init the global models\n    this.g.config = new _config2.default(data.conf);\n    this.g.package = new _package2.default(this.g);\n    this.g.selcol = new _SelectionCol2.default([], { g: this.g });\n    this.g.user = new _user2.default();\n    this.g.vis = new _visibility2.default(data.vis, { model: this.seqs });\n    this.g.visorder = new _visOrdering2.default(data.visorder);\n    this.g.zoomer = new _zoomer2.default(data.zoomer, { g: this.g, model: this.seqs });\n\n    this.g.scale = new _StageScale2.default(data.scale, { g: this.g });\n\n    // store config options for plugins\n    this.g.conservationConfig = data.conserv;\n\n    // debug mode\n    if (window.location.hostname === "localhost") {\n      this.g.config.set("debug", true);\n    }\n\n    this._loadSeqs(data);\n\n    // utils\n    this.u = {};\n    this.u.file = new _file2.default(this);\n    this.u.proxy = new _proxy2.default({ g: this.g });\n    this.u.tree = new _tree2.default(this);\n\n    if (this.g.config.get("eventBus") === true) {\n      this.startEventBus();\n    }\n\n    if (this.g.config.get("dropImport")) {\n      var events = { "dragover": this.dragOver,\n        "drop": this.dropFile\n      };\n      this.delegateEvents(events);\n    }\n\n    if (data.importURL) {\n      this.u.file.importURL(data.importURL, function () {\n        return _this.render();\n      });\n    }\n\n    if (data.bootstrapMenu) {\n      // pass menu configuration to defaultmenu\n      if (data.menu) {\n        this.menuConfig = data.menu;\n      }\n      this.g.config.set("bootstrapMenu", true);\n    }\n\n    this.draw();\n    // add models to the msa (convenience)\n    return this.m();\n  },\n\n  _loadSeqs: function _loadSeqs(data) {\n    // stats\n    var pureSeq = this.seqs.pluck("seq");\n    this.g.stats = new Stats(this.seqs, { useGaps: true });\n    this.g.stats.alphabetSize = this.g.config.get("alphabetSize");\n    this.g.columns = new _columns2.default(data.columns, this.g.stats); // for action on the columns like hiding\n\n    // depending config\n    this.g.colorscheme = new _colorscheme2.default(data.colorscheme, pureSeq, this.g.stats);\n\n    // more init\n    return this.g.zoomer.setEl(this.el, this.seqs);\n  },\n\n  // proxy to the utility package\n  importURL: function importURL() {\n    return this.u.file.importURL.apply(this.u.file, arguments);\n  },\n\n  // add models to the msa (convenience)\n  m: function m() {\n    var m = {};\n    m.model = __webpack_require__(/*! ./model */ "./node_modules/@intermine/msa-viewer/lib/model/index.js");\n    m.selection = __webpack_require__(/*! ./g/selection/Selection */ "./node_modules/@intermine/msa-viewer/lib/g/selection/Selection.js");\n    m.selcol = __webpack_require__(/*! ./g/selection/SelectionCol */ "./node_modules/@intermine/msa-viewer/lib/g/selection/SelectionCol.js");\n    m.view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\n    m.boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n    return this.m = m;\n  },\n\n  draw: function draw() {\n    var _this2 = this;\n\n    this.removeViews();\n\n    this.addView("stage", new _Stage2.default({ model: this.seqs, g: this.g }));\n    this.$el.addClass("biojs_msa_div");\n\n    // bootstraps the menu bar by default -> destroys modularity\n    if (this.g.config.get("bootstrapMenu")) {\n      var menuDiv = document.createElement(\'div\');\n      var wrapperDiv = document.createElement(\'div\');\n      if (!this.el.parentNode) {\n        wrapperDiv.appendChild(menuDiv);\n        wrapperDiv.appendChild(this.el);\n      } else {\n        this.el.parentNode.replaceChild(wrapperDiv, this.el);\n        wrapperDiv.appendChild(menuDiv);\n        wrapperDiv.appendChild(this.el);\n      }\n\n      var bootstrapOpts = { el: menuDiv,\n        msa: this\n      };\n      if (this.menuConfig) {\n        bootstrapOpts.menu = this.menuConfig;\n      }\n      var defMenu = new msa.menu.defaultmenu(bootstrapOpts);\n      defMenu.render();\n    }\n\n    return $(window).on("resize", function (e) {\n      var f = function f() {\n        return this.g.zoomer.autoResize();\n      };\n      return setTimeout(f.bind(_this2), 5);\n    });\n  },\n\n  dragOver: function dragOver(e) {\n    // prevent the normal browser actions\n    e.preventDefault();\n    e.target.className = \'hover\';\n    return false;\n  },\n\n  dropFile: function dropFile(e) {\n    e.preventDefault();\n    var files = e.target.files || e.dataTransfer.files;\n    this.u.file.importFiles(files);\n    return false;\n  },\n\n  startEventBus: function startEventBus() {\n    var _this3 = this;\n\n    var busObjs = ["config", "columns", "colorscheme", "selcol", "vis", "visorder", "zoomer"];\n    return function () {\n      var result = [];\n      for (var i = 0, key; i < busObjs.length; i++) {\n        key = busObjs[i];\n        result.push(_this3._proxyToG(key));\n      }\n      return result;\n    }();\n  },\n\n\n  _proxyToG: function _proxyToG(key) {\n    return this.listenTo(this.g[key], "all", function (name, prev, now, opts) {\n      // suppress duplicate events\n      if (name === "change") {\n        return;\n      }\n      // backbone uses the second argument for the next value -> swap\n      if (typeof opts !== "undefined" && opts !== null) {\n        return this.g.trigger(key + ":" + name, now, prev, opts);\n      } else {\n        return this.g.trigger(key + ":" + name, now, prev);\n      }\n    });\n  },\n\n  render: function render() {\n    if (this.seqs === undefined || this.seqs.length === 0) {\n      console.log("warning. empty seqs.");\n    }\n    this.renderSubviews();\n    this.g.vis.set("loaded", true);\n    return this;\n  }\n});\nexports.default = MSA;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/msa.js?')},"./node_modules/@intermine/msa-viewer/lib/utils sync recursive":
/*!***********************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils sync ***!
  \***********************************************************/
/*! no static exports found */function(module,exports){eval('function webpackEmptyContext(req) {\n\tvar e = new Error("Cannot find module \'" + req + "\'");\n\te.code = \'MODULE_NOT_FOUND\';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = "./node_modules/@intermine/msa-viewer/lib/utils sync recursive";\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils_sync?')},"./node_modules/@intermine/msa-viewer/lib/utils/bmath.js":
/*!***************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/bmath.js ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n// math utilities\nvar BMath = function () {\n  function BMath() {\n    _classCallCheck(this, BMath);\n  }\n\n  _createClass(BMath, null, [{\n    key: "randomInt",\n    value: function randomInt(lower, upper) {\n      // Called with one argument\n      if (!(typeof upper !== "undefined" && upper !== null)) {\n        var _ref = [0, lower];\n        lower = _ref[0];\n        upper = _ref[1];\n      }\n      // Lower must be less then upper\n      if (lower > upper) {\n        var _ref2 = [upper, lower];\n        lower = _ref2[0];\n        upper = _ref2[1];\n      }\n      // Last statement is a return value\n      return Math.floor(Math.random() * (upper - lower + 1) + lower);\n    }\n\n    // @return [Integer] random id\n\n  }, {\n    key: "uniqueId",\n    value: function uniqueId() {\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n\n      var id = "";\n      while (id.length < length) {\n        id += Math.random().toString(36).substr(2);\n      }\n      return id.substr(0, length);\n    }\n\n    // Returns a random integer between min (inclusive) and max (inclusive)\n\n  }, {\n    key: "getRandomInt",\n    value: function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n  }]);\n\n  return BMath;\n}();\n\nexports.default = BMath;\n;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/bmath.js?')},"./node_modules/@intermine/msa-viewer/lib/utils/exporter.js":
/*!******************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/exporter.js ***!
  \******************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _bio = __webpack_require__(/*! bio.io */ "./node_modules/bio.io/lib/index.js");\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar blobURL = __webpack_require__(/*! blueimp_canvastoblob */ "./node_modules/blueimp_canvastoblob/index.js");\nvar saveAs = __webpack_require__(/*! browser-saveas */ "./node_modules/browser-saveas/index.js");\n\n\nvar Exporter = { openInJalview: function openInJalview(url, colorscheme) {\n    if (url.charAt(0) === \'.\') {\n      // relative urls\n      url = document.URL.substr(0, document.URL.lastIndexOf(\'/\')) + "/" + url;\n    }\n\n    // check whether this is a local url\n    if (url.indexOf("http") < 0) {\n      // append host and hope for the best\n      var host = "http://" + window.location.hostname;\n      url = host + url;\n    }\n\n    url = encodeURIComponent(url);\n    var jalviewUrl = "http://www.jalview.org/services/launchApp?open=" + url;\n    jalviewUrl += "&colour=" + colorscheme;\n    return window.open(jalviewUrl, \'_blank\');\n  },\n\n  publishWeb: function publishWeb(that, cb) {\n    var text = _bio.fasta.write(that.seqs.toJSON());\n    text = encodeURIComponent(text);\n    var url = "http://sprunge.biojs.net";\n    return (0, _bio.xhr)({\n      method: "POST",\n      body: "sprunge=" + text,\n      uri: url,\n      headers: { "Content-Type": "application/x-www-form-urlencoded" }\n    }, function (err, rep, body) {\n      var link = body.trim();\n      return cb(link);\n    });\n  },\n\n  shareLink: function shareLink(that, cb) {\n    var url = that.g.config.get("importURL");\n    var msaURL = "http://msa.biojs.net/app/?seq=";\n    var fCB = function fCB(link) {\n      var fURL = msaURL + link;\n      if (cb) {\n        return cb(fURL);\n      }\n    };\n    if (!url) {\n      return Exporter.publishWeb(that, fCB);\n    } else {\n      return fCB(url);\n    }\n  },\n\n  saveAsFile: function saveAsFile(that, name) {\n    // limit at about 256k\n    var text = _bio.fasta.write(that.seqs.toJSON());\n    var blob = new Blob([text], { type: \'text/plain\' });\n    return saveAs(blob, name);\n  },\n\n  saveSelection: function saveSelection(that, name) {\n    var selection = that.g.selcol.pluck("seqId");\n    console.log(selection);\n    if (selection.length > 0) {\n      // filter those seqids\n      selection = that.seqs.filter(function (el) {\n        return selection.indexOf(el.get("id")) >= 0;\n      });\n      var end = selection.length - 1;\n      for (var i = 0; 0 < end ? i <= end : i >= end; 0 < end ? i++ : i--) {\n        selection[i] = selection[i].toJSON();\n      }\n    } else {\n      selection = that.seqs.toJSON();\n      console.warn("no selection found");\n    }\n    var text = _bio.fasta.write(selection);\n    var blob = new Blob([text], { type: \'text/plain\' });\n    return saveAs(blob, name);\n  },\n\n  saveAnnots: function saveAnnots(that, name) {\n    var features = that.seqs.map(function (el) {\n      features = el.get("features");\n      if (features.length === 0) {\n        return;\n      }\n      var seqname = el.get("name");\n      features.each(function (s) {\n        return s.set("seqname", seqname);\n      });\n      return features.toJSON();\n    });\n    features = (0, _lodash.flatten)((0, _lodash.compact)(features));\n    console.log(features);\n    var text = _bio.gff.exportLines(features);\n    var blob = new Blob([text], { type: \'text/plain\' });\n    return saveAs(blob, name);\n  },\n\n  saveAsImg: function saveAsImg(that, name) {\n    // TODO: this is very ugly\n    var canvas = that.getView(\'stage\').getView(\'body\').getView(\'seqblock\').el;\n    if (typeof canvas !== "undefined" && canvas !== null) {\n      var url = canvas.toDataURL(\'image/png\');\n      return saveAs(blobURL(url), name, "image/png");\n    }\n  }\n};\nexports.default = Exporter;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/exporter.js?')},"./node_modules/@intermine/msa-viewer/lib/utils/file.js":
/*!**************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/file.js ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar _bio = __webpack_require__(/*! bio.io */ "./node_modules/bio.io/lib/index.js");\n\nvar _recognize = __webpack_require__(/*! ./recognize */ "./node_modules/@intermine/msa-viewer/lib/utils/recognize.js");\n\nvar _recognize2 = _interopRequireDefault(_recognize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FileHelper = function FileHelper(msa) {\n  this.msa = msa;\n  return this;\n};\n\nvar funs = { guessFileFromText: function guessFileFromText(text, opt) {\n    if (!(typeof text !== "undefined" && text !== null)) {\n      console.warn("invalid file format");\n      return ["", "error"];\n    }\n    var recognizedFile = (0, _recognize2.default)(text, opt);\n    switch (recognizedFile) {\n      case "clustal":\n        var reader = _bio.clustal;\n        var type = "seqs";\n        break;\n\n      case "fasta":\n        reader = _bio.fasta;\n        type = "seqs";\n        break;\n\n      case "newick":\n        type = "newick";\n        break;\n\n      case "gff":\n        reader = _bio.gff;\n        type = "features";\n        break;\n\n      default:\n        alert("Unknown file format. Please contact us on Github for help.");\n        break;\n    }\n    return [reader, type];\n  },\n\n  parseText: function parseText(text, opt) {\n    var _guessFileFromText = this.guessFileFromText(text, opt),\n        _guessFileFromText2 = _slicedToArray(_guessFileFromText, 2),\n        reader = _guessFileFromText2[0],\n        type = _guessFileFromText2[1];\n\n    if (type === "seqs") {\n      var seqs = reader.parse(text);\n      return [seqs, type];\n    } else if (type === "features") {\n      var features = reader.parseSeqs(text);\n      return [features, type];\n    } else {\n      return [text, type];\n    }\n  },\n\n  importFiles: function importFiles(files) {\n    var _this = this;\n\n    return function () {\n      var result = [];\n      var end = files.length - 1;\n      for (var i = 0; 0 < end ? i <= end : i >= end; 0 < end ? i++ : i--) {\n        var file = files[i];\n        var reader = new FileReader();\n        reader.onload = function (evt) {\n          return _this.importFile(evt.target.result);\n        };\n        result.push(reader.readAsText(file));\n      }\n      return result;\n    }();\n  },\n\n  importFile: function importFile(file, opt) {\n    var _this2 = this;\n\n    opt = opt || {};\n    opt.name = file.name;\n    var fileName;\n\n    var _parseText = this.parseText(file, opt),\n        _parseText2 = _slicedToArray(_parseText, 2),\n        objs = _parseText2[0],\n        type = _parseText2[1];\n\n    if (type === "error") {\n      alert("An error happened");\n      return "error";\n    }\n    if (type === "seqs") {\n      this.msa.seqs.reset(objs);\n      this.msa.g.config.set("url", "userimport");\n      this.msa.g.trigger("url:userImport");\n    } else if (type === "features") {\n      this.msa.seqs.addFeatures(objs);\n    } else if (type === "newick") {\n      this.msa.u.tree.loadTree(function () {\n        return _this2.msa.u.tree.showTree(file);\n      });\n    } else {\n      alert("Unknown file!");\n    }\n\n    return fileName = file.name;\n  },\n\n  importURL: function importURL(url, cb) {\n    var _this3 = this;\n\n    url = this.msa.u.proxy.corsURL(url);\n    this.msa.g.config.set("url", url);\n    return (0, _bio.xhr)({\n      url: url,\n      timeout: 0\n    }, function (err, status, body) {\n      if (!err) {\n        var res = _this3.importFile(body, { url: url });\n        if (res === "error") {\n          return;\n        }\n        _this3.msa.g.trigger("import:url", url);\n        if (cb) {\n          return cb();\n        }\n      } else {\n        return console.error(err);\n      }\n    });\n  }\n};\n\n(0, _lodash.extend)(FileHelper.prototype, funs);\nexports.default = FileHelper;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/file.js?')},"./node_modules/@intermine/msa-viewer/lib/utils/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/index.js ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.exporter = exports.file = exports.seqgen = exports.proxy = exports.bmath = undefined;\n\nvar _bmath2 = __webpack_require__(/*! ./bmath */ "./node_modules/@intermine/msa-viewer/lib/utils/bmath.js");\n\nvar _bmath3 = _interopRequireDefault(_bmath2);\n\nvar _proxy2 = __webpack_require__(/*! ./proxy */ "./node_modules/@intermine/msa-viewer/lib/utils/proxy.js");\n\nvar _proxy3 = _interopRequireDefault(_proxy2);\n\nvar _seqgen2 = __webpack_require__(/*! ./seqgen */ "./node_modules/@intermine/msa-viewer/lib/utils/seqgen.js");\n\nvar _seqgen3 = _interopRequireDefault(_seqgen2);\n\nvar _file2 = __webpack_require__(/*! ./file */ "./node_modules/@intermine/msa-viewer/lib/utils/file.js");\n\nvar _file3 = _interopRequireDefault(_file2);\n\nvar _exporter2 = __webpack_require__(/*! ./exporter */ "./node_modules/@intermine/msa-viewer/lib/utils/exporter.js");\n\nvar _exporter3 = _interopRequireDefault(_exporter2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.bmath = _bmath3.default;\nexports.proxy = _proxy3.default;\nexports.seqgen = _seqgen3.default;\nexports.file = _file3.default;\nexports.exporter = _exporter3.default;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/index.js?')},"./node_modules/@intermine/msa-viewer/lib/utils/loader.js":
/*!****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/loader.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar k = __webpack_require__(/*! koala-js */ "./node_modules/koala-js/index.js");\n\nvar Loader =\n\n// asynchronously require a script\n{ loadScript: function loadScript(url, cb) {\n    var s = k.mk("script");\n    s.type = "text/javascript";\n    s.src = url;\n    s.async = true;\n    s.onload = s.onreadystatechange = function () {\n      if (!r && (!this.readyState || this.readyState === "complete")) {\n        var r = true;\n        return cb();\n      }\n    };\n    var t = document.getElementsByTagName("script")[0];\n    return t.parentNode.appendChild(s);\n  },\n\n  // joins multiple callbacks into one callback\n  // a bit like Promise.all - but for callbacks\n  joinCb: function joinCb(retCb, finalLength, finalScope) {\n    finalLength = finalLength || 1;\n    var cbsFinished = 0;\n\n    var callbackWrapper = function callbackWrapper(cb, scope) {\n      if (!(typeof cb !== "undefined" && cb !== null)) {\n        // directly called (without cb)\n        return counter();\n      } else {\n        return function () {\n          var ref;\n          if (ref = "apply", cb.indexOf(ref) >= 0) {\n            cb.apply(scope, arguments);\n          }\n          return counter();\n        };\n      }\n    };\n\n    var counter = function counter() {\n      cbsFinished++;\n      if (cbsFinished === finalLength) {\n        return retCb.call(finalScope);\n      }\n    };\n\n    return callbackWrapper;\n  }\n};\nexports.default = Loader;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/loader.js?')},"./node_modules/@intermine/msa-viewer/lib/utils/proxy.js":
/*!***************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/proxy.js ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar ProxyHelper = function ProxyHelper(opts) {\n  this.g = opts.g;\n  return this;\n};\n\nvar proxyFun = { corsURL: function corsURL(url) {\n    // do not filter on localhost\n    if (document.URL.indexOf(\'localhost\') >= 0 && url[0] === "/") {\n      return url;\n    }\n    if (url.charAt(0) === "." || url.charAt(0) === "/") {\n      return url;\n    }\n\n    // DEPRECATED as crossorigin.me requires http\n    // remove www + http\n    //url = url.replace("www\\.", "");\n\n    if (this.g.config.get(\'importProxyStripHttp\')) {\n      url = url.replace("http://", "");\n      url = url.replace("https://", "");\n    }\n\n    // prepend proxy\n    url = this.g.config.get(\'importProxy\') + url;\n    return url;\n  }\n};\n\n(0, _lodash.extend)(ProxyHelper.prototype, proxyFun);\nexports.default = ProxyHelper;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/proxy.js?')},"./node_modules/@intermine/msa-viewer/lib/utils/recognize.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/recognize.js ***!
  \*******************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nexports.default = function (text, opt) {\n    var fileName = opt.name || opt.url || "";\n    var fileNameSplit = fileName.split(".");\n    var suffix = fileNameSplit[fileNameSplit.length - 1] || "";\n    for (var i = 0; i < recognizers.length; i++) {\n        var v = recognizers[i](text, suffix);\n        if (!!v) return v;\n    }\n    return "unknown";\n};\n\n/**\n * Given a file type - what is typical for it?\n */\n\nvar isClustal = function isClustal(text, suffix) {\n    if (text.substring(0, 7) === "CLUSTAL" || suffix == "clustal" || suffix == "aln") {\n        return "clustal";\n    }\n    return false;\n};\n\nvar isFasta = function isFasta(text, suffix) {\n    if (text.substring(0, 1) === ">" || suffix == "fasta" || suffix == "fa") {\n        return "fasta";\n    }\n    return false;\n};\n\nvar isNewick = function isNewick(text, suffix) {\n    if (text.substring(0, 1) === "(" || suffix == "nwk") {\n        return "newick";\n    }\n    return false;\n};\n\nvar isGFF = function isGFF(text, suffix) {\n    if (text.length <= 10) {\n        return false;\n    }\n    var lines = text.split(\'\\n\');\n    if (lines[0].indexOf("gff") >= 0 || suffix.indexOf("gff") >= 0) {\n        return "gff";\n    }\n    if (lines[0].indexOf("#") < 0 && lines[0].split("\\t").length === 2) {\n        // no comments and two columns. let\'s hope this is from jalview\n        return "gff";\n    }\n    return false;\n};\n\nvar recognizers = [isClustal, isFasta, isNewick, isGFF];\n\n/**\nReturn the lowercase format for a given file\n*/\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/recognize.js?')},"./node_modules/@intermine/msa-viewer/lib/utils/seqgen.js":
/*!****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/seqgen.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _bmath = __webpack_require__(/*! ./bmath */ "./node_modules/@intermine/msa-viewer/lib/utils/bmath.js");\n\nvar _bmath2 = _interopRequireDefault(_bmath);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Sequence = __webpack_require__(/*! biojs-model */ "./node_modules/biojs-model/src/index.js").seq;\n\nvar Stat = __webpack_require__(/*! stat.seqs */ "./node_modules/stat.seqs/lib/index.js");\n\nvar SeqGen = {\n  _generateSequence: function _generateSequence(len) {\n    var text = "";\n    var end = len - 1;\n    for (var i = 0; 0 < end ? i <= end : i >= end; 0 < end ? i++ : i--) {\n      text += SeqGen.getRandomChar();\n    }\n    return text;\n  },\n\n  // generates a dummy sequences\n  // @param len [int] number of generated sequences\n  // @param seqLen [int] length of the generated sequences\n  getDummySequences: function getDummySequences(len, seqLen) {\n    var seqs = [];\n    if (!(typeof len !== "undefined" && len !== null)) {\n      len = _bmath2.default.getRandomInt(3, 5);\n    }\n    if (!(typeof seqLen !== "undefined" && seqLen !== null)) {\n      seqLen = _bmath2.default.getRandomInt(50, 200);\n    }\n\n    for (var i = 1; 1 < len ? i <= len : i >= len; 1 < len ? i++ : i--) {\n      seqs.push(new Sequence(SeqGen._generateSequence(seqLen), "seq" + i, "r" + i));\n    }\n    return seqs;\n  },\n\n  getRandomChar: function getRandomChar(dict) {\n    var possible = dict || "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    return possible.charAt(Math.floor(Math.random() * possible.length));\n  },\n\n  // generates a dummy sequences\n  // @param len [int] number of generated sequences\n  // @param seqLen [int] length of the generated sequences\n  genConservedSequences: function genConservedSequences(len, seqLen, dict) {\n    var seqs = [];\n    if (!(typeof len !== "undefined" && len !== null)) {\n      len = _bmath2.default.getRandomInt(3, 5);\n    }\n    if (!(typeof seqLen !== "undefined" && seqLen !== null)) {\n      seqLen = _bmath2.default.getRandomInt(50, 200);\n    }\n\n    dict = dict || "ACDEFGHIKLMNPQRSTVWY---";\n\n    for (var _i = 1; 1 < len ? _i <= len : _i >= len; 1 < len ? _i++ : _i--) {\n      seqs[_i - 1] = "";\n    }\n\n    var tolerance = 0.2;\n\n    var conservAim = 1;\n    var end = seqLen - 1;\n    for (var _i2 = 0; 0 < end ? _i2 <= end : _i2 >= end; 0 < end ? _i2++ : _i2--) {\n      if (_i2 % 3 === 0) {\n        conservAim = _bmath2.default.getRandomInt(50, 100) / 100;\n      }\n      var observed = [];\n      var end1 = len - 1;\n      for (var j = 0; 0 < end1 ? j <= end1 : j >= end1; 0 < end1 ? j++ : j--) {\n        var counter = 0;\n        var c = void 0;\n        while (counter < 100) {\n          c = SeqGen.getRandomChar(dict);\n          var cConserv = Stat(observed);\n          cConserv.addSeq(c);\n          counter++;\n          if (Math.abs(conservAim - cConserv.scale(cConserv.conservation())[0]) < tolerance) {\n            break;\n          }\n        }\n        seqs[j] += c;\n        observed.push(c);\n      }\n    }\n\n    var pseqs = [];\n    for (var i = 1; 1 < len ? i <= len : i >= len; 1 < len ? i++ : i--) {\n      pseqs.push(new Sequence(seqs[i - 1], "seq" + i, "r" + i));\n    }\n\n    return pseqs;\n  }\n};\nexports.default = SeqGen;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/seqgen.js?')},"./node_modules/@intermine/msa-viewer/lib/utils/svg.js":
/*!*************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/svg.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// mini svg helper\n\nvar svgns = \"http://www.w3.org/2000/svg\";\n\nvar setAttr = function setAttr(obj, opts) {\n  for (var name in opts) {\n    var value = opts[name];\n    obj.setAttributeNS(null, name, value);\n  }\n  return obj;\n};\n\nvar Base = function Base(opts) {\n  var svg = document.createElementNS(svgns, 'svg');\n  svg.setAttribute(\"width\", opts.width);\n  svg.setAttribute(\"height\", opts.height);\n  return svg;\n};\n\nvar Rect = function Rect(opts) {\n  var rect = document.createElementNS(svgns, 'rect');\n  return setAttr(rect, opts);\n};\n\nvar Line = function Line(opts) {\n  var line = document.createElementNS(svgns, 'line');\n  return setAttr(line, opts);\n};\n\nvar Polygon = function Polygon(opts) {\n  var line = document.createElementNS(svgns, 'polygon');\n  return setAttr(line, opts);\n};\n\nexports.base = Base;\nexports.line = Line;\nexports.rect = Rect;\nexports.polygon = Polygon;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/svg.js?")},"./node_modules/@intermine/msa-viewer/lib/utils/tree.js":
/*!**************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/utils/tree.js ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar _SeqCollection = __webpack_require__(/*! ../model/SeqCollection */ "./node_modules/@intermine/msa-viewer/lib/model/SeqCollection.js");\n\nvar _SeqCollection2 = _interopRequireDefault(_SeqCollection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TreeHelper = function TreeHelper(msa) {\n  this.msa = msa;\n  return this;\n};\n\nvar tf = { loadTree: function loadTree(cb) {\n    return this.msa.g.package.loadPackages(["msa-tnt", "biojs-io-newick"], cb);\n  },\n\n  showTree: function showTree(newickStr) {\n    var newick = window.require("biojs-io-newick");\n    var mt = window.require("msa-tnt");\n\n    if (typeof newickStr === "string") {\n      var newickObj = newick.parse_newick(newickStr);\n    } else {\n      newickObj = newickStr;\n    }\n\n    var sel = new mt.selections();\n    var treeDiv;\n\n    if (this.msa.el.getElementsByClassName(\'tnt_groupDiv\').length === 0) {\n      treeDiv = document.createElement("div");\n      this.msa.el.appendChild(treeDiv);\n    } else {\n      console.log(\'A tree already exists. It will be overridden.\');\n      treeDiv = this.msa.el.getElementsByClassName(\'tnt_groupDiv\')[0].parentNode;\n      treeDiv.innerHTML = \'\';\n    }\n\n    var seqs = this.msa.seqs.toJSON();\n    //adapt tree ids to sequence ids\n    function iterateTree(nwck) {\n      if (nwck.children != null) {\n        nwck.children.forEach(function (x) {\n          return iterateTree(x);\n        });\n      } else {\n        //found a leave\n        var seq = seqs.filter(function (s) {\n          return s.name === nwck.name;\n        })[0];\n\n        if (seq != null) {\n          if (typeof seq.id === \'number\') {\n            //no tree has been uploaded so far, seqs have standard IDs\n            seq.ids = ["s" + (seq.id + 1)];\n            nwck.name = "s" + (seq.id + 1);\n          } else {\n            //seqs have custom ids - don\'t mess with these\n            nwck.name = seq.id;\n          }\n        }\n      }\n    }\n    iterateTree(newickObj);\n\n    var nodes = mt.app({\n      seqs: seqs,\n      tree: newickObj\n    });\n\n    var t = new mt.adapters.tree({\n      model: nodes,\n      el: treeDiv,\n      sel: sel\n    });\n\n    //treeDiv.style.width = "500px"\n\n    // construct msa in a virtual dom\n    var m = new mt.adapters.msa({\n      model: nodes,\n      sel: sel,\n      msa: this.msa\n    });\n\n    // remove top collection\n    nodes.models.forEach(function (e) {\n      delete e.collection;\n      return Object.setPrototypeOf(e, __webpack_require__(/*! backbone-thin */ "./node_modules/backbone-thin/index.js").Model.prototype);\n    });\n\n    this.msa.seqs.reset(nodes.models);\n    //@msa.draw()\n    //@msa.render()\n    return console.log(this.msa.seqs);\n  },\n\n  // workaround against browserify\'s static analysis\n  require: function (_require) {\n    function require(_x) {\n      return _require.apply(this, arguments);\n    }\n\n    require.toString = function () {\n      return _require.toString();\n    };\n\n    return require;\n  }(function (pkg) {\n    return __webpack_require__("./node_modules/@intermine/msa-viewer/lib/utils sync recursive")(pkg);\n  })\n};\n\n(0, _lodash.extend)(TreeHelper.prototype, tf);\nexports.default = TreeHelper;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/utils/tree.js?')},"./node_modules/@intermine/msa-viewer/lib/views/AlignmentBody.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/AlignmentBody.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _CanvasSeqBlock = __webpack_require__(/*! ./canvas/CanvasSeqBlock */ "./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSeqBlock.js");\n\nvar _CanvasSeqBlock2 = _interopRequireDefault(_CanvasSeqBlock);\n\nvar _LabelBlock = __webpack_require__(/*! ./labels/LabelBlock */ "./node_modules/@intermine/msa-viewer/lib/views/labels/LabelBlock.js");\n\nvar _LabelBlock2 = _interopRequireDefault(_LabelBlock);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n\n\nvar View = boneView.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n\n    if (true) {\n      var labelblock = new _LabelBlock2.default({ model: this.model, g: this.g });\n      labelblock.ordering = -1;\n      this.addView("labelblock", labelblock);\n    }\n\n    if (this.g.vis.get("sequences")) {\n      var seqblock = new _CanvasSeqBlock2.default({ model: this.model, g: this.g });\n      seqblock.ordering = 0;\n      this.addView("seqblock", seqblock);\n    }\n\n    this.listenTo(this.g.zoomer, "change:alignmentHeight", this.adjustHeight);\n    this.listenTo(this.g.zoomer, "change:alignmentWidth", this.adjustWidth);\n    this.listenTo(this.g.columns, "change:hidden", this.adjustHeight);\n    return this;\n  },\n\n  render: function render() {\n    this.renderSubviews();\n    this.el.className = "biojs_msa_albody";\n    this.el.style.whiteSpace = "nowrap";\n    this.adjustHeight();\n    this.adjustWidth();\n    return this;\n  },\n\n  adjustHeight: function adjustHeight() {\n    if (this.g.zoomer.get("alignmentHeight") === "auto") {\n      // TODO: fix the magic 5\n      return this.el.style.height = this.g.zoomer.get("rowHeight") * this.model.length + 5;\n    } else {\n      return this.el.style.height = this.g.zoomer.get("alignmentHeight");\n    }\n  },\n\n  adjustWidth: function adjustWidth() {\n    // TODO: 15 is the width of the scrollbar\n    return this.el.style.width = this.getWidth();\n  },\n\n  getWidth: function getWidth() {\n    var width = 0;\n    width += this.g.zoomer.getLeftBlockWidth();\n    if (this.g.vis.get("sequences")) {\n      width += this.g.zoomer.get("alignmentWidth");\n    }\n    return width;\n  }\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/AlignmentBody.js?')},"./node_modules/@intermine/msa-viewer/lib/views/OverviewBox.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/OverviewBox.js ***!
  \*********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _Selection = __webpack_require__(/*! ../g/selection/Selection */ "./node_modules/@intermine/msa-viewer/lib/g/selection/Selection.js");\n\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar mouse = __webpack_require__(/*! mouse-pos */ "./node_modules/mouse-pos/index.js");\nvar jbone = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\n\n\nvar OverviewBox = view.extend({\n\n  className: "biojs_msa_overviewbox",\n  tagName: "canvas",\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.listenTo(this.g.zoomer, "change:boxRectWidth change:boxRectHeight change:overviewboxPaddingTop", this.rerender);\n    this.listenTo(this.g.zoomer, "change:alignmentHeight change:alignmentWidth", this.rerender);\n    this.listenTo(this.g.zoomer, "change:overviewboxWidth change:overviewboxHeigth", this.rerender);\n    this.listenTo(this.g.selcol, "add reset change", this.rerender);\n    this.listenTo(this.g.columns, "change:hidden", this.rerender);\n    this.listenTo(this.g.colorscheme, "change:showLowerCase", this.rerender);\n    this.listenTo(this.model, "change", _.debounce(this.rerender, 5));\n\n    // color\n    this.color = this.g.colorscheme.getSelectedScheme();\n    this.listenTo(this.g.colorscheme, "change:scheme", function () {\n      this.color = this.g.colorscheme.getSelectedScheme();\n      return this.rerender();\n    });\n    return this.dragStart = [];\n  },\n\n  events: { click: "_onclick",\n    mousedown: "_onmousedown"\n  },\n\n  rerender: function rerender() {\n    if (!this.g.config.get("manualRendering")) {\n      return this.render();\n    }\n  },\n\n  render: function render() {\n    this._createCanvas();\n    this.el.textContent = "overview";\n    this.el.style.marginTop = this.g.zoomer.get("overviewboxPaddingTop");\n\n    // background bg for non-drawed area\n    this.ctx.fillStyle = "#999999";\n    this.ctx.fillRect(0, 0, this.el.width, this.el.height);\n\n    var len = this.model.length;\n    var hidden = this.g.columns.get("hidden");\n    var showLowerCase = this.g.colorscheme.get("showLowerCase");\n\n    var y = -this.coords.boxes_size.y;\n    for (var ybox = 0; ybox < this.coords.boxes.y; ybox++) {\n      var seqs = [];\n      var seq_hidden = [];\n      for (var i = Math.floor(ybox * this.coords.resid_per_box.y); i < Math.floor((ybox + 1) * this.coords.resid_per_box.y) && i < len; i++) {\n        // fixes weird bug on tatyana\'s machine\n        if (!this.model.at(i)) {\n          continue;\n        }\n        seqs.push(this.model.at(i).get("seq"));\n        seq_hidden.push(this.model.at(i).get(\'hidden\'));\n      }\n      var x = 0;\n      y = y + this.coords.boxes_size.y;\n\n      for (var xbox = 0; xbox < this.coords.boxes.x; xbox++) {\n        var colors = [];\n        for (var _i = 0; _i < seqs.length; _i++) {\n          for (var j = Math.floor(xbox * this.coords.resid_per_box.x); j < Math.floor((xbox + 1) * this.coords.resid_per_box.x) && j < seqs[_i].length; j++) {\n            if (seq_hidden[_i]) {\n              colors.push("grey");\n              continue;\n            }\n            var c = seqs[_i][j];\n            // todo: optional uppercasing\n            if (showLowerCase) {\n              c = c.toUpperCase();\n            }\n            var color = this.color.getColor(c, { pos: j });\n\n            if (hidden.indexOf(j) >= 0) {\n              color = "grey";\n            }\n\n            if (typeof color !== "undefined" && color !== null) {\n              colors.push(color);\n            }\n          }\n        }\n\n        if (colors.length !== 0) {\n          this.ctx.fillStyle = this._mode(colors);\n          this.ctx.fillRect(x, y, this.coords.boxes_size.x, this.coords.boxes_size.y);\n        }\n\n        x = x + this.coords.boxes_size.x;\n      }\n    }\n\n    return this._drawSelection();\n  },\n\n  coords: {\n    screen_to_model: function screen_to_model(val, coord) {\n      var pos = val * this.resid_per_box[coord] / this.boxes_size[coord];\n      return Math.floor(pos);\n    },\n    model_to_screen: function model_to_screen(val, coord) {\n      return Math.floor(val * this.boxes_size[coord] / this.resid_per_box[coord]);\n    },\n    updatecoords_transform: function updatecoords_transform(overviewBox) {\n      var rectHeight = overviewBox.g.zoomer.get(\'boxRectHeight\');\n      var rectWidth = overviewBox.g.zoomer.get(\'boxRectWidth\');\n      var setting_w = overviewBox.g.zoomer.get(\'overviewboxWidth\');\n      var setting_h = overviewBox.g.zoomer.get(\'overviewboxHeight\');\n\n      var contWidth = setting_w === "fixed" ? overviewBox.model.getMaxLength() * rectWidth : Math.min(overviewBox.g.zoomer.get(\'alignmentWidth\') + overviewBox.g.zoomer.getLeftBlockWidth(), overviewBox.model.getMaxLength() * rectWidth);\n      var contHeight = setting_h === "fixed" ? overviewBox.model.length * rectHeight : Math.min(isNaN(parseInt(setting_h, 10)) ? 1e10 : parseInt(setting_h, 10), overviewBox.model.length * rectHeight);\n\n      this.container_size = { x: contWidth, y: contHeight };\n      this.boxes_size = { x: rectWidth, y: rectHeight };\n      this.resid_per_box = { x: Math.max(1, overviewBox.model.getMaxLength() / contWidth * rectWidth),\n        y: Math.max(1, overviewBox.model.length / contHeight * rectHeight) };\n      this.boxes = { x: Math.ceil(contWidth / rectWidth),\n        y: Math.ceil(contHeight / rectHeight) };\n    }\n  },\n\n  _mode: function _mode(arr) {\n    // get the mode, i.e. the most frequent element of an array\n    return arr.sort(function (a, b) {\n      return arr.filter(function (v) {\n        return v === a;\n      }).length - arr.filter(function (v) {\n        return v === b;\n      }).length;\n    }).pop();\n  },\n\n  _drawSelection: function _drawSelection() {\n    var _this = this;\n\n    // hide during selection\n    if (this.dragStart.length > 0 && !this.prolongSelection) {\n      return;\n    }\n\n    this.ctx.fillStyle = "#666666";\n    this.ctx.globalAlpha = 0.9;\n    var len = this.g.selcol.length;\n\n    var _loop = function _loop(i) {\n      var sel = _this.g.selcol.at(i);\n      if (!sel) return "continue";\n      var seq = void 0,\n          pos = void 0;\n      if (sel.get(\'type\') === \'column\') {\n        _this.ctx.fillRect(_this.coords.boxes_size.x * sel.get(\'xStart\'), 0, _this.coords.boxes_size.x * (sel.get(\'xEnd\') - sel.get(\'xStart\') + 1), _this.coords.container_size.y);\n      } else if (sel.get(\'type\') === \'row\') {\n        seq = _this.model.filter(function (el) {\n          return el.get(\'id\') === sel.get(\'seqId\');\n        })[0];\n        pos = _this.model.indexOf(seq);\n        _this.ctx.fillRect(0, _this.coords.model_to_screen(pos, \'y\'), _this.coords.model_to_screen(seq.get(\'seq\').length, \'x\'), _this.coords.boxes_size.y);\n      } else if (sel.get(\'type\') === \'pos\') {\n        seq = _this.model.filter(function (el) {\n          return el.get(\'id\') === sel.get(\'seqId\');\n        })[0];\n        pos = _this.model.indexOf(seq);\n        _this.ctx.fillRect(_this.coords.model_to_screen(sel.get(\'xStart\'), \'x\'), _this.coords.model_to_screen(pos, \'y\'), _this.coords.model_to_screen(sel.get(\'xEnd\') - sel.get(\'xStart\') + 1, \'x\'), _this.coords.boxes_size.y);\n      }\n    };\n\n    for (var i = 0; i < len; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === "continue") continue;\n    }\n\n    return this.ctx.globalAlpha = 1;\n  },\n\n  _onclick: function _onclick(evt) {\n    return this.g.trigger("meta:click", { seqId: this.model.get("id", { evt: evt }) });\n  },\n\n  _onmousemove: function _onmousemove(e) {\n    // duplicate events\n    if (this.dragStart.length === 0) {\n      return;\n    }\n\n    this.render();\n    this.ctx.fillStyle = "#666666";\n    this.ctx.globalAlpha = 0.9;\n\n    var rect = this._calcSelection(mouse.abs(e));\n    this.ctx.fillRect(rect[0][0], rect[1][0], rect[0][1] - rect[0][0], rect[1][1] - rect[1][0]);\n\n    // abort selection events of the browser\n    e.preventDefault();\n    return e.stopPropagation();\n  },\n\n  // start the selection mode\n  _onmousedown: function _onmousedown(e) {\n    var _this2 = this;\n\n    this.dragStart = mouse.abs(e);\n    this.dragStartRel = mouse.rel(e);\n\n    if (e.ctrlKey || e.metaKey) {\n      this.prolongSelection = true;\n    } else {\n      this.prolongSelection = false;\n    }\n    // enable global listeners\n    jbone(document.body).on(\'mousemove.overmove\', function (e) {\n      return _this2._onmousemove(e);\n    });\n    jbone(document.body).on(\'mouseup.overup\', function (e) {\n      return _this2._onmouseup(e);\n    });\n    return this.dragStart;\n  },\n\n  // calculates the current selection\n  _calcSelection: function _calcSelection(dragMove) {\n    // relative to first click\n    var dragRel = [dragMove[0] - this.dragStart[0], dragMove[1] - this.dragStart[1]];\n\n    // relative to target\n    for (var i = 0; i <= 1; i++) {\n      dragRel[i] = this.dragStartRel[i] + dragRel[i];\n    }\n\n    // 0:x, 1: y\n    var rect = [[this.dragStartRel[0], dragRel[0]], [this.dragStartRel[1], dragRel[1]]];\n\n    // swap the coordinates if needed\n    for (var _i2 = 0; _i2 <= 1; _i2++) {\n      if (rect[_i2][1] < rect[_i2][0]) {\n        rect[_i2] = [rect[_i2][1], rect[_i2][0]];\n      }\n\n      // lower limit\n      rect[_i2][0] = Math.max(rect[_i2][0], 0);\n    }\n\n    return rect;\n  },\n\n  _endSelection: function _endSelection(dragEnd) {\n    // remove listeners\n    jbone(document.body).off(\'.overmove\');\n    jbone(document.body).off(\'.overup\');\n\n    // duplicate events\n    if (this.dragStart.length === 0) {\n      return;\n    }\n\n    var rect = this._calcSelection(dragEnd);\n\n    // x\n    for (var i = 0; i <= 1; i++) {\n      rect[0][i] = this.coords.screen_to_model(rect[0][i], \'x\');\n    }\n\n    // y\n    for (var i = 0; i <= 1; i++) {\n      rect[1][i] = this.coords.screen_to_model(rect[1][i], \'y\');\n    }\n\n    // upper limit\n    rect[0][1] = Math.min(this.model.getMaxLength() - 1, rect[0][1]);\n    rect[1][1] = Math.min(this.model.length - 1, rect[1][1]);\n\n    // select\n    var selis = [];\n    for (var j = rect[1][0]; j <= rect[1][1]; j++) {\n      var args = { seqId: this.model.at(j).get(\'id\'), xStart: rect[0][0], xEnd: rect[0][1] };\n      selis.push(new _Selection.possel(args));\n    }\n\n    // reset\n    this.dragStart = [];\n    // look for ctrl key\n    if (this.prolongSelection) {\n      this.g.selcol.add(selis);\n    } else {\n      this.g.selcol.reset(selis);\n    }\n\n    // safety check + update offset\n    this.g.zoomer.setLeftOffset(rect[0][0]);\n    return this.g.zoomer.setTopOffset(rect[1][0]);\n  },\n\n  // ends the selection mode\n  _onmouseup: function _onmouseup(e) {\n    return this._endSelection(mouse.abs(e));\n  },\n\n  _onmouseout: function _onmouseout(e) {\n    return this._endSelection(mouse.abs(e));\n  },\n\n  // init the canvas\n  _createCanvas: function _createCanvas() {\n    this.coords.updatecoords_transform(this);\n\n    this.el.height = this.coords.container_size.y;\n    this.el.width = this.coords.container_size.x;\n    this.ctx = this.el.getContext("2d");\n    this.el.style.overflow = "auto";\n    return this.el.style.cursor = "crosshair";\n  }\n});\nexports.default = OverviewBox;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/OverviewBox.js?')},"./node_modules/@intermine/msa-viewer/lib/views/ScaleSlider.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/ScaleSlider.js ***!
  \*********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar BoneView = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\n\nvar $ = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\n//const Slider = require("bootstrap-slider");\n\nvar View = BoneView.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.listenTo(this.g.zoomer, "change:columnWidth", this.render);\n    this.toggleClass = \'msa-hide\';\n    this.isVisible = true;\n    return this;\n  },\n\n  attributes: {\n    class: "biojs_msa_scale"\n  },\n\n  events: {\n    \'change input\': \'updateSlider\',\n    \'click button.msa-btn-close\': \'hide\',\n    \'click button.msa-btn-open\': \'show\',\n    \'click button[data-action]\': \'clickButton\'\n  },\n\n  template: (0, _lodash.template)(\'\\\n<div class="msa-scale-minimised">\\\n  <button class="btn msa-btn msa-btn-open">Zoom</button>\\\n</div>\\\n<div class="msa-scale-maximised">\\\n  <button class="btn msa-btn msa-btn-close" style="float:right">&times; close</button>\\\n  <div>\\\n  <input type="range" \\\n    data-provide="slider" \\\n    min="<%= min %>" \\\n    max="<%= max %>" \\\n    step="<%= step %>" \\\n    value="<%= value %>" \\\n  >\\\n  </div>\\\n  <div class="btngroup msa-btngroup">\\\n    <button class="btn msa-btn" data-action="smaller"><span class="glyphicon-zoom-out"></span>-</button>\\\n    <button class="btn msa-btn" data-action="bigger"><span class="glyphicon-zoom-in"></span>+</button>\\\n    <button class="btn msa-btn" data-action="reset"><span class="glyphicon-repeat"></span>reset</button>\\\n  </div>\\\n</div>\\\n\'),\n\n  render: function render() {\n    var sizeRange = this.model.getSizeRange();\n    var stash = {\n      value: this.model.getSize(),\n      min: sizeRange[0],\n      max: sizeRange[1],\n      step: this.model.step || 1\n    };\n    this.$el.html(this.template(stash));\n    if (this.isVisible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n    return this;\n  },\n\n  updateSlider: function updateSlider(e) {\n    var target = e.target;\n    var size = parseInt($(target).val());\n    //console.log( "updateSize", size );\n    this.model.setSize(size);\n  },\n\n  clickButton: function clickButton(e) {\n    console.log("clickButton", this, e);\n    var target = e.target;\n    var action = $(target).data(\'action\');\n    var method = this.model[action];\n    // bigger, smaller, reset\n    if (typeof this.model[action] === \'function\') {\n      this.model[action]();\n    }\n    return this;\n  },\n\n  hide: function hide() {\n    this.isVisible = false;\n    this.$el.find(".msa-scale-minimised").removeClass(this.toggleClass);\n    this.$el.find(".msa-scale-maximised").addClass(this.toggleClass);\n  },\n\n  show: function show() {\n    this.isVisible = false;\n    this.$el.find(".msa-scale-minimised").addClass(this.toggleClass);\n    this.$el.find(".msa-scale-maximised").removeClass(this.toggleClass);\n  }\n\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/ScaleSlider.js?')},"./node_modules/@intermine/msa-viewer/lib/views/Search.js":
/*!****************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/Search.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _Selection = __webpack_require__(/*! ../g/selection/Selection */ "./node_modules/@intermine/msa-viewer/lib/g/selection/Selection.js");\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\nvar k = __webpack_require__(/*! koala-js */ "./node_modules/koala-js/index.js");\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\n\n// this is a very simplistic approach to show search result\n// TODO: needs proper styling\nvar View = boneView.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n\n    this.listenTo(this.g.user, "change:searchText", function (model, prop) {\n      this.search(prop);\n      return this.render();\n    });\n    this.sel = [];\n    return this.selPos = 0;\n  },\n\n  events: { "scroll": "_sendScrollEvent" },\n\n  render: function render() {\n    this.renderSubviews();\n\n    this.el.className = "biojs_msa_searchresult";\n    var searchText = this.g.user.get("searchText");\n    if (typeof searchText !== "undefined" && searchText !== null && searchText.length > 0) {\n      if (this.sel.length === 0) {\n        this.el.textContent = "no selection found";\n      } else {\n        this.resultBox = k.mk("div");\n        this.resultBox.className = "biojs_msa_searchresult_ovbox";\n        this.updateResult();\n        this.el.appendChild(this.resultBox);\n        this.el.appendChild(this.buildBtns());\n      }\n    }\n    return this;\n  },\n\n  updateResult: function updateResult() {\n    var text = "search pattern: " + this.g.user.get("searchText");\n    text += ", selection: " + (this.selPos + 1);\n    var seli = this.sel[this.selPos];\n    text += " (";\n    text += seli.get("xStart") + " - " + seli.get("xEnd");\n    text += ", id: " + seli.get("seqId");\n    text += ")";\n    return this.resultBox.textContent = text;\n  },\n\n  buildBtns: function buildBtns() {\n    var _this = this;\n\n    var prevBtn = k.mk("button");\n    prevBtn.textContent = "Prev";\n    prevBtn.addEventListener("click", function () {\n      return _this.moveSel(-1);\n    });\n\n    var nextBtn = k.mk("button");\n    nextBtn.textContent = "Next";\n    nextBtn.addEventListener("click", function () {\n      return _this.moveSel(1);\n    });\n\n    var allBtn = k.mk("button");\n    allBtn.textContent = "All";\n    allBtn.addEventListener("click", function () {\n      return _this.g.selcol.reset(_this.sel);\n    });\n\n    var searchrow = k.mk("div");\n    searchrow.appendChild(prevBtn);\n    searchrow.appendChild(nextBtn);\n    searchrow.appendChild(allBtn);\n    searchrow.className = "biojs_msa_searchresult_row";\n    return searchrow;\n  },\n\n  moveSel: function moveSel(relDist) {\n    var selNew = this.selPos + relDist;\n    if (selNew < 0 || selNew >= this.sel.length) {\n      return -1;\n    } else {\n      this.focus(selNew);\n      this.selPos = selNew;\n      return this.updateResult();\n    }\n  },\n\n  focus: function focus(selPos) {\n    var seli = this.sel[selPos];\n    var leftIndex = seli.get("xStart");\n    this.g.zoomer.setLeftOffset(leftIndex);\n    return this.g.selcol.reset([seli]);\n  },\n\n  search: function search(searchText) {\n    // marks all hits\n    var origIndex;\n    var search = new RegExp(searchText, "gi");\n    var newSeli = [];\n    var leftestIndex = origIndex = 100042;\n\n    this.model.each(function (seq) {\n      var strSeq = seq.get("seq");\n      return function () {\n        var match;\n        var result = [];\n        while (match = search.exec(strSeq)) {\n          var index = match.index;\n          var args = { xStart: index, xEnd: index + match[0].length - 1, seqId: seq.get("id") };\n          newSeli.push(new _Selection.possel(args));\n          result.push(leftestIndex = Math.min(index, leftestIndex));\n        }\n        return result;\n      }();\n    });\n\n    this.g.selcol.reset(newSeli);\n\n    // safety check + update offset\n    if (leftestIndex === origIndex) {\n      leftestIndex = 0;\n    }\n    this.g.zoomer.setLeftOffset(leftestIndex);\n\n    return this.sel = newSeli;\n  }\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/Search.js?')},"./node_modules/@intermine/msa-viewer/lib/views/Stage.js":
/*!***************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/Stage.js ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar _AlignmentBody = __webpack_require__(/*! ./AlignmentBody */ "./node_modules/@intermine/msa-viewer/lib/views/AlignmentBody.js");\n\nvar _AlignmentBody2 = _interopRequireDefault(_AlignmentBody);\n\nvar _HeaderBlock = __webpack_require__(/*! ./header/HeaderBlock */ "./node_modules/@intermine/msa-viewer/lib/views/header/HeaderBlock.js");\n\nvar _HeaderBlock2 = _interopRequireDefault(_HeaderBlock);\n\nvar _OverviewBox = __webpack_require__(/*! ./OverviewBox */ "./node_modules/@intermine/msa-viewer/lib/views/OverviewBox.js");\n\nvar _OverviewBox2 = _interopRequireDefault(_OverviewBox);\n\nvar _Search = __webpack_require__(/*! ./Search */ "./node_modules/@intermine/msa-viewer/lib/views/Search.js");\n\nvar _Search2 = _interopRequireDefault(_Search);\n\nvar _ScaleSlider = __webpack_require__(/*! ./ScaleSlider */ "./node_modules/@intermine/msa-viewer/lib/views/ScaleSlider.js");\n\nvar _ScaleSlider2 = _interopRequireDefault(_ScaleSlider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n\n\n// a neat collection view\nvar View = boneView.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n\n    this.draw();\n    //@listenTo @model,"reset", ->\n    // we need to wait until stats gives us the ok\n    this.listenTo(this.g.stats, "reset", function () {\n      return this.rerender();\n    });\n\n    // debounce a bulk operation\n    this.listenTo(this.model, "change:hidden", (0, _lodash.debounce)(this.rerender, 10));\n\n    this.listenTo(this.model, "sort", this.rerender);\n    this.listenTo(this.model, "add", function () {\n      return console.log("seq add");\n    });\n\n    this.listenTo(this.g.vis, "change:sequences", this.rerender);\n    this.listenTo(this.g.vis, "change:overviewbox", this.rerender);\n    this.listenTo(this.g.visorder, "change", this.rerender);\n    this.listenTo(this.g.zoomer, "change:columnWidth", this.rerender);\n    this.listenTo(this.g.vis, "change:scaleslider", this.rerender);\n\n    return this;\n  },\n\n  draw: function draw() {\n    this.removeViews();\n\n    if (this.g.vis.get("overviewbox")) {\n      var overviewbox = new _OverviewBox2.default({ model: this.model, g: this.g });\n      overviewbox.ordering = this.g.visorder.get(\'overviewBox\');\n      this.addView("overviewBox", overviewbox);\n    }\n\n    if (true) {\n      var headerblock = new _HeaderBlock2.default({ model: this.model, g: this.g });\n      headerblock.ordering = this.g.visorder.get(\'headerBox\');\n      this.addView("headerBox", headerblock);\n    }\n\n    if (true) {\n      var searchblock = new _Search2.default({ model: this.model, g: this.g });\n      searchblock.ordering = this.g.visorder.get(\'searchBox\');\n      this.addView("searchbox", searchblock);\n    }\n\n    var body = new _AlignmentBody2.default({ model: this.model, g: this.g });\n    body.ordering = this.g.visorder.get(\'alignmentBody\');\n    this.addView("body", body);\n\n    if (this.g.vis.get("scaleslider")) {\n      var scaleslider = new _ScaleSlider2.default({ model: this.g.scale, g: this.g });\n      scaleslider.ordering = this.g.visorder.get(\'scaleSlider\');\n      this.addView("scaleSlider", scaleslider);\n    }\n\n    return this;\n  },\n\n  render: function render(e) {\n    this.renderSubviews();\n    this.el.className = "biojs_msa_stage";\n    return this;\n  },\n\n  rerender: function rerender() {\n    if (!this.g.config.get("manualRendering")) {\n      this.draw();\n      return this.render();\n    }\n  }\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/Stage.js?')},"./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasCharCache.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasCharCache.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Events = __webpack_require__(/*! biojs-events */ "./node_modules/biojs-events/index.js");\n\nvar CanvasCharCache = function () {\n  function CanvasCharCache(g) {\n    _classCallCheck(this, CanvasCharCache);\n\n    this.g = g;\n    this.cache = {};\n    this.cacheHeight = 0;\n    this.cacheWidth = 0;\n  }\n\n  // returns a cached canvas\n\n\n  _createClass(CanvasCharCache, [{\n    key: "getFontTile",\n    value: function getFontTile(letter, width, height) {\n      // validate cache\n      if (width !== this.cacheWidth || height !== this.cacheHeight) {\n        this.cacheHeight = height;\n        this.cacheWidth = width;\n        this.cache = {};\n      }\n\n      if (this.cache[letter] === undefined) {\n        this.createTile(letter, width, height);\n      }\n\n      return this.cache[letter];\n    }\n\n    // creates a canvas with a single letter\n    // (for the fast font cache)\n\n  }, {\n    key: "createTile",\n    value: function createTile(letter, width, height) {\n\n      var canvas = this.cache[letter] = document.createElement("canvas");\n      canvas.width = width;\n      canvas.height = height;\n      this.ctx = canvas.getContext(\'2d\');\n      this.ctx.font = this.g.zoomer.get("residueFont") + "px mono";\n\n      this.ctx.textBaseline = \'middle\';\n      this.ctx.textAlign = "center";\n\n      return this.ctx.fillText(letter, width / 2, height / 2, width);\n    }\n  }]);\n\n  return CanvasCharCache;\n}();\n\n;\nexports.default = CanvasCharCache;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasCharCache.js?')},"./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasCoordsCache.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasCoordsCache.js ***!
  \**********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar Events = __webpack_require__(/*! biojs-events */ "./node_modules/biojs-events/index.js");\n\nvar cache = {\n  setMaxScrollHeight: function setMaxScrollHeight() {\n    return this.maxScrollHeight = this.g.zoomer.getMaxAlignmentHeight() - this.g.zoomer.get(\'alignmentHeight\');\n  },\n  setMaxScrollWidth: function setMaxScrollWidth() {\n    return this.maxScrollWidth = this.g.zoomer.getMaxAlignmentWidth() - this.g.zoomer.getAlignmentWidth();\n  }\n};\n\nvar CacheConstructor = function CacheConstructor(g, model) {\n  this.g = g;\n  this.model = model;\n  this.maxScrollWidth = 0;\n  this.maxScrollHeight = 0;\n  this.setMaxScrollHeight();\n  this.setMaxScrollWidth();\n\n  this.listenTo(this.g.zoomer, "change:rowHeight", this.setMaxScrollHeight);\n  this.listenTo(this.g.zoomer, "change:columnWidth", this.setMaxScrollWidth);\n  this.listenTo(this.g.zoomer, "change:alignmentWidth", this.setMaxScrollWidth);\n  this.listenTo(this.g.zoomer, "change:alignmentHeight", this.setMaxScrollHeight);\n  this.listenTo(this.model, "add change reset", function () {\n    this.setMaxScrollHeight();\n    return this.setMaxScrollWidth();\n  }, this);\n  return this;\n};\n\n(0, _lodash.extend)(CacheConstructor.prototype, cache);\nEvents.mixin(CacheConstructor.prototype);\nexports.default = CacheConstructor;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasCoordsCache.js?')},"./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSelection.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSelection.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar CanvasSelection = function CanvasSelection(g, ctx) {\n  this.g = g;\n  this.ctx = ctx;\n  return this;\n};\n\n(0, _lodash.extend)(CanvasSelection.prototype, {\n\n  // TODO: should I be moved to the selection manager?\n  // returns an array with the currently selected residues\n  // e.g. [0,3] = pos 0 and 3 are selected\n  _getSelection: function _getSelection(model) {\n    var maxLen = model.get("seq").length;\n    var selection = [];\n    var sels = this.g.selcol.getSelForRow(model.get("id"));\n    var rows = (0, _lodash.find)(sels, function (el) {\n      return el.get("type") === "row";\n    });\n    if (typeof rows !== "undefined" && rows !== null) {\n      // full match\n      var end = maxLen - 1;\n      for (var n = 0; n <= end; n++) {\n        selection.push(n);\n      }\n    } else if (sels.length > 0) {\n      for (var i = 0, sel; i < sels.length; i++) {\n        sel = sels[i];\n        var start = sel.get("xStart");\n        var _end = sel.get("xEnd");\n        for (var _n = start; _n <= _end; _n++) {\n          selection.push(_n);\n        }\n      }\n    }\n\n    return selection;\n  },\n\n  // loops over all selection and calls the render method\n  _appendSelection: function _appendSelection(data) {\n    var _this = this;\n\n    var seq = data.model.get("seq");\n    var selection = this._getSelection(data.model);\n    // get the status of the upper and lower row\n    var getNextPrev = this._getPrevNextSelection(data.model);\n    var mPrevSel = getNextPrev[0];\n    var mNextSel = getNextPrev[1];\n\n    var boxWidth = this.g.zoomer.get("columnWidth");\n    var boxHeight = this.g.zoomer.get("rowHeight");\n\n    // avoid unnecessary loops\n    if (selection.length === 0) {\n      return;\n    }\n\n    var hiddenOffset = 0;\n    return function () {\n      var result = [];\n      var end = seq.length - 1;\n\n      var _loop = function _loop(n) {\n        result.push(function () {\n          if (data.hidden.indexOf(n) >= 0) {\n            return hiddenOffset++;\n          } else {\n            var k = n - hiddenOffset;\n            // only if its a new selection\n            if (selection.indexOf(n) >= 0 && (k === 0 || selection.indexOf(n - 1) < 0)) {\n              return _this._renderSelection({ n: n,\n                k: k,\n                selection: selection,\n                mPrevSel: mPrevSel,\n                mNextSel: mNextSel,\n                xZero: data.xZero,\n                yZero: data.yZero,\n                model: data.model });\n            }\n          }\n        }());\n      };\n\n      for (var n = 0; n <= end; n++) {\n        _loop(n);\n      }\n      return result;\n    }();\n  },\n\n  // draws a single user selection\n  _renderSelection: function _renderSelection(data) {\n\n    var xZero = data.xZero;\n    var yZero = data.yZero;\n    var n = data.n;\n    var k = data.k;\n    var selection = data.selection;\n    // and checks the prev and next row for selection  -> no borders in a selection\n    var mPrevSel = data.mPrevSel;\n    var mNextSel = data.mNextSel;\n\n    // get the length of this selection\n    var selectionLength = 0;\n    var end = data.model.get("seq").length - 1;\n    for (var i = n; i <= end; i++) {\n      if (selection.indexOf(i) >= 0) {\n        selectionLength++;\n      } else {\n        break;\n      }\n    }\n\n    // TODO: ugly!\n    var boxWidth = this.g.zoomer.get("columnWidth");\n    var boxHeight = this.g.zoomer.get("rowHeight");\n    var totalWidth = boxWidth * selectionLength + 1;\n\n    var hidden = this.g.columns.get(\'hidden\');\n\n    this.ctx.beginPath();\n    var beforeWidth = this.ctx.lineWidth;\n    this.ctx.lineWidth = 3;\n    var beforeStyle = this.ctx.strokeStyle;\n    this.ctx.strokeStyle = "#FF0000";\n\n    xZero += k * boxWidth;\n\n    // split up the selection into single cells\n    var xPart = 0;\n    var end1 = selectionLength - 1;\n    for (var _i = 0; _i <= end1; _i++) {\n      var xPos = n + _i;\n      if (hidden.indexOf(xPos) >= 0) {\n        continue;\n      }\n      // upper line\n      if (!(typeof mPrevSel !== "undefined" && mPrevSel !== null && mPrevSel.indexOf(xPos) >= 0)) {\n        this.ctx.moveTo(xZero + xPart, yZero);\n        this.ctx.lineTo(xPart + boxWidth + xZero, yZero);\n      }\n      // lower line\n      if (!(typeof mNextSel !== "undefined" && mNextSel !== null && mNextSel.indexOf(xPos) >= 0)) {\n        this.ctx.moveTo(xPart + xZero, boxHeight + yZero);\n        this.ctx.lineTo(xPart + boxWidth + xZero, boxHeight + yZero);\n      }\n\n      xPart += boxWidth;\n    }\n\n    // left\n    this.ctx.moveTo(xZero, yZero);\n    this.ctx.lineTo(xZero, boxHeight + yZero);\n\n    // right\n    this.ctx.moveTo(xZero + totalWidth, yZero);\n    this.ctx.lineTo(xZero + totalWidth, boxHeight + yZero);\n\n    this.ctx.stroke();\n    this.ctx.strokeStyle = beforeStyle;\n    return this.ctx.lineWidth = beforeWidth;\n  },\n\n  // looks at the selection of the prev and next el\n  // TODO: this is very naive, as there might be gaps above or below\n  _getPrevNextSelection: function _getPrevNextSelection(model) {\n\n    var modelPrev = model.collection.prev(model);\n    var modelNext = model.collection.next(model);\n    var mPrevSel = void 0,\n        mNextSel = void 0;\n    if (typeof modelPrev !== "undefined" && modelPrev !== null) {\n      mPrevSel = this._getSelection(modelPrev);\n    }\n    if (typeof modelNext !== "undefined" && modelNext !== null) {\n      mNextSel = this._getSelection(modelNext);\n    }\n    return [mPrevSel, mNextSel];\n  }\n});\nexports.default = CanvasSelection;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSelection.js?')},"./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSeqBlock.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSeqBlock.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar _CanvasCharCache = __webpack_require__(/*! ./CanvasCharCache */ "./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasCharCache.js");\n\nvar _CanvasCharCache2 = _interopRequireDefault(_CanvasCharCache);\n\nvar _CanvasSelection = __webpack_require__(/*! ./CanvasSelection */ "./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSelection.js");\n\nvar _CanvasSelection2 = _interopRequireDefault(_CanvasSelection);\n\nvar _CanvasSeqDrawer = __webpack_require__(/*! ./CanvasSeqDrawer */ "./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSeqDrawer.js");\n\nvar _CanvasSeqDrawer2 = _interopRequireDefault(_CanvasSeqDrawer);\n\nvar _CanvasCoordsCache = __webpack_require__(/*! ./CanvasCoordsCache */ "./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasCoordsCache.js");\n\nvar _CanvasCoordsCache2 = _interopRequireDefault(_CanvasCoordsCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\nvar mouse = __webpack_require__(/*! mouse-pos */ "./node_modules/mouse-pos/index.js");\n\nvar jbone = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\n\nvar View = boneView.extend({\n\n  tagName: "canvas",\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n\n    this.listenTo(this.g.zoomer, "change:_alignmentScrollLeft change:_alignmentScrollTop", function (model, value, options) {\n      if (!((typeof options !== "undefined" && options !== null ? options.origin : undefined) != null) || options.origin !== "canvasseq") {\n        return this.render();\n      }\n    });\n\n    this.listenTo(this.g.columns, "change:hidden", this.render);\n    this.listenTo(this.g.zoomer, "change:alignmentWidth change:alignmentHeight", this.render);\n    this.listenTo(this.g.colorscheme, "change", this.render);\n    this.listenTo(this.g.selcol, "reset add", this.render);\n    this.listenTo(this.model, "reset add", this.render);\n\n    // el props\n    this.el.style.display = "inline-block";\n    this.el.style.overflowX = "hidden";\n    this.el.style.overflowY = "hidden";\n    this.el.className = "biojs_msa_seqblock";\n\n    this.ctx = this.el.getContext(\'2d\');\n    this.cache = new _CanvasCharCache2.default(this.g);\n    this.coordsCache = new _CanvasCoordsCache2.default(this.g, this.model);\n\n    // clear the char cache\n    this.listenTo(this.g.zoomer, "change:residueFont", function () {\n      this.cache = new _CanvasCharCache2.default(this.g);\n      return this.render();\n    });\n\n    // init selection\n    this.sel = new _CanvasSelection2.default(this.g, this.ctx);\n\n    this._setColor();\n\n    // throttle the expensive draw function\n    this.throttleTime = 0;\n    this.throttleCounts = 0;\n    if (document.documentElement.style.webkitAppearance != null) {\n      // webkit browser - no throttling needed\n      this.throttledDraw = function () {\n        var start = +new Date();\n        this.draw();\n        this.throttleTime += +new Date() - start;\n        this.throttleCounts++;\n        if (this.throttleCounts > 15) {\n          var tTime = Math.ceil(this.throttleTime / this.throttleCounts);\n          console.log("avgDrawTime/WebKit", tTime);\n          // remove perf analyser\n          return this.throttledDraw = this.draw;\n        }\n      };\n    } else {\n      // slow browsers like Gecko\n      this.throttledDraw = (0, _lodash.throttle)(this.throttledDraw, 30);\n    }\n\n    return this.manageEvents();\n  },\n\n  // measures the time of a redraw and thus set the throttle limit\n  throttledDraw: function throttledDraw() {\n    // +new is the fastest: http://jsperf.com/new-date-vs-date-now-vs-performance-now/6\n    var start = +new Date();\n    this.draw();\n    this.throttleTime += +new Date() - start;\n    this.throttleCounts++;\n\n    // remove itself after analysis\n    if (this.throttleCounts > 15) {\n      var tTime = Math.ceil(this.throttleTime / this.throttleCounts);\n      console.log("avgDrawTime", tTime);\n      tTime *= 1.2; // add safety time\n      tTime = Math.max(20, tTime); // limit for ultra fast computers\n      return this.throttledDraw = _.throttle(this.draw, tTime);\n    }\n  },\n\n  manageEvents: function manageEvents() {\n    var events = {};\n    events.mousedown = "_onmousedown";\n    events.touchstart = "_ontouchstart";\n\n    if (this.g.config.get("registerMouseClicks")) {\n      events.dblclick = "_onclick";\n    }\n    if (this.g.config.get("registerMouseHover")) {\n      events.mousein = "_onmousein";\n      events.mouseout = "_onmouseout";\n    }\n\n    events.mousewheel = "_onmousewheel";\n    events.DOMMouseScroll = "_onmousewheel";\n    this.delegateEvents(events);\n\n    // listen for changes\n    this.listenTo(this.g.config, "change:registerMouseHover", this.manageEvents);\n    this.listenTo(this.g.config, "change:registerMouseClick", this.manageEvents);\n    return this.dragStart = [];\n  },\n\n  _setColor: function _setColor() {\n    return this.color = this.g.colorscheme.getSelectedScheme();\n  },\n\n  draw: function draw() {\n    // fastest way to clear the canvas\n    // http://jsperf.com/canvas-clear-speed/25\n    this.el.width = this.el.width;\n\n    // draw all the stuff\n    if (this.seqDrawer != null && this.model.length > 0) {\n      // char based\n      this.seqDrawer.drawLetters();\n      // row based\n      this.seqDrawer.drawRows(this.sel._appendSelection, this.sel);\n      return this.seqDrawer.drawRows(this.drawFeatures, this);\n    }\n  },\n\n  drawFeatures: function drawFeatures(data) {\n    var rectWidth = this.g.zoomer.get("columnWidth");\n    var rectHeight = this.g.zoomer.get("rowHeight");\n    if (data.model.attributes.height > 1) {\n      var ctx = this.ctx;\n      data.model.attributes.features.each(function (feature) {\n        ctx.fillStyle = feature.attributes.fillColor || "red";\n        var len = feature.attributes.xEnd - feature.attributes.xStart + 1;\n        var y = (feature.attributes.row + 1) * rectHeight;\n        return ctx.fillRect(feature.attributes.xStart * rectWidth + data.xZero, y + data.yZero, rectWidth * len, rectHeight);\n      });\n\n      // draw text\n      ctx.fillStyle = "black";\n      ctx.font = this.g.zoomer.get("residueFont") + "px mono";\n      ctx.textBaseline = \'middle\';\n      ctx.textAlign = "center";\n\n      return data.model.attributes.features.each(function (feature) {\n        var len = feature.attributes.xEnd - feature.attributes.xStart + 1;\n        var y = (feature.attributes.row + 1) * rectHeight;\n        return ctx.fillText(feature.attributes.text, data.xZero + feature.attributes.xStart * rectWidth + len / 2 * rectWidth, data.yZero + rectHeight * 0.5 + y);\n      });\n    }\n  },\n\n  render: function render() {\n\n    this.el.setAttribute(\'height\', this.g.zoomer.get("alignmentHeight") + "px");\n    this.el.setAttribute(\'width\', this.g.zoomer.getAlignmentWidth() + "px");\n\n    this.g.zoomer._checkScrolling(this._checkScrolling([this.g.zoomer.get(\'_alignmentScrollLeft\'), this.g.zoomer.get(\'_alignmentScrollTop\')]), { header: "canvasseq" });\n\n    this._setColor();\n\n    this.seqDrawer = new _CanvasSeqDrawer2.default(this.g, this.ctx, this.model, { width: this.el.width,\n      height: this.el.height,\n      color: this.color,\n      cache: this.cache\n    });\n\n    this.throttledDraw();\n    return this;\n  },\n\n  _onmousemove: function _onmousemove(e, reversed) {\n    if (this.dragStart.length === 0) {\n      return;\n    }\n\n    var dragEnd = mouse.abs(e);\n    // relative to first click\n    var relEnd = [dragEnd[0] - this.dragStart[0], dragEnd[1] - this.dragStart[1]];\n    // relative to initial scroll status\n\n    // scale events\n    var scaleFactor = this.g.zoomer.get("canvasEventScale");\n    if (reversed) {\n      scaleFactor = 3;\n    }\n    for (var i = 0; i <= 1; i++) {\n      relEnd[i] = relEnd[i] * scaleFactor;\n    }\n\n    // calculate new scrolling vals\n    var relDist = [this.dragStartScroll[0] - relEnd[0], this.dragStartScroll[1] - relEnd[1]];\n\n    // round values\n    for (var _i = 0; _i <= 1; _i++) {\n      relDist[_i] = Math.round(relDist[_i]);\n    }\n\n    // update scrollbar\n    var scrollCorrected = this._checkScrolling(relDist);\n    this.g.zoomer._checkScrolling(scrollCorrected, { origin: "canvasseq" });\n\n    // reset start if use scrolls out of bounds\n    for (var _i2 = 0; _i2 <= 1; _i2++) {\n      if (scrollCorrected[_i2] !== relDist[_i2]) {\n        if (scrollCorrected[_i2] === 0) {\n          // reset of left, top\n          this.dragStart[_i2] = dragEnd[_i2];\n          this.dragStartScroll[_i2] = 0;\n        } else {\n          // recalibrate on right, bottom\n          this.dragStart[_i2] = dragEnd[_i2] - scrollCorrected[_i2];\n        }\n      }\n    }\n\n    this.throttledDraw();\n\n    // abort selection events of the browser (mouse only)\n    if (e.preventDefault != null) {\n      e.preventDefault();\n      return e.stopPropagation();\n    }\n  },\n\n  // converts touches into old mouse event\n  _ontouchmove: function _ontouchmove(e) {\n    this._onmousemove(e.changedTouches[0], true);\n    e.preventDefault();\n    return e.stopPropagation();\n  },\n\n  // start the dragging mode\n  _onmousedown: function _onmousedown(e) {\n    var _this = this;\n\n    this.dragStart = mouse.abs(e);\n    this.dragStartScroll = [this.g.zoomer.get(\'_alignmentScrollLeft\'), this.g.zoomer.get(\'_alignmentScrollTop\')];\n    jbone(document.body).on(\'mousemove.overmove\', function (e) {\n      return _this._onmousemove(e);\n    });\n    jbone(document.body).on(\'mouseup.overup\', function () {\n      return _this._cleanup();\n    });\n    //jbone(document.body).on \'mouseout.overout\', (e) => @_onmousewinout(e)\n    return e.preventDefault();\n  },\n\n  // starts the touch mode\n  _ontouchstart: function _ontouchstart(e) {\n    var _this2 = this;\n\n    this.dragStart = mouse.abs(e.changedTouches[0]);\n    this.dragStartScroll = [this.g.zoomer.get(\'_alignmentScrollLeft\'), this.g.zoomer.get(\'_alignmentScrollTop\')];\n    jbone(document.body).on(\'touchmove.overtmove\', function (e) {\n      return _this2._ontouchmove(e);\n    });\n    return jbone(document.body).on(\'touchend.overtend touchleave.overtleave touchcancel.overtcanel\', function (e) {\n      return _this2._touchCleanup(e);\n    });\n  },\n\n  // checks whether mouse moved out of the window\n  // -> terminate dragging\n  _onmousewinout: function _onmousewinout(e) {\n    if (e.toElement === document.body.parentNode) {\n      return this._cleanup();\n    }\n  },\n\n  // terminates dragging\n  _cleanup: function _cleanup() {\n    this.dragStart = [];\n    // remove all listeners\n    jbone(document.body).off(\'.overmove\');\n    jbone(document.body).off(\'.overup\');\n    return jbone(document.body).off(\'.overout\');\n  },\n\n  // terminates touching\n  _touchCleanup: function _touchCleanup(e) {\n    if (e.changedTouches.length > 0) {\n      // maybe we can send a final event\n      this._onmousemove(e.changedTouches[0], true);\n    }\n\n    this.dragStart = [];\n    // remove all listeners\n    jbone(document.body).off(\'.overtmove\');\n    jbone(document.body).off(\'.overtend\');\n    jbone(document.body).off(\'.overtleave\');\n    return jbone(document.body).off(\'.overtcancel\');\n  },\n\n  // might be incompatible with some browsers\n  _onmousewheel: function _onmousewheel(e) {\n    var delta = mouse.wheelDelta(e);\n    this.g.zoomer.set(\'_alignmentScrollLeft\', this.g.zoomer.get(\'_alignmentScrollLeft\') + delta[0]);\n    this.g.zoomer.set(\'_alignmentScrollTop\', this.g.zoomer.get(\'_alignmentScrollTop\') + delta[1]);\n    return e.preventDefault();\n  },\n\n  _onclick: function _onclick(e) {\n    var res = this._getClickPos(e);\n    if (typeof res !== "undefined" && res !== null) {\n      if (res.feature != null) {\n        this.g.trigger("feature:click", res);\n      } else {\n        this.g.trigger("residue:click", res);\n      }\n    }\n    return this.throttledDraw();\n  },\n\n  _onmousein: function _onmousein(e) {\n    var res = this._getClickPos(e);\n    if (typeof res !== "undefined" && res !== null) {\n      if (res.feature != null) {\n        this.g.trigger("feature:mousein", res);\n      } else {\n        this.g.trigger("residue:mousein", res);\n      }\n    }\n    return this.throttledDraw();\n  },\n\n  _onmouseout: function _onmouseout(e) {\n    var res = this._getClickPos(e);\n    if (typeof res !== "undefined" && res !== null) {\n      if (res.feature != null) {\n        this.g.trigger("feature:mouseout", res);\n      } else {\n        this.g.trigger("residue:mouseout", res);\n      }\n    }\n\n    return this.throttledDraw();\n  },\n\n  _getClickPos: function _getClickPos(e) {\n    var coords = mouse.rel(e);\n\n    coords[0] += this.g.zoomer.get("_alignmentScrollLeft");\n    var x = Math.floor(coords[0] / this.g.zoomer.get("columnWidth"));\n\n    var _seqDrawer$_getSeqFor = this.seqDrawer._getSeqForYClick(coords[1]),\n        _seqDrawer$_getSeqFor2 = _slicedToArray(_seqDrawer$_getSeqFor, 2),\n        y = _seqDrawer$_getSeqFor2[0],\n        rowNumber = _seqDrawer$_getSeqFor2[1];\n\n    // add hidden columns\n\n\n    x += this.g.columns.calcHiddenColumns(x);\n    // add hidden seqs\n    y += this.model.calcHiddenSeqs(y);\n\n    x = Math.max(0, x);\n    y = Math.max(0, y);\n\n    var seqId = this.model.at(y).get("id");\n\n    if (rowNumber > 0) {\n      // click on a feature\n      var features = this.model.at(y).get("features").getFeatureOnRow(rowNumber - 1, x);\n      if (!(features.length === 0)) {\n        var feature = features[0];\n        console.log(features[0].attributes);\n        return { seqId: seqId, feature: feature, rowPos: x, evt: e };\n      }\n    } else {\n      // click on a seq\n      return { seqId: seqId, rowPos: x, evt: e };\n    }\n  },\n\n  // checks whether the scrolling coordinates are valid\n  // @returns: [xScroll,yScroll] valid coordinates\n  _checkScrolling: function _checkScrolling(scrollObj) {\n\n    // 0: maxLeft, 1: maxTop\n    var max = [this.coordsCache.maxScrollWidth, this.coordsCache.maxScrollHeight];\n\n    for (var i = 0; i <= 1; i++) {\n      if (scrollObj[i] > max[i]) {\n        scrollObj[i] = max[i];\n      }\n\n      if (scrollObj[i] < 0) {\n        scrollObj[i] = 0;\n      }\n    }\n\n    return scrollObj;\n  }\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSeqBlock.js?')},"./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSeqDrawer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSeqDrawer.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nvar Drawer = {\n\n  // caching the access is done for performance reasons\n  updateConfig: function updateConfig() {\n    this.rectWidth = this.g.zoomer.get(\'columnWidth\');\n    this.rectHeight = this.g.zoomer.get(\'rowHeight\');\n  },\n\n  drawLetters: function drawLetters() {\n\n    this.updateConfig();\n\n    // rects\n    this.ctx.globalAlpha = this.g.colorscheme.get("opacity");\n    this.drawSeqs(function (data) {\n      return this.drawSeq(data, this._drawRect);\n    });\n    this.ctx.globalAlpha = 1;\n\n    // letters\n    if (this.rectWidth >= this.g.zoomer.get(\'minLetterDrawSize\')) {\n      this.drawSeqs(function (data) {\n        return this.drawSeq(data, this._drawLetter);\n      });\n    }\n\n    return this;\n  },\n\n  drawSeqs: function drawSeqs(callback, target) {\n    var hidden = this.g.columns.get("hidden");\n\n    target = target || this;\n\n    var _getStartSeq = this.getStartSeq(),\n        _getStartSeq2 = _slicedToArray(_getStartSeq, 2),\n        start = _getStartSeq2[0],\n        y = _getStartSeq2[1];\n\n    for (var i = start; i < this.model.length; i++) {\n      var seq = this.model.at(i);\n      if (seq.get(\'hidden\')) {\n        continue;\n      }\n      callback.call(target, { model: seq, yPos: y, y: i, hidden: hidden });\n\n      var seqHeight = (seq.attributes.height || 1) * this.rectHeight;\n      y = y + seqHeight;\n\n      // out of viewport - stop\n      if (y > this.height) {\n        break;\n      }\n    }\n  },\n\n  // calls the callback for every drawable row\n  drawRows: function drawRows(callback, target) {\n    return this.drawSeqs(function (data) {\n      return this.drawRow(data, callback, target);\n    });\n  },\n\n  // draws a single row\n  drawRow: function drawRow(data, callback, target) {\n    var rectWidth = this.g.zoomer.get("columnWidth");\n    var start = Math.max(0, Math.abs(Math.ceil(-this.g.zoomer.get(\'_alignmentScrollLeft\') / rectWidth)));\n    var x = -Math.abs(-this.g.zoomer.get(\'_alignmentScrollLeft\') % rectWidth);\n\n    var xZero = x - start * rectWidth;\n    var yZero = data.yPos;\n    return callback.call(target, { model: data.model, xZero: xZero, yZero: yZero, hidden: data.hidden });\n  },\n\n  // returns first sequence in the viewport\n  // y is the position to start drawing\n  getStartSeq: function getStartSeq() {\n    var start = Math.max(0, Math.floor(this.g.zoomer.get(\'_alignmentScrollTop\') / this.rectHeight)) + 1;\n    var counter = 0;\n    var i = 0;\n    while (counter < start && i < this.model.length) {\n      counter += this.model.at(i).attributes.height || 1;\n      i++;\n    }\n    var y = Math.max(0, this.g.zoomer.get(\'_alignmentScrollTop\') - counter * this.rectHeight + (this.model.at(i - 1).attributes.height || 1) * this.rectHeight);\n    return [i - 1, -y];\n  },\n\n  // returns [the clicked seq for a viewport, row number]\n  _getSeqForYClick: function _getSeqForYClick(click) {\n    var _getStartSeq3 = this.getStartSeq(),\n        _getStartSeq4 = _slicedToArray(_getStartSeq3, 2),\n        start = _getStartSeq4[0],\n        yDiff = _getStartSeq4[1];\n\n    var yRel = yDiff % this.rectHeight;\n    var clickedRows = Math.max(0, Math.floor((click - yRel) / this.rectHeight)) + 1;\n    var counter = 0;\n    var i = start;\n    while (counter < clickedRows && i < this.model.length) {\n      counter += this.model.at(i).attributes.height || 1;\n      i++;\n    }\n    var rowNumber = Math.max(0, Math.floor(click / this.rectHeight) - counter + (this.model.at(i - 1).get("height") || 1));\n    return [i - 1, rowNumber];\n  },\n\n  // TODO: very expensive method\n  drawSeq: function drawSeq(data, callback) {\n    var seq = data.model.get("seq");\n    var y = data.yPos;\n    var rectWidth = this.rectWidth;\n    var rectHeight = this.rectHeight;\n\n    // skip unneeded blocks at the beginning\n    var start = Math.max(0, Math.abs(Math.ceil(-this.g.zoomer.get(\'_alignmentScrollLeft\') / rectWidth)));\n    var x = -Math.abs(-this.g.zoomer.get(\'_alignmentScrollLeft\') % rectWidth);\n\n    var res = { rectWidth: rectWidth, rectHeight: rectHeight, yPos: y, y: data.y };\n    var elWidth = this.width;\n\n    for (var j = start; j < seq.length; j++) {\n      var c = seq[j];\n      c = c.toUpperCase();\n\n      // call the custom function\n      res.x = j;\n      res.c = c;\n      res.xPos = x;\n\n      // local call is faster than apply\n      // http://jsperf.com/function-calls-direct-vs-apply-vs-call-vs-bind/6\n      if (data.hidden.indexOf(j) < 0) {\n        callback(this, res);\n      } else {\n        continue;\n      }\n\n      // move to the right\n      x = x + rectWidth;\n\n      // out of viewport - stop\n      if (x > elWidth) {\n        break;\n      }\n    }\n  },\n\n  _drawRect: function _drawRect(that, data) {\n    var color = that.color.getColor(data.c, {\n      pos: data.x,\n      y: data.y\n    });\n    if (typeof color !== "undefined" && color !== null) {\n      that.ctx.fillStyle = color;\n      return that.ctx.fillRect(data.xPos, data.yPos, data.rectWidth, data.rectHeight);\n    }\n  },\n\n  // REALLY expensive call on FF\n  // Performance:\n  // chrome: 2000ms drawLetter - 1000ms drawRect\n  // FF: 1700ms drawLetter - 300ms drawRect\n  _drawLetter: function _drawLetter(that, data) {\n    return that.ctx.drawImage(that.cache.getFontTile(data.c, data.rectWidth, data.rectHeight), data.xPos, data.yPos, data.rectWidth, data.rectHeight);\n  }\n};\n\nvar CanvasSeqDrawer = function CanvasSeqDrawer(g, ctx, model, opts) {\n  this.g = g;\n  this.ctx = ctx;\n  this.model = model;\n  this.width = opts.width;\n  this.height = opts.height;\n  this.color = opts.color;\n  this.cache = opts.cache;\n  this.rectHeight = this.g.zoomer.get("rowHeight");\n  this.rectWidth = this.g.zoomer.get("columnWidth"); // note: this can change\n  return this;\n};\n\n(0, _lodash.extend)(CanvasSeqDrawer.prototype, Drawer);\nexports.default = CanvasSeqDrawer;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/canvas/CanvasSeqDrawer.js?')},"./node_modules/@intermine/msa-viewer/lib/views/header/ConservationView.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/header/ConservationView.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\nvar _svg = __webpack_require__(/*! ../../utils/svg */ "./node_modules/@intermine/msa-viewer/lib/utils/svg.js");\n\nvar svg = _interopRequireWildcard(_svg);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\n\nvar ConservationView = view.extend({\n\n  className: "biojs_msa_conserv",\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.listenTo(this.g.zoomer, "change:stepSize change:labelWidth change:columnWidth", this.render);\n    this.listenTo(this.g.vis, "change:labels change:metacell", this.render);\n    this.listenTo(this.g.columns, "change:scaling", this.render);\n    // we need to wait until stats gives us the ok\n    //@listenTo @model, "reset",@render\n    this.listenTo(this.g.stats, "reset", this.render);\n\n    var opts = _.extend({}, {\n      fillColor: [\'#660\', \'#ff0\'],\n      strokeColor: \'#330\',\n      maxHeight: 20,\n      rectStyler: function rectStyler(rect, data) {\n        return rect;\n      }\n    }, this.g.conservationConfig);\n\n    this.fillColor = opts.fillColor;\n    this.strokeColor = opts.strokeColor;\n    this.maxHeight = opts.maxHeight;\n    this.rectStyler = opts.rectStyler;\n\n    return this.manageEvents();\n  },\n\n  // returns a function that will decide a colour\n  // based on the conservation data it is given\n  colorer: function colorer(colorRange) {\n    var colorer = function colorer() {\n      return "none";\n    };\n\n    if (typeof colorRange === \'string\') {\n      colorer = function colorer() {\n        return colorRange;\n      };\n    } else if (Array.isArray(colorRange)) {\n      if (colorRange.length != 2) {\n        console.error("ERROR: colorRange array should have exactly two elements", colorRange);\n      }\n\n      // d3 is shipped modular nowadays - we can support both\n      var d3BundledScale = typeof d3 != "undefined" && !!d3.scale;\n      var d3SeperatedScale = typeof d3_scale != "undefined";\n      if (!(d3BundledScale || d3SeperatedScale)) {\n        console.warn("providing a [min/max] range as input requires d3 to be included - only using the first color");\n        colorer = function colorer(d) {\n          return colorRange[0];\n        };\n      } else {\n        var d3LinearScale = d3BundledScale ? d3.scale.linear() : d3_scale.scaleLinear();\n        var scale = d3LinearScale.domain([0, this.maxHeight]).range(colorRange);\n\n        colorer = function colorer(d) {\n          return scale(d.height);\n        };\n      }\n    } else {\n      console.warn("expected colorRange to be \'#rgb\' or [\'#rgb\', \'#rgb\']", colorRange, \'(\' + (typeof colorRange === "undefined" ? "undefined" : _typeof(colorRange)) + \')\');\n    }\n    return colorer;\n  },\n\n  render: function render() {\n    var conserv = this.g.stats.scale(this.g.stats.conservation());\n\n    dom.removeAllChilds(this.el);\n\n    var nMax = this.model.getMaxLength();\n    var cellWidth = this.g.zoomer.get("columnWidth");\n    var maxHeight = this.maxHeight;\n    var width = cellWidth * (nMax - this.g.columns.get(\'hidden\').length);\n\n    var s = svg.base({ height: maxHeight, width: width });\n    s.style.display = "inline-block";\n    s.style.cursor = "pointer";\n\n    var rectData = this.rectData;\n    var fillColorer = this.colorer(this.fillColor);\n    var strokeColorer = this.colorer(this.strokeColor);\n    var rectStyler = this.rectStyler;\n\n    var stepSize = this.g.zoomer.get("stepSize");\n    var hidden = this.g.columns.get("hidden");\n    var x = 0;\n    var n = 0;\n    while (n < nMax) {\n      if (hidden.indexOf(n) >= 0) {\n        n += stepSize;\n        continue;\n      }\n      width = cellWidth * stepSize;\n      var avgHeight = 0;\n      var end = stepSize - 1;\n      for (var i = 0; 0 < end ? i <= end : i >= end; 0 < end ? i++ : i--) {\n        avgHeight += conserv[n];\n      }\n      var height = maxHeight * (avgHeight / stepSize);\n\n      var d = {\n        x: x,\n        y: maxHeight - height,\n        maxheight: maxHeight,\n        width: width - cellWidth / 4,\n        height: height,\n        rowPos: n\n      };\n\n      var rect = svg.rect(d);\n\n      rect.style.stroke = strokeColorer(d);\n      rect.style.fill = fillColorer(d);\n\n      if (typeof rectStyler === \'function\') {\n        rectStyler(rect, d);\n      }\n\n      rect.rowPos = n;\n\n      s.appendChild(rect);\n      x += width;\n      n += stepSize;\n    }\n\n    this.el.appendChild(s);\n    return this;\n  },\n\n  //TODO: make more general with HeaderView\n  _onclick: function _onclick(evt) {\n    var _this = this;\n\n    var rowPos = evt.target.rowPos;\n    var stepSize = this.g.zoomer.get("stepSize");\n    // simulate hidden columns\n    return function () {\n      var result = [];\n      var end = stepSize - 1;\n      for (var i = 0; 0 < end ? i <= end : i >= end; 0 < end ? i++ : i--) {\n        result.push(_this.g.trigger("bar:click", { rowPos: rowPos + i, evt: evt }));\n      }\n      return result;\n    }();\n  },\n\n  manageEvents: function manageEvents() {\n    var events = {};\n    if (this.g.config.get("registerMouseClicks")) {\n      events.click = "_onclick";\n    }\n    if (this.g.config.get("registerMouseHover")) {\n      events.mousein = "_onmousein";\n      events.mouseout = "_onmouseout";\n    }\n    this.delegateEvents(events);\n    this.listenTo(this.g.config, "change:registerMouseHover", this.manageEvents);\n    return this.listenTo(this.g.config, "change:registerMouseClick", this.manageEvents);\n  },\n\n  _onmousein: function _onmousein(evt) {\n    var rowPos = this.g.zoomer.get("stepSize" * evt.rowPos);\n    return this.g.trigger("bar:mousein", { rowPos: rowPos, evt: evt });\n  },\n\n  _onmouseout: function _onmouseout(evt) {\n    var rowPos = this.g.zoomer.get("stepSize" * evt.rowPos);\n    return this.g.trigger("bar:mouseout", { rowPos: rowPos, evt: evt });\n  }\n});\n\nexports.default = ConservationView;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/header/ConservationView.js?')},"./node_modules/@intermine/msa-viewer/lib/views/header/GapView.js":
/*!************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/header/GapView.js ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _svg = __webpack_require__(/*! ../../utils/svg */ "./node_modules/@intermine/msa-viewer/lib/utils/svg.js");\n\nvar svg = _interopRequireWildcard(_svg);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\n\n// TODO: merge this with the conservation view\nvar ConservationView = view.extend({\n\n  className: "biojs_msa_gapview",\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.listenTo(this.g.zoomer, "change:stepSize change:labelWidth change:columnWidth", this.render);\n    this.listenTo(this.g.vis, "change:labels change:metacell", this.render);\n    this.listenTo(this.g.columns, "change:scaling", this.render);\n    // we need to wait until stats gives us the ok\n    this.listenTo(this.model, "reset", this.render);\n    return this.manageEvents();\n  },\n\n  render: function render() {\n    var gaps = this.g.stats.gaps();\n\n    dom.removeAllChilds(this.el);\n\n    var nMax = this.model.getMaxLength();\n    var cellWidth = this.g.zoomer.get("columnWidth");\n    var maxHeight = 20;\n    var width = cellWidth * (nMax - this.g.columns.get(\'hidden\').length);\n\n    var s = svg.base({ height: maxHeight, width: width });\n    s.style.display = "inline-block";\n    s.style.cursor = "pointer";\n\n    var stepSize = this.g.zoomer.get("stepSize");\n    var hidden = this.g.columns.get("hidden");\n    var x = 0;\n    var n = 0;\n    while (n < nMax) {\n      if (hidden.indexOf(n) >= 0) {\n        n += stepSize;\n        continue;\n      }\n      width = cellWidth * stepSize;\n      var avgHeight = 0;\n      var end = stepSize - 1;\n      for (var i = 0; 0 < end ? i <= end : i >= end; 0 < end ? i++ : i--) {\n        avgHeight += gaps[n];\n      }\n      var height = maxHeight * (avgHeight / stepSize);\n\n      var rect = svg.rect({ x: x, y: maxHeight - height, width: width - cellWidth / 4, height: height, style: "stroke:red;stroke-width:1;"\n      });rect.rowPos = n;\n      s.appendChild(rect);\n      x += width;\n      n += stepSize;\n    }\n\n    this.el.appendChild(s);\n    return this;\n  },\n\n  //TODO: make more general with HeaderView\n  _onclick: function _onclick(evt) {\n    var _this = this;\n\n    var rowPos = evt.target.rowPos;\n    var stepSize = this.g.zoomer.get("stepSize");\n    // simulate hidden columns\n    return function () {\n      var result = [];\n      var end = stepSize - 1;\n      for (var i = 0; 0 < end ? i <= end : i >= end; 0 < end ? i++ : i--) {\n        result.push(_this.g.trigger("gap:click", { rowPos: rowPos + i, evt: evt }));\n      }\n      return result;\n    }();\n  },\n\n  manageEvents: function manageEvents() {\n    var events = {};\n    if (this.g.config.get("registerMouseClicks")) {\n      events.click = "_onclick";\n    }\n    if (this.g.config.get("registerMouseHover")) {\n      events.mousein = "_onmousein";\n      events.mouseout = "_onmouseout";\n    }\n    this.delegateEvents(events);\n    this.listenTo(this.g.config, "change:registerMouseHover", this.manageEvents);\n    return this.listenTo(this.g.config, "change:registerMouseClick", this.manageEvents);\n  },\n\n  _onmousein: function _onmousein(evt) {\n    var rowPos = this.g.zoomer.get("stepSize" * evt.rowPos);\n    return this.g.trigger("gap:mousein", { rowPos: rowPos, evt: evt });\n  },\n\n  _onmouseout: function _onmouseout(evt) {\n    var rowPos = this.g.zoomer.get("stepSize" * evt.rowPos);\n    return this.g.trigger("gap:mouseout", { rowPos: rowPos, evt: evt });\n  }\n});\n\nexports.default = ConservationView;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/header/GapView.js?')},"./node_modules/@intermine/msa-viewer/lib/views/header/HeaderBlock.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/header/HeaderBlock.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _LabelHeader = __webpack_require__(/*! ./LabelHeader */ "./node_modules/@intermine/msa-viewer/lib/views/header/LabelHeader.js");\n\nvar _LabelHeader2 = _interopRequireDefault(_LabelHeader);\n\nvar _RightHeaderBlock = __webpack_require__(/*! ./RightHeaderBlock */ "./node_modules/@intermine/msa-viewer/lib/views/header/RightHeaderBlock.js");\n\nvar _RightHeaderBlock2 = _interopRequireDefault(_RightHeaderBlock);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n\n\nvar View = boneView.extend({\n\n  initialize: function initialize(data) {\n    var _this = this;\n\n    this.g = data.g;\n    this.draw();\n    return this.listenTo(this.g.vis, "change:labels change:metacell change:leftHeader", function () {\n      _this.draw();\n      return _this.render();\n    });\n  },\n\n  draw: function draw() {\n    this.removeViews();\n\n    if (this.g.vis.get("leftHeader") && (this.g.vis.get("labels") || this.g.vis.get("metacell"))) {\n      var lHeader = new _LabelHeader2.default({ model: this.model, g: this.g });\n      lHeader.ordering = -50;\n      this.addView("lHeader", lHeader);\n    }\n\n    var rHeader = new _RightHeaderBlock2.default({ model: this.model, g: this.g });\n    rHeader.ordering = 0;\n    return this.addView("rHeader", rHeader);\n  },\n\n  render: function render() {\n    this.renderSubviews();\n\n    return this.el.className = "biojs_msa_header";\n  }\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/header/HeaderBlock.js?')},"./node_modules/@intermine/msa-viewer/lib/views/header/LabelHeader.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/header/LabelHeader.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar k = __webpack_require__(/*! koala-js */ "./node_modules/koala-js/index.js");\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\nvar LabelHeader = view.extend({\n\n  className: "biojs_msa_headers",\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n\n    this.listenTo(this.g.vis, "change:metacell change:labels", this.render);\n    return this.listenTo(this.g.zoomer, "change:labelWidth change:metaWidth", this.render);\n  },\n\n  render: function render() {\n\n    dom.removeAllChilds(this.el);\n\n    var width = 0;\n    width += this.g.zoomer.getLeftBlockWidth();\n    this.el.style.width = width + "px";\n\n    if (this.g.vis.get("labels")) {\n      this.el.appendChild(this.labelDOM());\n    }\n\n    if (this.g.vis.get("metacell")) {\n      this.el.appendChild(this.metaDOM());\n    }\n\n    this.el.style.display = "inline-block";\n    this.el.style.fontSize = this.g.zoomer.get("markerFontsize");\n    return this;\n  },\n\n  labelDOM: function labelDOM() {\n    var labelHeader = k.mk("div");\n    labelHeader.style.width = this.g.zoomer.getLabelWidth();\n    labelHeader.style.display = "inline-block";\n\n    if (this.g.vis.get("labelCheckbox")) {\n      labelHeader.appendChild(this.addEl(".", 10));\n    }\n\n    if (this.g.vis.get("labelId")) {\n      labelHeader.appendChild(this.addEl("ID", this.g.zoomer.get("labelIdLength")));\n    }\n\n    if (this.g.vis.get("labelPartition")) {\n      labelHeader.appendChild(this.addEl("part", 15));\n    }\n\n    if (this.g.vis.get("labelName")) {\n      var name = this.addEl("Label");\n      //name.style.marginLeft = "50px"\n      labelHeader.appendChild(name);\n    }\n\n    return labelHeader;\n  },\n\n  addEl: function addEl(content, width) {\n    var id = document.createElement("span");\n    id.textContent = content;\n    if (typeof width !== "undefined" && width !== null) {\n      id.style.width = width + "px";\n    }\n    id.style.display = "inline-block";\n    return id;\n  },\n\n  metaDOM: function metaDOM() {\n    var metaHeader = k.mk("div");\n    metaHeader.style.width = this.g.zoomer.getMetaWidth();\n    metaHeader.style.display = "inline-block";\n\n    if (this.g.vis.get("metaGaps")) {\n      metaHeader.appendChild(this.addEl("Gaps", this.g.zoomer.get(\'metaGapWidth\')));\n    }\n    if (this.g.vis.get("metaIdentity")) {\n      metaHeader.appendChild(this.addEl("Ident", this.g.zoomer.get(\'metaIdentWidth\')));\n    }\n    // if @.g.vis.get "metaLinks"\n    //   metaHeader.appendChild @addEl("Links")\n\n    return metaHeader;\n  }\n});\nexports.default = LabelHeader;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/header/LabelHeader.js?')},"./node_modules/@intermine/msa-viewer/lib/views/header/MarkerView.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/header/MarkerView.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _svg = __webpack_require__(/*! ../../utils/svg */ "./node_modules/@intermine/msa-viewer/lib/utils/svg.js");\n\nvar svg = _interopRequireWildcard(_svg);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\nvar jbone = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\n\n\nvar MarkerView = view.extend({\n\n  className: "biojs_msa_marker",\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.listenTo(this.g.zoomer, "change:stepSize change:labelWidth change:columnWidth change:markerStepSize change:markerFontsize", this.render);\n    this.listenTo(this.g.vis, "change:labels change:metacell", this.render);\n    return this.manageEvents();\n  },\n\n  render: function render() {\n    dom.removeAllChilds(this.el);\n\n    var fontSize = this.g.zoomer.get("markerFontsize");\n    var cellWidth = this.g.zoomer.get("columnWidth");\n    var stepSize = this.g.zoomer.get("stepSize");\n    var markerStepSize = this.g.zoomer.get("markerStepSize");\n\n    var hidden = this.g.columns.get("hidden");\n\n    this.el.style.fontSize = fontSize;\n\n    var container = document.createElement("span");\n    var nMax = this.model.getMaxLength();\n\n    for (var n = 0; n < nMax; n++) {\n      if (hidden.indexOf(n) >= 0) {\n        var el = this.markerHidden(n, stepSize);\n        if (!!el) container.appendChild(el);\n        n += stepSize;\n        continue;\n      }\n      var span = document.createElement("span");\n      span.className = \'msa-col-header\';\n      span.style.width = cellWidth + "px";\n      span.style.display = "inline-block";\n\n      if ((n + 1) % markerStepSize === 0) {\n        span.textContent = n + 1;\n      } else if ((n + 1) % stepSize === 0) {\n        span.textContent = ".";\n      } else {\n        span.textContent = " ";\n      }\n      span.rowPos = n;\n      container.appendChild(span);\n    }\n\n    this.el.appendChild(container);\n    return this;\n  },\n\n  markerHidden: function markerHidden(n, stepSize) {\n    var _this = this;\n\n    var hidden = this.g.columns.get("hidden").slice(0);\n\n    var min = Math.max(0, n - stepSize);\n    var prevHidden = true;\n    for (var j = min; j <= n; j++) {\n      prevHidden &= hidden.indexOf(j) >= 0;\n    }\n\n    // filter duplicates\n    if (prevHidden) {\n      return;\n    }\n\n    var nMax = this.model.getMaxLength();\n\n    var length = 0;\n    var index = -1;\n    // accumlate multiple rows\n    for (var n2 = n; n2 <= nMax; n2++) {\n      if (!(index >= 0)) {\n        index = hidden.indexOf(n2);\n      } // sets the first index\n      if (hidden.indexOf(n2) >= 0) {\n        length++;\n      } else {\n        break;\n      }\n    }\n\n    var s = svg.base({ height: 10, width: 10 });\n    s.style.position = "relative";\n    var triangle = svg.polygon({ points: "0,0 5,5 10,0", style: "fill:lime;stroke:purple;stroke-width:1"\n    });\n    jbone(triangle).on("click", function (evt) {\n      hidden.splice(index, length);\n      return _this.g.columns.set("hidden", hidden);\n    });\n\n    s.appendChild(triangle);\n    return s;\n  },\n\n  manageEvents: function manageEvents() {\n    var events = {};\n    if (this.g.config.get("registerMouseClicks")) {\n      events.click = "_onclick";\n    }\n    if (this.g.config.get("registerMouseHover")) {\n      events.mousein = "_onmousein";\n      events.mouseout = "_onmouseout";\n    }\n    this.delegateEvents(events);\n    this.listenTo(this.g.config, "change:registerMouseHover", this.manageEvents);\n    return this.listenTo(this.g.config, "change:registerMouseClick", this.manageEvents);\n  },\n\n  _onclick: function _onclick(evt) {\n    var rowPos = evt.target.rowPos;\n    var stepSize = this.g.zoomer.get("stepSize");\n    return this.g.trigger("column:click", { rowPos: rowPos, stepSize: stepSize, evt: evt });\n  },\n\n  _onmousein: function _onmousein(evt) {\n    var rowPos = this.g.zoomer.get("stepSize" * evt.rowPos);\n    var stepSize = this.g.zoomer.get("stepSize");\n    return this.g.trigger("column:mousein", { rowPos: rowPos, stepSize: stepSize, evt: evt });\n  },\n\n  _onmouseout: function _onmouseout(evt) {\n    var rowPos = this.g.zoomer.get("stepSize" * evt.rowPos);\n    var stepSize = this.g.zoomer.get("stepSize");\n    return this.g.trigger("column:mouseout", { rowPos: rowPos, stepSize: stepSize, evt: evt });\n  }\n});\n\nexports.default = MarkerView;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/header/MarkerView.js?')},"./node_modules/@intermine/msa-viewer/lib/views/header/RightHeaderBlock.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/header/RightHeaderBlock.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _MarkerView = __webpack_require__(/*! ./MarkerView */ "./node_modules/@intermine/msa-viewer/lib/views/header/MarkerView.js");\n\nvar _MarkerView2 = _interopRequireDefault(_MarkerView);\n\nvar _ConservationView = __webpack_require__(/*! ./ConservationView */ "./node_modules/@intermine/msa-viewer/lib/views/header/ConservationView.js");\n\nvar _ConservationView2 = _interopRequireDefault(_ConservationView);\n\nvar _SeqLogoWrapper = __webpack_require__(/*! ./SeqLogoWrapper */ "./node_modules/@intermine/msa-viewer/lib/views/header/SeqLogoWrapper.js");\n\nvar _SeqLogoWrapper2 = _interopRequireDefault(_SeqLogoWrapper);\n\nvar _GapView = __webpack_require__(/*! ./GapView */ "./node_modules/@intermine/msa-viewer/lib/views/header/GapView.js");\n\nvar _GapView2 = _interopRequireDefault(_GapView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n\nvar View = boneView.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.blockEvents = false;\n\n    this.listenTo(this.g.vis, "change:header", function () {\n      this.draw();\n      return this.render();\n    });\n    this.listenTo(this.g.vis, "change", this._setSpacer);\n    this.listenTo(this.g.zoomer, "change:alignmentWidth", this._setWidth);\n    this.listenTo(this.g.zoomer, "change:_alignmentScrollLeft", this._adjustScrollingLeft);\n\n    // TODO: duplicate rendering\n    this.listenTo(this.g.columns, "change:hidden", function () {\n      this.draw();\n      return this.render();\n    });\n\n    this.draw();\n\n    return this.g.vis.once(\'change:loaded\', this._adjustScrollingLeft, this);\n  },\n\n  events: { "scroll": "_sendScrollEvent" },\n\n  draw: function draw() {\n    this.removeViews();\n\n    if (this.g.vis.get("conserv")) {\n      var conserv = new _ConservationView2.default({ model: this.model, g: this.g });\n      conserv.ordering = -20;\n      this.addView("conserv", conserv);\n    }\n\n    if (this.g.vis.get("markers")) {\n      var marker = new _MarkerView2.default({ model: this.model, g: this.g });\n      marker.ordering = -10;\n      this.addView("marker", marker);\n    }\n\n    if (this.g.vis.get("seqlogo")) {\n      var seqlogo = new _SeqLogoWrapper2.default({ model: this.model, g: this.g });\n      seqlogo.ordering = -30;\n      this.addView("seqlogo", seqlogo);\n    }\n\n    if (this.g.vis.get("gapHeader")) {\n      var gapview = new _GapView2.default({ model: this.model, g: this.g });\n      gapview.ordering = -25;\n      return this.addView("gapview", gapview);\n    }\n  },\n\n  render: function render() {\n    this.renderSubviews();\n\n    this._setSpacer();\n\n    this.el.className = "biojs_msa_rheader";\n    this.el.style.overflowX = "auto";\n    this.el.style.display = "inline-block";\n    //@el.style.height = @g.zoomer.get("markerHeight") + "px"\n    this._setWidth();\n    this._adjustScrollingLeft();\n    return this;\n  },\n\n  // scrollLeft triggers a reflow of the whole area (even only get)\n  _sendScrollEvent: function _sendScrollEvent() {\n    if (!this.blockEvents) {\n      this.g.zoomer.set("_alignmentScrollLeft", this.el.scrollLeft, { origin: "header" });\n    }\n    return this.blockEvents = false;\n  },\n\n  _adjustScrollingLeft: function _adjustScrollingLeft(model, value, options) {\n    if (!((typeof options !== "undefined" && options !== null ? options.origin : undefined) != null) || options.origin !== "header") {\n      var scrollLeft = this.g.zoomer.get("_alignmentScrollLeft");\n      this.blockEvents = true;\n      return this.el.scrollLeft = scrollLeft;\n    }\n  },\n\n  _setSpacer: function _setSpacer() {\n    // spacer / padding element\n    return this.el.style.marginLeft = this._getLabelWidth() + "px";\n  },\n\n  _getLabelWidth: function _getLabelWidth() {\n    var paddingLeft = 0;\n    if (!this.g.vis.get("leftHeader")) {\n      paddingLeft += this.g.zoomer.getLeftBlockWidth();\n    }\n    return paddingLeft;\n  },\n\n  _setWidth: function _setWidth() {\n    return this.el.style.width = this.g.zoomer.getAlignmentWidth() + "px";\n  }\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/header/RightHeaderBlock.js?')},"./node_modules/@intermine/msa-viewer/lib/views/header/SeqLogoWrapper.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/header/SeqLogoWrapper.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar SeqLogoView = __webpack_require__(/*! biojs-vis-seqlogo/light */ "./node_modules/biojs-vis-seqlogo/light.js");\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\n// this is a bridge between the MSA and the seqlogo viewer\nvar SeqLogoWrapper = view.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.listenTo(this.g.zoomer, "change:alignmentWidth", this.render);\n    this.listenTo(this.g.colorscheme, "change", function () {\n      var colors = this.g.colorscheme.getSelectedScheme();\n      this.seqlogo.changeColors(colors);\n      return this.render();\n    });\n\n    this.listenTo(this.g.zoomer, "change:columnWidth", function () {\n      this.seqlogo.column_width = this.g.zoomer.get(\'columnWidth\');\n      return this.render();\n    });\n\n    //@listenTo @g.zoomer,"change:columnWidth change:rowHeight", ->\n\n    this.listenTo(this.g.stats, "reset", function () {\n      this.draw();\n      return this.render();\n    });\n\n    return this.draw();\n  },\n\n  draw: function draw() {\n    dom.removeAllChilds(this.el);\n\n    console.log("redraw seqlogo");\n    var arr = this.g.stats.conservResidue({ scaled: true });\n    arr = _.map(arr, function (el) {\n      return _.pick(el, function (e, k) {\n        return k !== "-";\n      });\n    });\n    var data = { alphabet: "aa",\n      heightArr: arr\n    };\n\n    var colors = this.g.colorscheme.getSelectedScheme();\n    // TODO: seqlogo might have problems with true dynamic schemes\n    return this.seqlogo = new SeqLogoView({ model: this.model, g: this.g, data: data, yaxis: false, scroller: false, xaxis: false, height: 100, column_width: this.g.zoomer.get(\'columnWidth\'), positionMarker: false, zoom: 1, el: this.el, colors: colors });\n  },\n\n  render: function render() {\n    return this.seqlogo.render();\n  }\n});\nexports.default = SeqLogoWrapper;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/header/SeqLogoWrapper.js?')},"./node_modules/@intermine/msa-viewer/lib/views/labels/LabelBlock.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/labels/LabelBlock.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _LabelRowView = __webpack_require__(/*! ./LabelRowView */ "./node_modules/@intermine/msa-viewer/lib/views/labels/LabelRowView.js");\n\nvar _LabelRowView2 = _interopRequireDefault(_LabelRowView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n\n\nvar View = boneView.extend({\n\n  initialize: function initialize(data) {\n    var _this = this;\n\n    this.g = data.g;\n    this.draw();\n    this.listenTo(this.g.zoomer, "change:_alignmentScrollTop", this._adjustScrollingTop);\n    this.g.vis.once(\'change:loaded\', this._adjustScrollingTop, this);\n\n    this.listenTo(this.g.zoomer, "change:alignmentHeight", this._setHeight);\n    this.listenTo(this.model, "change:reference", this.draw);\n\n    return this.listenTo(this.model, "reset add remove", function () {\n      _this.draw();\n      return _this.render();\n    });\n  },\n\n  draw: function draw() {\n    this.removeViews();\n    console.log("redraw columns", this.model.length);\n    for (var i = 0; i < this.model.length; i++) {\n      if (this.model.at(i).get(\'hidden\')) {\n        continue;\n      }\n      var view = new _LabelRowView2.default({ model: this.model.at(i), g: this.g });\n      view.ordering = i;\n      this.addView("row_" + i, view);\n    }\n  },\n\n  events: { "scroll": "_sendScrollEvent" },\n\n  // broadcast the scrolling event (by the scrollbar)\n  _sendScrollEvent: function _sendScrollEvent() {\n    return this.g.zoomer.set("_alignmentScrollTop", this.el.scrollTop, { origin: "label" });\n  },\n\n  // sets the scrolling property (from another event e.g. dragging)\n  _adjustScrollingTop: function _adjustScrollingTop() {\n    return this.el.scrollTop = this.g.zoomer.get("_alignmentScrollTop");\n  },\n\n\n  render: function render() {\n    this.renderSubviews();\n    this.el.className = "biojs_msa_labelblock";\n    this.el.style.display = "inline-block";\n    this.el.style.verticalAlign = "top";\n    this.el.style.overflowY = "auto";\n    this.el.style.overflowX = "hidden";\n    this.el.style.fontSize = this.g.zoomer.get(\'labelFontsize\') + "px";\n    this.el.style.lineHeight = "" + this.g.zoomer.get("labelLineHeight");\n    this._setHeight();\n    return this;\n  },\n\n  _setHeight: function _setHeight() {\n    return this.el.style.height = this.g.zoomer.get("alignmentHeight") + "px";\n  }\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/labels/LabelBlock.js?')},"./node_modules/@intermine/msa-viewer/lib/views/labels/LabelRowView.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/labels/LabelRowView.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _LabelView = __webpack_require__(/*! ./LabelView */ "./node_modules/@intermine/msa-viewer/lib/views/labels/LabelView.js");\n\nvar _LabelView2 = _interopRequireDefault(_LabelView);\n\nvar _MetaView = __webpack_require__(/*! ./MetaView */ "./node_modules/@intermine/msa-viewer/lib/views/labels/MetaView.js");\n\nvar _MetaView2 = _interopRequireDefault(_MetaView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar boneView = __webpack_require__(/*! backbone-childs */ "./node_modules/backbone-childs/index.js");\n\n\nvar View = boneView.extend({\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.draw();\n\n    this.listenTo(this.g.vis, "change:labels", this.drawR);\n    this.listenTo(this.g.vis, "change:metacell", this.drawR);\n    this.listenTo(this.g.zoomer, "change:rowHeight", function () {\n      return this.el.style.height = this.g.zoomer.get("rowHeight") + "px";\n    });\n\n    return this.listenTo(this.g.selcol, "change reset add", this.setSelection);\n  },\n\n  draw: function draw() {\n    this.removeViews();\n    if (this.g.vis.get("labels")) {\n      this.addView("labels", new _LabelView2.default({ model: this.model, g: this.g }));\n    }\n    if (this.g.vis.get("metacell")) {\n      var meta = new _MetaView2.default({ model: this.model, g: this.g });\n      return this.addView("metacell", meta);\n    }\n  },\n\n  drawR: function drawR() {\n    this.draw();\n    return this.render();\n  },\n\n  render: function render() {\n    this.renderSubviews();\n\n    this.el.setAttribute("class", "biojs_msa_labelrow");\n    this.el.style.height = this.g.zoomer.get("rowHeight") * (this.model.attributes.height || 1) + "px";\n\n    this.setSelection();\n    return this;\n  },\n\n  setSelection: function setSelection() {\n    var sel = this.g.selcol.getSelForRow(this.model.id);\n    if (sel.length > 0) {\n      return this.el.style.fontWeight = "bold";\n    } else {\n      return this.el.style.fontWeight = "normal";\n    }\n  }\n});\nexports.default = View;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/labels/LabelRowView.js?')},"./node_modules/@intermine/msa-viewer/lib/views/labels/LabelView.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/labels/LabelView.js ***!
  \**************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\nvar LabelView = view.extend({\n\n  initialize: function initialize(data) {\n    this.seq = data.seq;\n    this.g = data.g;\n\n    return this.manageEvents();\n  },\n\n  manageEvents: function manageEvents() {\n    var events = {};\n    if (this.g.config.get("registerMouseClicks")) {\n      events.click = "_onclick";\n    }\n    if (this.g.config.get("registerMouseHover")) {\n      events.mousein = "_onmousein";\n      events.mouseout = "_onmouseout";\n    }\n    this.delegateEvents(events);\n    this.listenTo(this.g.config, "change:registerMouseHover", this.manageEvents);\n    this.listenTo(this.g.config, "change:registerMouseClick", this.manageEvents);\n    this.listenTo(this.g.vis, "change:labelName change:labelId change:labelPartition change:labelCheckbox", this.render);\n    this.listenTo(this.g.zoomer, "change:labelIdLength change:labelNameLength change:labelPartLength change:labelCheckLength", this.render);\n    return this.listenTo(this.g.zoomer, "change:labelFontSize change:labelLineHeight change:labelWidth change:rowHeight", this.render);\n  },\n\n  render: function render() {\n    dom.removeAllChilds(this.el);\n\n    this.el.style.width = this.g.zoomer.getLabelWidth() + "px";\n    //@el.style.height = "#{@g.zoomer.get "rowHeight"}px"\n    this.el.setAttribute("class", "biojs_msa_labels");\n\n    if (this.g.vis.get("labelCheckbox")) {\n      var checkBox = document.createElement("input");\n      checkBox.setAttribute("type", "checkbox");\n      checkBox.value = this.model.get(\'id\');\n      checkBox.name = "seq";\n      checkBox.style.width = this.g.zoomer.get("labelCheckLength") + "px";\n      this.el.appendChild(checkBox);\n    }\n\n    if (this.g.vis.get("labelId")) {\n      var id = document.createElement("span");\n      var val = this.model.get("id");\n      if (!isNaN(val)) {\n        val++;\n      }\n      id.textContent = val;\n      id.style.width = this.g.zoomer.get("labelIdLength") + "px";\n      id.style.display = "inline-block";\n      this.el.appendChild(id);\n    }\n\n    if (this.g.vis.get("labelPartition")) {\n      var part = document.createElement("span");\n      part.style.width = this.g.zoomer.get("labelPartLength") + "px";\n      part.textContent = this.model.get("partition");\n      part.style.display = "inline-block";\n      this.el.appendChild(id);\n      this.el.appendChild(part);\n    }\n\n    if (this.g.vis.get("labelName")) {\n      var name = document.createElement("span");\n      name.textContent = this.model.get("name");\n      if (this.model.get("ref") && this.g.config.get("hasRef")) {\n        name.style.fontWeight = "bold";\n      }\n      name.style.width = this.g.zoomer.get("labelNameLength") + "px";\n      this.el.appendChild(name);\n    }\n\n    this.el.style.overflow = scroll;\n    this.el.style.fontSize = this.g.zoomer.get(\'labelFontsize\') + "px";\n    return this;\n  },\n\n  _onclick: function _onclick(evt) {\n    var seqId = this.model.get("id");\n    return this.g.trigger("row:click", { seqId: seqId, evt: evt });\n  },\n\n  _onmousein: function _onmousein(evt) {\n    var seqId = this.model.get("id");\n    return this.g.trigger("row:mouseout", { seqId: seqId, evt: evt });\n  },\n\n  _onmouseout: function _onmouseout(evt) {\n    var seqId = this.model.get("id");\n    return this.g.trigger("row:mouseout", { seqId: seqId, evt: evt });\n  }\n});\n\nexports.default = LabelView;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/labels/LabelView.js?')},"./node_modules/@intermine/msa-viewer/lib/views/labels/MetaView.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@intermine/msa-viewer/lib/views/labels/MetaView.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _bio = __webpack_require__(/*! bio.io */ "./node_modules/bio.io/lib/index.js");\n\nvar _menubuilder = __webpack_require__(/*! ../../menu/menubuilder */ "./node_modules/@intermine/msa-viewer/lib/menu/menubuilder.js");\n\nvar _menubuilder2 = _interopRequireDefault(_menubuilder);\n\nvar _lodash = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar dom = __webpack_require__(/*! dom-helper */ "./node_modules/dom-helper/index.js");\n\n\nvar MetaView = view.extend({\n\n  className: "biojs_msa_metaview",\n\n  initialize: function initialize(data) {\n    this.g = data.g;\n    this.listenTo(this.g.vis, "change:metacell", this.render);\n    return this.listenTo(this.g.zoomer, "change:metaWidth", this.render);\n  },\n\n  events: { click: "_onclick",\n    mousein: "_onmousein",\n    mouseout: "_onmouseout"\n  },\n\n  render: function render() {\n    dom.removeAllChilds(this.el);\n\n    this.el.style.display = "inline-block";\n\n    var width = this.g.zoomer.getMetaWidth();\n    this.el.style.width = width - 10;\n    this.el.style.paddingRight = 5;\n    this.el.style.paddingLeft = 5;\n    // TODO: why do we need to decrease the font size?\n    // otherwise we see a scrollbar\n    this.el.style.fontSize = this.g.zoomer.get(\'labelFontsize\') - 2 + "px";\n\n    if (this.g.vis.get("metaGaps")) {\n      // adds gaps\n      var seq = this.model.get(\'seq\');\n      var gaps = (0, _lodash.reduce)(seq, function (memo, c) {\n        return c === \'-\' ? ++memo : undefined;\n      }, 0);\n      // 2-place percentage , e.g. 42%\n      gaps = (gaps * 100 / seq.length).toFixed(0) + "%";\n\n      // append gap count\n      var gapSpan = document.createElement(\'span\');\n      gapSpan.textContent = gaps;\n      gapSpan.style.display = "inline-block";\n      gapSpan.style.width = 35;\n      this.el.appendChild(gapSpan);\n    }\n\n    if (this.g.vis.get("metaIdentity")) {\n      // identity\n      // TODO: there must be a better way to pass the id\n      var ident = this.g.stats.identity()[this.model.id];\n      var identSpan = document.createElement(\'span\');\n\n      if (this.model.get("ref") && this.g.config.get("hasRef")) {\n        identSpan.textContent = "ref.";\n      } else if (typeof ident !== "undefined" && ident !== null) {\n        identSpan.textContent = ident.toFixed(2);\n      }\n\n      identSpan.style.display = "inline-block";\n      identSpan.style.width = 40;\n      this.el.appendChild(identSpan);\n    }\n\n    if (this.g.vis.get("metaLinks")) {\n      // TODO: this menu builder is just an example how one could customize this\n      // view\n      if (this.model.attributes.ids) {\n        var links = _bio.seqs.buildLinks(this.model.attributes.ids);\n        if (Object.keys(links).length > 0) {\n          var menu = new _menubuilder2.default({ name: "↗" });\n          console.log(Object.keys(links));\n          links.forEach(function (val, key) {\n            return menu.addNode(key, function (e) {\n              return window.open(val);\n            });\n          });\n\n          var linkEl = menu.buildDOM();\n          linkEl.style.cursor = "pointer";\n          return this.el.appendChild(linkEl);\n        }\n      }\n    }\n  },\n\n  //@el.style.height = "#{@g.zoomer.get "rowHeight"}px"\n\n  _onclick: function _onclick(evt) {\n    return this.g.trigger("meta:click", { seqId: this.model.get("id", { evt: evt }) });\n  },\n\n  _onmousein: function _onmousein(evt) {\n    return this.g.trigger("meta:mousein", { seqId: this.model.get("id", { evt: evt }) });\n  },\n\n  _onmouseout: function _onmouseout(evt) {\n    return this.g.trigger("meta:mouseout", { seqId: this.model.get("id", { evt: evt }) });\n  }\n});\nexports.default = MetaView;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/@intermine/msa-viewer/lib/views/labels/MetaView.js?')},"./node_modules/backbone-childs/index.js":
/*!***********************************************!*\
  !*** ./node_modules/backbone-childs/index.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/underscore.js");\nvar viewType = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar pluginator;\n\n/**\n * Remove an element and provide a function that inserts it into its original position\n * @param element {Element} The element to be temporarily removed\n * @return {Function} A function that inserts the element into its original position\n **/\nfunction removeToInsertLater(element) {\n  var parentNode = element.parentNode;\n  var nextSibling = element.nextSibling;\n  parentNode.removeChild(element);\n  return function() {\n    if (nextSibling) {\n      parentNode.insertBefore(element, nextSibling);\n    } else {\n      parentNode.appendChild(element);\n    }\n  };\n}\n\nvar removeChilds = function (node) {\n    var last;\n    while (last = node.lastChild) node.removeChild(last);\n};\n\nmodule.exports = pluginator = viewType.extend({\n  renderSubviews: function() {\n    // it is faster to remove the entire element and replace it\n    // -> however this will lead to lost id,class and style props\n    var oldEl = this.el;\n\n    // it might be that the element is not on the DOM yet\n    var elOnDom = oldEl.parentNode != undefined;\n    if(elOnDom){\n      var insert = removeToInsertLater(oldEl)\n    }\n    removeChilds(oldEl);\n\n    var frag = document.createDocumentFragment();\n    var views = this._views();\n    var viewsSorted = _.sortBy(views, function(el) {\n      return el.ordering;\n    });\n    var view, node;\n    for (var i = 0; i <  viewsSorted.length; i++) {\n      view = viewsSorted[i];\n      view.render();\n      node = view.el;\n      if (node != null) {\n        frag.appendChild(node);\n      }\n    }\n\n    oldEl.appendChild(frag);\n    if(elOnDom){\n      insert();\n    }\n    return oldEl;\n  },\n  addView: function(key, view) {\n    var views = this._views();\n    if (view == null) {\n      throw "Invalid plugin. ";\n    }\n    if (view.ordering == null) {\n      view.ordering = key;\n    }\n    return views[key] = view;\n  },\n  removeViews: function() {\n    var el, key;\n    var views = this._views();\n    for (key in views) {\n      el = views[key];\n      el.undelegateEvents();\n      el.unbind();\n      if (el.removeViews != null) {\n        el.removeViews();\n      }\n      el.remove();\n    }\n    return this.views = {};\n  },\n  removeView: function(key) {\n    var views = this._views();\n    views[key].remove();\n    return delete views[key];\n  },\n  getView: function(key) {\n    var views = this._views();\n    return views[key];\n  },\n  remove: function() {\n    this.removeViews();\n    return viewType.prototype.remove.apply(this);\n  },\n  _views: function() {\n    if (this.views == null) {\n      this.views = {};\n    }\n    return this.views;\n  }\n});\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/backbone-childs/index.js?')},"./node_modules/backbone-events-standalone/backbone-events-standalone.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/backbone-events-standalone/backbone-events-standalone.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/**\n * Standalone extraction of Backbone.Events, no external dependency required.\n * Degrades nicely when Backone/underscore are already available in the current\n * global context.\n *\n * Note that docs suggest to use underscore's `_.extend()` method to add Events\n * support to some given object. A `mixin()` method has been added to the Events\n * prototype to avoid using underscore for that sole purpose:\n *\n *     var myEventEmitter = BackboneEvents.mixin({});\n *\n * Or for a function constructor:\n *\n *     function MyConstructor(){}\n *     MyConstructor.prototype.foo = function(){}\n *     BackboneEvents.mixin(MyConstructor.prototype);\n *\n * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * (c) 2013 Nicolas Perriault\n */\n/* global exports:true, define, module */\n(function() {\n  var root = this,\n      nativeForEach = Array.prototype.forEach,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      slice = Array.prototype.slice,\n      idCounter = 0;\n\n  // Returns a partial implementation matching the minimal API subset required\n  // by Backbone.Events\n  function miniscore() {\n    return {\n      keys: Object.keys || function (obj) {\n        if (typeof obj !== \"object\" && typeof obj !== \"function\" || obj === null) {\n          throw new TypeError(\"keys() called on a non-object\");\n        }\n        var key, keys = [];\n        for (key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            keys[keys.length] = key;\n          }\n        }\n        return keys;\n      },\n\n      uniqueId: function(prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n      },\n\n      has: function(obj, key) {\n        return hasOwnProperty.call(obj, key);\n      },\n\n      each: function(obj, iterator, context) {\n        if (obj == null) return;\n        if (nativeForEach && obj.forEach === nativeForEach) {\n          obj.forEach(iterator, context);\n        } else if (obj.length === +obj.length) {\n          for (var i = 0, l = obj.length; i < l; i++) {\n            iterator.call(context, obj[i], i, obj);\n          }\n        } else {\n          for (var key in obj) {\n            if (this.has(obj, key)) {\n              iterator.call(context, obj[key], key, obj);\n            }\n          }\n        }\n      },\n\n      once: function(func) {\n        var ran = false, memo;\n        return function() {\n          if (ran) return memo;\n          ran = true;\n          memo = func.apply(this, arguments);\n          func = null;\n          return memo;\n        };\n      }\n    };\n  }\n\n  var _ = miniscore(), Events;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = {};\n        return this;\n      }\n\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeners = this._listeners;\n      if (!listeners) return this;\n      var deleteListener = !name && !callback;\n      if (typeof name === 'object') callback = this;\n      if (obj) (listeners = {})[obj._listenerId] = obj;\n      for (var id in listeners) {\n        listeners[id].off(name, callback, this);\n        if (deleteListener) delete this._listeners[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeners = this._listeners || (this._listeners = {});\n      var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n      listeners[id] = obj;\n      if (typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Mixin utility\n  Events.mixin = function(proto) {\n    var exports = ['on', 'once', 'off', 'trigger', 'stopListening', 'listenTo',\n                   'listenToOnce', 'bind', 'unbind'];\n    _.each(exports, function(name) {\n      proto[name] = this[name];\n    }, this);\n    return proto;\n  };\n\n  // Export Events as BackboneEvents depending on current context\n  if (true) {\n    if ( true && module.exports) {\n      exports = module.exports = Events;\n    }\n    exports.BackboneEvents = Events;\n  }else {}\n})(this);\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/backbone-events-standalone/backbone-events-standalone.js?")},"./node_modules/backbone-events-standalone/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/backbone-events-standalone/index.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! ./backbone-events-standalone */ "./node_modules/backbone-events-standalone/backbone-events-standalone.js");\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/backbone-events-standalone/index.js?')},"./node_modules/backbone-extend-standalone/backbone-extend-standalone.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/backbone-extend-standalone/backbone-extend-standalone.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("(function (definition) {\n  if (true) {\n    module.exports = definition();\n  }\n  else {}\n})(function () {\n  \"use strict\";\n  \n  // mini-underscore\n  var _ = {\n    has: function (obj, key) {\n      return Object.prototype.hasOwnProperty.call(obj, key);\n    },\n  \n    extend: function(obj) {\n      for (var i=1; i<arguments.length; ++i) {\n        var source = arguments[i];\n        if (source) {\n          for (var prop in source) {\n            obj[prop] = source[prop];\n          }\n        }\n      }\n      return obj;\n    }\n  };\n\n  /// Following code is pasted from Backbone.js ///\n\n  // Helper function to correctly set up the prototype chain, for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Expose the extend function\n  return extend;\n});\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/backbone-extend-standalone/backbone-extend-standalone.js?")},"./node_modules/backbone-thin/collection.js":
/*!**************************************************!*\
  !*** ./node_modules/backbone-thin/collection.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("//     Backbone.js 1.1.2\n\n//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\nvar Events = __webpack_require__(/*! backbone-events-standalone */ \"./node_modules/backbone-events-standalone/index.js\");\nvar extend = __webpack_require__(/*! backbone-extend-standalone */ \"./node_modules/backbone-extend-standalone/backbone-extend-standalone.js\");\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\nvar Model = __webpack_require__(/*! ./model */ \"./node_modules/backbone-thin/model.js\");\n\n// Create local references to array methods we'll want to use later.\nvar array = [];\nvar slice = array.slice;\n\n// Backbone.Collection\n// -------------------\n\n// If models tend to represent a single row of data, a Backbone Collection is\n// more analogous to a table full of data ... or a small slice or page of that\n// table, or a collection of rows that belong together for a particular reason\n// -- all of the messages in this particular folder, all of the documents\n// belonging to this particular author, and so on. Collections maintain\n// indexes of their models, both in order, and for lookup by `id`.\n\n// Create a new **Collection**, perhaps to contain a specific type of `model`.\n// If a `comparator` is specified, the Collection will maintain\n// its models in sort order, as they're added and removed.\nvar Collection = function(models, options) {\n  options || (options = {});\n  if (options.model) this.model = options.model;\n  if (options.comparator !== void 0) this.comparator = options.comparator;\n  this._reset();\n  this.initialize.apply(this, arguments);\n  if (models) this.reset(models, _.extend({silent: true}, options));\n};\n\n// Default options for `Collection#set`.\nvar setOptions = {add: true, remove: true, merge: true};\nvar addOptions = {add: true, remove: false};\n\n// Define the Collection's inheritable methods.\n_.extend(Collection.prototype, Events, {\n\n  // The default model for a collection is just a **Backbone.Model**.\n  // This should be overridden in most cases.\n  model: Model,\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n  toJSON: function(options) {\n    return this.map(function(model){ return model.toJSON(options); });\n  },\n\n    // Proxy `Backbone.sync` by default.\n  sync: function() {\n    return Backbone.sync.apply(this, arguments);\n  },\n\n    // Add a model, or list of models to the set.\n  add: function(models, options) {\n    return this.set(models, _.extend({merge: false}, options, addOptions));\n  },\n\n    // Remove a model, or a list of models from the set.\n  remove: function(models, options) {\n    var singular = !_.isArray(models);\n    models = singular ? [models] : _.clone(models);\n    options || (options = {});\n    for (var i = 0, length = models.length; i < length; i++) {\n      var model = models[i] = this.get(models[i]);\n      if (!model) continue;\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      delete this._byId[model.cid];\n      var index = this.indexOf(model);\n      this.models.splice(index, 1);\n      this.length--;\n      if (!options.silent) {\n        options.index = index;\n        model.trigger('remove', model, this, options);\n      }\n      this._removeReference(model, options);\n    }\n    return singular ? models[0] : models;\n  },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n  set: function(models, options) {\n    options = _.defaults({}, options, setOptions);\n    if (options.parse) models = this.parse(models, options);\n    var singular = !_.isArray(models);\n    models = singular ? (models ? [models] : []) : models.slice();\n    var id, model, attrs, existing, sort;\n    var at = options.at;\n    var sortable = this.comparator && (at == null) && options.sort !== false;\n    var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n    var toAdd = [], toRemove = [], modelMap = {};\n    var add = options.add, merge = options.merge, remove = options.remove;\n    var order = !sortable && add && remove ? [] : false;\n\n    // Turn bare objects into model references, and prevent invalid models\n    // from being added.\n    for (var i = 0, length = models.length; i < length; i++) {\n      attrs = models[i];\n\n      // If a duplicate is found, prevent it from being added and\n      // optionally merge it into the existing model.\n      if (existing = this.get(attrs)) {\n        if (remove) modelMap[existing.cid] = true;\n        if (merge && attrs !== existing) {\n          attrs = this._isModel(attrs) ? attrs.attributes : attrs;\n          if (options.parse) attrs = existing.parse(attrs, options);\n          existing.set(attrs, options);\n          if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n        }\n        models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n      } else if (add) {\n        model = models[i] = this._prepareModel(attrs, options);\n        if (!model) continue;\n        toAdd.push(model);\n        this._addReference(model, options);\n      }\n\n      // Do not add multiple models with the same `id`.\n      model = existing || model;\n      if (!model) continue;\n      id = this.modelId(model.attributes);\n      if (order && (model.isNew() || !modelMap[id])) order.push(model);\n      modelMap[id] = true;\n    }\n\n    // Remove nonexistent models if appropriate.\n    if (remove) {\n      for (var i = 0, length = this.length; i < length; i++) {\n        if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n      }\n      if (toRemove.length) this.remove(toRemove, options);\n    }\n\n    // See if sorting is needed, update `length` and splice in new models.\n    if (toAdd.length || (order && order.length)) {\n      if (sortable) sort = true;\n      this.length += toAdd.length;\n      if (at != null) {\n        for (var i = 0, length = toAdd.length; i < length; i++) {\n          this.models.splice(at + i, 0, toAdd[i]);\n        }\n      } else {\n        if (order) this.models.length = 0;\n        var orderedModels = order || toAdd;\n        for (var i = 0, length = orderedModels.length; i < length; i++) {\n          this.models.push(orderedModels[i]);\n        }\n      }\n    }\n\n    // Silently sort the collection if appropriate.\n    if (sort) this.sort({silent: true});\n\n    // Unless silenced, it's time to fire all appropriate add/sort events.\n    if (!options.silent) {\n      var addOpts = at != null ? _.clone(options) : options;\n      for (var i = 0, length = toAdd.length; i < length; i++) {\n        if (at != null) addOpts.index = at + i;\n        (model = toAdd[i]).trigger('add', model, this, addOpts);\n      }\n      if (sort || (order && order.length)) this.trigger('sort', this, options);\n    }\n\n    // Return the added (or merged) model (or models).\n    return singular ? models[0] : models;\n  },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n  reset: function(models, options) {\n    options || (options = {});\n    for (var i = 0, length = this.models.length; i < length; i++) {\n      this._removeReference(this.models[i], options);\n    }\n    options.previousModels = this.models;\n    this._reset();\n    models = this.add(models, _.extend({silent: true}, options));\n    if (!options.silent) this.trigger('reset', this, options);\n    return models;\n  },\n\n    // Add a model to the end of the collection.\n  push: function(model, options) {\n    return this.add(model, _.extend({at: this.length}, options));\n  },\n\n    // Remove a model from the end of the collection.\n  pop: function(options) {\n    var model = this.at(this.length - 1);\n    this.remove(model, options);\n    return model;\n  },\n\n    // Add a model to the beginning of the collection.\n  unshift: function(model, options) {\n    return this.add(model, _.extend({at: 0}, options));\n  },\n\n    // Remove a model from the beginning of the collection.\n  shift: function(options) {\n    var model = this.at(0);\n    this.remove(model, options);\n    return model;\n  },\n\n    // Slice out a sub-array of models from the collection.\n  slice: function() {\n    return slice.apply(this.models, arguments);\n  },\n\n    // Get a model from the set by id.\n  get: function(obj) {\n    if (obj == null) return void 0;\n    var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n    return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n  },\n\n    // Get the model at the given index.\n  at: function(index) {\n    if (index < 0) index += this.length;\n    return this.models[index];\n  },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n  where: function(attrs, first) {\n    if (_.isEmpty(attrs)) return first ? void 0 : [];\n    return this[first ? 'find' : 'filter'](function(model) {\n      for (var key in attrs) {\n        if (attrs[key] !== model.get(key)) return false;\n      }\n      return true;\n    });\n  },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n  findWhere: function(attrs) {\n    return this.where(attrs, true);\n  },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n  sort: function(options) {\n    if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n    options || (options = {});\n\n    // Run sort based on type of `comparator`.\n    if (_.isString(this.comparator) || this.comparator.length === 1) {\n      this.models = this.sortBy(this.comparator, this);\n    } else {\n      this.models.sort(_.bind(this.comparator, this));\n    }\n\n    if (!options.silent) this.trigger('sort', this, options);\n    return this;\n  },\n\n    // Pluck an attribute from each model in the collection.\n  pluck: function(attr) {\n    return _.invoke(this.models, 'get', attr);\n  },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n  fetch: function(options) {\n    options = options ? _.clone(options) : {};\n    if (options.parse === void 0) options.parse = true;\n    var success = options.success;\n    var collection = this;\n    options.success = function(resp) {\n      var method = options.reset ? 'reset' : 'set';\n      collection[method](resp, options);\n      if (success) success(collection, resp, options);\n      collection.trigger('sync', collection, resp, options);\n    };\n    wrapError(this, options);\n    return this.sync('read', this, options);\n  },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n  create: function(model, options) {\n    options = options ? _.clone(options) : {};\n    if (!(model = this._prepareModel(model, options))) return false;\n    if (!options.wait) this.add(model, options);\n    var collection = this;\n    var success = options.success;\n    options.success = function(model, resp) {\n      if (options.wait) collection.add(model, options);\n      if (success) success(model, resp, options);\n    };\n    model.save(null, options);\n    return model;\n  },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n  parse: function(resp, options) {\n    return resp;\n  },\n\n    // Create a new collection with an identical list of models as this one.\n  clone: function() {\n    return new this.constructor(this.models, {\n      model: this.model,\n      comparator: this.comparator\n    });\n  },\n\n    // Define how to uniquely identify models in the collection.\n  modelId: function (attrs) {\n    return attrs[this.model.prototype.idAttribute || 'id'];\n  },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n  _reset: function() {\n    this.length = 0;\n    this.models = [];\n    this._byId  = {};\n  },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n  _prepareModel: function(attrs, options) {\n    if (this._isModel(attrs)) {\n      if (!attrs.collection) attrs.collection = this;\n      return attrs;\n    }\n    options = options ? _.clone(options) : {};\n    options.collection = this;\n    var model = new this.model(attrs, options);\n    if (!model.validationError) return model;\n    this.trigger('invalid', this, model.validationError, options);\n    return false;\n  },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n  _isModel: function (model) {\n    return model instanceof Model;\n  },\n\n    // Internal method to create a model's ties to a collection.\n  _addReference: function(model, options) {\n    this._byId[model.cid] = model;\n    var id = this.modelId(model.attributes);\n    if (id != null) this._byId[id] = model;\n    model.on('all', this._onModelEvent, this);\n  },\n\n    // Internal method to sever a model's ties to a collection.\n  _removeReference: function(model, options) {\n    if (this === model.collection) delete model.collection;\n    model.off('all', this._onModelEvent, this);\n  },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n  _onModelEvent: function(event, model, collection, options) {\n    if ((event === 'add' || event === 'remove') && collection !== this) return;\n    if (event === 'destroy') this.remove(model, options);\n    if (event === 'change') {\n      var prevId = this.modelId(model.previousAttributes());\n      var id = this.modelId(model.attributes);\n      if (prevId !== id) {\n        if (prevId != null) delete this._byId[prevId];\n        if (id != null) this._byId[id] = model;\n      }\n    }\n    this.trigger.apply(this, arguments);\n  }\n\n});\n\n// Underscore methods that we want to implement on the Collection.\n// 90% of the core usefulness of Backbone Collections is actually implemented\n// right here:\nvar methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain', 'sample', 'partition'];\n\n// Mix in each Underscore method as a proxy to `Collection#models`.\n_.each(methods, function(method) {\n  if (!_[method]) return;\n  Collection.prototype[method] = function() {\n    var args = slice.call(arguments);\n    args.unshift(this.models);\n    return _[method].apply(_, args);\n  };\n});\n\n// Underscore methods that take a property name as an argument.\nvar attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n// Use attributes instead of properties.\n_.each(attributeMethods, function(method) {\n  if (!_[method]) return;\n  Collection.prototype[method] = function(value, context) {\n    var iterator = _.isFunction(value) ? value : function(model) {\n      return model.get(value);\n    };\n    return _[method](this.models, iterator, context);\n  };\n});\n\n// setup inheritance\nCollection.extend = extend;\nmodule.exports = Collection;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/backbone-thin/collection.js?")},"./node_modules/backbone-thin/index.js":
/*!*********************************************!*\
  !*** ./node_modules/backbone-thin/index.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports.Model = __webpack_require__(/*! ./model */ "./node_modules/backbone-thin/model.js");\nmodule.exports.Collection = __webpack_require__(/*! ./collection */ "./node_modules/backbone-thin/collection.js");\nmodule.exports.Events = __webpack_require__(/*! backbone-events-standalone */ "./node_modules/backbone-events-standalone/index.js");\nmodule.exports.extend = __webpack_require__(/*! backbone-extend-standalone */ "./node_modules/backbone-extend-standalone/backbone-extend-standalone.js");\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/backbone-thin/index.js?')},"./node_modules/backbone-thin/model.js":
/*!*********************************************!*\
  !*** ./node_modules/backbone-thin/model.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("//     Backbone.js 1.1.2\n\n//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\nvar Events = __webpack_require__(/*! backbone-events-standalone */ \"./node_modules/backbone-events-standalone/index.js\");\nvar extend = __webpack_require__(/*! backbone-extend-standalone */ \"./node_modules/backbone-extend-standalone/backbone-extend-standalone.js\");\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\n// Backbone.Model\n// --------------\n\n// Backbone **Models** are the basic data object in the framework --\n// frequently representing a row in a table in a database on your server.\n// A discrete chunk of data and a bunch of useful, related methods for\n// performing computations and transformations on that data.\n\n// Create a new model with the specified attributes. A client id (`cid`)\n// is automatically generated and assigned for you.\nvar Model = function(attributes, options) {\n  var attrs = attributes || {};\n  options || (options = {});\n  this.cid = _.uniqueId('c');\n  this.attributes = {};\n  if (options.collection) this.collection = options.collection;\n  if (options.parse) attrs = this.parse(attrs, options) || {};\n  attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n  this.set(attrs, options);\n  this.changed = {};\n  this.initialize.apply(this, arguments);\n};\n\n// Attach all inheritable methods to the Model prototype.\n_.extend(Model.prototype, Events, {\n\n  // A hash of attributes whose current and previous value differ.\n  changed: null,\n\n  // The value returned during the last failed validation.\n  validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n  idAttribute: 'id',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n  initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n  toJSON: function(options) {\n    return _.clone(this.attributes);\n  },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n  sync: function() {\n    return Backbone.sync.apply(this, arguments);\n  },\n\n    // Get the value of an attribute.\n  get: function(attr) {\n    return this.attributes[attr];\n  },\n\n    // Get the HTML-escaped value of an attribute.\n  escape: function(attr) {\n    return _.escape(this.get(attr));\n  },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n  has: function(attr) {\n    return this.get(attr) != null;\n  },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n  set: function(key, val, options) {\n    var attr, attrs, unset, changes, silent, changing, prev, current;\n    if (key == null) return this;\n\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    if (typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options || (options = {});\n\n    // Run validation.\n    if (!this._validate(attrs, options)) return false;\n\n    // Extract attributes and options.\n    unset           = options.unset;\n    silent          = options.silent;\n    changes         = [];\n    changing        = this._changing;\n    this._changing  = true;\n\n    if (!changing) {\n      this._previousAttributes = _.clone(this.attributes);\n      this.changed = {};\n    }\n    current = this.attributes, prev = this._previousAttributes;\n\n    // Check for changes of `id`.\n    if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n    // For each `set` attribute, update or delete the current value.\n    for (attr in attrs) {\n      val = attrs[attr];\n      if (!_.isEqual(current[attr], val)) changes.push(attr);\n      if (!_.isEqual(prev[attr], val)) {\n        this.changed[attr] = val;\n      } else {\n        delete this.changed[attr];\n      }\n      unset ? delete current[attr] : current[attr] = val;\n    }\n\n    // Trigger all relevant attribute changes.\n    if (!silent) {\n      if (changes.length) this._pending = options;\n      for (var i = 0, length = changes.length; i < length; i++) {\n        this.trigger('change:' + changes[i], this, current[changes[i]], options);\n      }\n    }\n\n    // You might be wondering why there's a `while` loop here. Changes can\n    // be recursively nested within `\"change\"` events.\n    if (changing) return this;\n    if (!silent) {\n      while (this._pending) {\n        options = this._pending;\n        this._pending = false;\n        this.trigger('change', this, options);\n      }\n    }\n    this._pending = false;\n    this._changing = false;\n    return this;\n  },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n  unset: function(attr, options) {\n    return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n  },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n  clear: function(options) {\n    var attrs = {};\n    for (var key in this.attributes) attrs[key] = void 0;\n    return this.set(attrs, _.extend({}, options, {unset: true}));\n  },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n  hasChanged: function(attr) {\n    if (attr == null) return !_.isEmpty(this.changed);\n    return _.has(this.changed, attr);\n  },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n  changedAttributes: function(diff) {\n    if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n    var val, changed = false;\n    var old = this._changing ? this._previousAttributes : this.attributes;\n    for (var attr in diff) {\n      if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n      (changed || (changed = {}))[attr] = val;\n    }\n    return changed;\n  },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n  previous: function(attr) {\n    if (attr == null || !this._previousAttributes) return null;\n    return this._previousAttributes[attr];\n  },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n  previousAttributes: function() {\n    return _.clone(this._previousAttributes);\n  },\n\n    // Fetch the model from the server. If the server's representation of the\n    // model differs from its current attributes, they will be overridden,\n    // triggering a `\"change\"` event.\n  fetch: function(options) {\n    options = options ? _.clone(options) : {};\n    if (options.parse === void 0) options.parse = true;\n    var model = this;\n    var success = options.success;\n    options.success = function(resp) {\n      if (!model.set(model.parse(resp, options), options)) return false;\n      if (success) success(model, resp, options);\n      model.trigger('sync', model, resp, options);\n    };\n    wrapError(this, options);\n    return this.sync('read', this, options);\n  },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n  save: function(key, val, options) {\n    var attrs, method, xhr, attributes = this.attributes;\n\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    if (key == null || typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options = _.extend({validate: true}, options);\n\n    // If we're not waiting and attributes exist, save acts as\n    // `set(attr).save(null, opts)` with validation. Otherwise, check if\n    // the model will be valid when the attributes, if any, are set.\n    if (attrs && !options.wait) {\n      if (!this.set(attrs, options)) return false;\n    } else {\n      if (!this._validate(attrs, options)) return false;\n    }\n\n    // Set temporary attributes if `{wait: true}`.\n    if (attrs && options.wait) {\n      this.attributes = _.extend({}, attributes, attrs);\n    }\n\n    // After a successful server-side save, the client is (optionally)\n    // updated with the server-side state.\n    if (options.parse === void 0) options.parse = true;\n    var model = this;\n    var success = options.success;\n    options.success = function(resp) {\n      // Ensure attributes are restored during synchronous saves.\n      model.attributes = attributes;\n      var serverAttrs = model.parse(resp, options);\n      if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n      if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n        return false;\n      }\n      if (success) success(model, resp, options);\n      model.trigger('sync', model, resp, options);\n    };\n    wrapError(this, options);\n\n    method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n    if (method === 'patch' && !options.attrs) options.attrs = attrs;\n    xhr = this.sync(method, this, options);\n\n    // Restore attributes.\n    if (attrs && options.wait) this.attributes = attributes;\n\n    return xhr;\n  },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n  destroy: function(options) {\n    options = options ? _.clone(options) : {};\n    var model = this;\n    var success = options.success;\n\n    var destroy = function() {\n      model.stopListening();\n      model.trigger('destroy', model, model.collection, options);\n    };\n\n    options.success = function(resp) {\n      if (options.wait || model.isNew()) destroy();\n      if (success) success(model, resp, options);\n      if (!model.isNew()) model.trigger('sync', model, resp, options);\n    };\n\n    if (this.isNew()) {\n      options.success();\n      return false;\n    }\n    wrapError(this, options);\n\n    var xhr = this.sync('delete', this, options);\n    if (!options.wait) destroy();\n    return xhr;\n  },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n  url: function() {\n    var base =\n      _.result(this, 'urlRoot') ||\n      _.result(this.collection, 'url') ||\n      urlError();\n    if (this.isNew()) return base;\n    return base.replace(/([^\\/])$/, '$1/') + encodeURIComponent(this.id);\n  },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n  parse: function(resp, options) {\n    return resp;\n  },\n\n    // Create a new model with identical attributes to this one.\n  clone: function() {\n    return new this.constructor(this.attributes);\n  },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n  isNew: function() {\n    return !this.has(this.idAttribute);\n  },\n\n    // Check if the model is currently in a valid state.\n  isValid: function(options) {\n    return this._validate({}, _.extend(options || {}, { validate: true }));\n  },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n  _validate: function(attrs, options) {\n    if (!options.validate || !this.validate) return true;\n    attrs = _.extend({}, this.attributes, attrs);\n    var error = this.validationError = this.validate(attrs, options) || null;\n    if (!error) return true;\n    this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n    return false;\n  }\n\n});\n\n// Underscore methods that we want to implement on the Model.\nvar modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit', 'chain', 'isEmpty'];\n\n// Mix in each Underscore method as a proxy to `Model#attributes`.\n_.each(modelMethods, function(method) {\n  if (!_[method]) return;\n  Model.prototype[method] = function() {\n    var args = slice.call(arguments);\n    args.unshift(this.attributes);\n    return _[method].apply(_, args);\n  };\n});\n\n// setup inheritance\nModel.extend = extend;\nmodule.exports = Model;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/backbone-thin/model.js?")},"./node_modules/backbone-viewj/index.js":
/*!**********************************************!*\
  !*** ./node_modules/backbone-viewj/index.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("// this is the extracted view model from backbone\n// note that we inject jbone as jquery replacment\n// (and underscore directly)\n//\n// Views are almost more convention than they are actual code.\n//  MVC pattern\n// Backbone.View\n// -------------\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\nvar Events = __webpack_require__(/*! backbone-events-standalone */ \"./node_modules/backbone-events-standalone/index.js\");\nvar extend = __webpack_require__(/*! backbone-extend-standalone */ \"./node_modules/backbone-extend-standalone/backbone-extend-standalone.js\");\nvar $ = __webpack_require__(/*! jbone */ \"./node_modules/jbone/dist/jbone.js\");\n\n// Backbone Views are almost more convention than they are actual code. A View\n// is simply a JavaScript object that represents a logical chunk of UI in the\n// DOM. This might be a single item, an entire list, a sidebar or panel, or\n// even the surrounding frame which wraps your whole app. Defining a chunk of\n// UI as a **View** allows you to define your DOM events declaratively, without\n// having to worry about render order ... and makes it easy for the view to\n// react to specific changes in the state of your models.\n\n// Creating a Backbone.View creates its initial element outside of the DOM,\n// if an existing element is not provided...\nvar View =  function(options) {\n  this.cid = _.uniqueId('view');\n  options || (options = {});\n  _.extend(this, _.pick(options, viewOptions));\n  this._ensureElement();\n  this.initialize.apply(this, arguments);\n};\n\n// Cached regex to split keys for `delegate`.\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n// List of view options to be merged as properties.\nvar viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n// Set up all inheritable **Backbone.View** properties and methods.\n_.extend(View.prototype, Events, {\n\n  // The default `tagName` of a View's element is `\"div\"`.\n  tagName: 'div',\n\n  // jQuery delegate for element lookup, scoped to DOM elements within the\n  // current view. This should be preferred to global lookups where possible.\n  $: function(selector) {\n    return this.$el.find(selector);\n  },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n  initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n  render: function() {\n    return this;\n  },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n  remove: function() {\n    this._removeElement();\n    this.stopListening();\n    return this;\n  },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n  _removeElement: function() {\n    this.$el.remove();\n  },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n  setElement: function(element) {\n    this.undelegateEvents();\n    this._setElement(element);\n    this.delegateEvents();\n    return this;\n  },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n  _setElement: function(el) {\n    this.$el = el instanceof $ ? el : $(el);\n    this.el = this.$el[0];\n  },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n  delegateEvents: function(events) {\n    if (!(events || (events = _.result(this, 'events')))) return this;\n    this.undelegateEvents();\n    for (var key in events) {\n      var method = events[key];\n      if (!_.isFunction(method)) method = this[events[key]];\n      if (!method) continue;\n      var match = key.match(delegateEventSplitter);\n      this.delegate(match[1], match[2], _.bind(method, this));\n    }\n    return this;\n  },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n  delegate: function(eventName, selector, listener) {\n    this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n  },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n  undelegateEvents: function() {\n    if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n    return this;\n  },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n  undelegate: function(eventName, selector, listener) {\n    this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n  },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n  _createElement: function(tagName) {\n    return document.createElement(tagName);\n  },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n  _ensureElement: function() {\n    if (!this.el) {\n      var attrs = _.extend({}, _.result(this, 'attributes'));\n      if (this.id) attrs.id = _.result(this, 'id');\n      if (this.className) attrs['class'] = _.result(this, 'className');\n      this.setElement(this._createElement(_.result(this, 'tagName')));\n      this._setAttributes(attrs);\n    } else {\n      this.setElement(_.result(this, 'el'));\n    }\n  },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n  _setAttributes: function(attributes) {\n    this.$el.attr(attributes);\n  }\n\n});\n\n// setup inheritance\nView.extend = extend;\nmodule.exports = View;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/backbone-viewj/index.js?")},"./node_modules/bio.io/lib/clustal.js":
/*!********************************************!*\
  !*** ./node_modules/bio.io/lib/clustal.js ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _parser = __webpack_require__(/*! ./parser */ "./node_modules/bio.io/lib/parser.js");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _seqs = __webpack_require__(/*! ./seqs */ "./node_modules/bio.io/lib/seqs.js");\n\nvar _seqs2 = _interopRequireDefault(_seqs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Clustal = void 0;\nexports.default = Clustal = {\n  parse: function parse(text) {\n    var seqs = [];\n\n    if (Object.prototype.toString.call(text) === \'[object Array]\') {\n      var lines = text;\n    } else {\n      var lines = text.split("\\n");\n    }\n\n    // The first line in the file must start with the words "CLUSTAL"\n    if (lines[0].slice(0, 6) === !"CLUSTAL") {\n      throw new Error("Invalid CLUSTAL Header");\n    }\n\n    var k = 0;\n    // 0: reading sequences, 1: reading new lines\n    var blockstate = 1;\n    // count the sequence for every block\n    var seqCounter = 0;\n\n    while (k < lines.length) {\n      k++;\n      var line = lines[k];\n\n      if (!(line != null) || line.length === 0) {\n        blockstate = 1;\n        continue;\n      }\n\n      // okay we have an empty line\n      if (line.trim().length === 0) {\n        blockstate = 1;\n        continue;\n      } else {\n        // ignore annotations\n        if (_seqs2.default.contains(line, "*")) {\n          continue;\n        }\n        if (blockstate === 1) {\n          // new block recognized - reset\n          seqCounter = 0;\n          blockstate = 0;\n        }\n\n        var regex = /^(?:\\s*)(\\S+)(?:\\s+)(\\S+)(?:\\s*)(\\d*)(?:\\s*|$)/g;\n        var match = regex.exec(line);\n        if (match != null) {\n          var label = match[1].trim();\n          var sequence = match[2].trim();\n\n          // check for the first block\n          if (seqCounter >= seqs.length) {\n\n            var obj = _seqs2.default.getMeta(label.trim());\n            label = obj.name;\n\n            var cSeq = new _seqs2.default.model(sequence, label, seqCounter);\n            cSeq.ids = obj.ids || {};\n            cSeq.details = obj.details || {};\n\n            var keys = Object.keys(cSeq.ids);\n            if (keys.length > 0) {\n              cSeq.id = cSeq.ids[keys[0]];\n            }\n            seqs.push(cSeq);\n          } else {\n            seqs[seqCounter].seq += sequence;\n          }\n\n          seqCounter++;\n        } else {\n          console.log("parse error", line);\n        }\n      }\n    }\n\n    return seqs;\n  }\n};\n\n\n_parser2.default.mixin(Clustal);\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/clustal.js?')},"./node_modules/bio.io/lib/fasta.js":
/*!******************************************!*\
  !*** ./node_modules/bio.io/lib/fasta.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _seqs = __webpack_require__(/*! ./seqs */ "./node_modules/bio.io/lib/seqs.js");\n\nvar _seqs2 = _interopRequireDefault(_seqs);\n\nvar _extend2 = __webpack_require__(/*! ./utils/extend */ "./node_modules/bio.io/lib/utils/extend.js");\n\nvar _extend3 = _interopRequireDefault(_extend2);\n\nvar _parser = __webpack_require__(/*! ./parser */ "./node_modules/bio.io/lib/parser.js");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Fasta = void 0;\nexports.default = Fasta = {\n\n  getMeta: _seqs2.default.getMeta,\n\n  extend: function extend(metaParser) {\n    var customFasta = (0, _extend3.default)(Fasta);\n    Fasta.getMeta = metaParser;\n    return customFasta;\n  },\n  parse: function parse(text) {\n    var seqs = [];\n\n    // catch empty string\n    if (!text || text.length === 0) {\n      return [];\n    }\n\n    if (Object.prototype.toString.call(text) !== \'[object Array]\') {\n      text = text.split("\\n");\n    }\n\n    var _Fasta = Fasta;\n    var getMeta = _Fasta.getMeta;\n\n\n    for (var i = 0; i < text.length; i++) {\n      // check for header\n      var line = text[i];\n      if (line[0] === ">" || line[0] === ";") {\n\n        var label = line.slice(1).trim();\n        // extract IDs and push them to the meta dict\n        var obj = getMeta(label.trim());\n        label = obj.name;\n        var id = obj.id || seqs.length;\n        var currentSeq = new _seqs2.default.model("", obj.name, id);\n        currentSeq.ids = obj.ids || {};\n        currentSeq.details = obj.details || {};\n        seqs.push(currentSeq);\n      } else {\n        currentSeq.seq += line;\n      }\n    }\n    return seqs;\n  },\n  write: function write(seqs, access) {\n    var text = "";\n    for (var i = 0; i < seqs.length; i++) {\n      var seq = seqs[i];\n      if (access != null) {\n        seq = access(seq);\n      }\n      //FASTA header\n      text += ">" + seq.name + "\\n";\n      // seq\n      text += _seqs2.default.splitNChars(seq.seq, 80).join("\\n");\n\n      text += "\\n";\n    }\n    return text;\n  }\n};\n\n_parser2.default.mixin(Fasta);\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/fasta.js?')},"./node_modules/bio.io/lib/gff/index.js":
/*!**********************************************!*\
  !*** ./node_modules/bio.io/lib/gff/index.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _parser = __webpack_require__(/*! ../parser */ "./node_modules/bio.io/lib/parser.js");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _utils = __webpack_require__(/*! ./utils */ "./node_modules/bio.io/lib/gff/utils.js");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _jalview = __webpack_require__(/*! ./jalview */ "./node_modules/bio.io/lib/gff/jalview.js");\n\nvar _jalview2 = _interopRequireDefault(_jalview);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar gff = function gff() {}; /*\n                              * biojs-io-gff\n                              * https://github.com/greenify/biojs-io-gff\n                              *\n                              * Copyright (c) 2014 greenify\n                              * Licensed under the Apache 2 license.\n                              */\n\n_parser2.default.mixin(gff);\nexports.default = gff;\n\n\n/**\n * Method responsible to parse GFF\n * @see https://www.sanger.ac.uk/resources/software/gff/spec.html#t_2\n *\n * @example\n *\n *     biojsiogff.parse(\'SEQ1  EMBL  atg  103  105  .  +  0\');\n *\n * @method parse\n * @param {String} file GFF file\n * @return {String} Returns JSON representation\n */\n\ngff.parseLines = function (file) {\n  var lines = file.split("\\n");\n  var config = {};\n  var arr = [];\n  config.type = gff._guessType(lines);\n  var offset = 0;\n  if (config.type === "jalview") {\n    var ret = _jalview2.default.readHeader(lines);\n    //console.log(ret);\n    offset = ret.offset;\n    config.colors = ret.colors;\n    arr = ret.features;\n  }\n  for (var i = offset; i < lines.length; i++) {\n    // ignore comments for now\n    var line = lines[i];\n    if (line.length === 0 || line[0] === "#") continue;\n\n    line = gff.parseLine(line);\n    if (line !== undefined) arr.push(line);\n  }\n  return {\n    features: arr,\n    config: config\n  };\n};\n\ngff._guessType = function (line) {\n  if (line[0].substring(0, 15) === "##gff-version 3") {\n    return "gff3";\n  } else if (line[0].indexOf("#") < 0 && line[0].split("\\t").length === 2) {\n    // no comments and two columns. let\'s hope this is from jalview\n    return "jalview";\n  }\n  // unable to read file header. lets hope this is gff3\n  return "gff3";\n};\n\n/**\n * parses GFF and returns a dictionary of all seqs with their features\n * @method parseSeqs\n * @param {String} file GFF file\n * @return {String} Returns dictionary of sequences with an array of their features\n */\ngff.parseSeqs = gff.parse = function (file) {\n  var obj = gff.parseLines(file);\n  var seqs = {};\n  obj.features.forEach(function (entry) {\n    var key = entry.seqname;\n    if (seqs[key] === undefined) seqs[key] = [];\n    delete entry.seqname;\n    seqs[key].push(entry);\n  });\n  delete obj.features;\n  obj.seqs = seqs;\n  return obj;\n};\n\n/*\n * parses one GFF line and returns it\n */\ngff.parseLine = function (line) {\n  var tLine = {};\n\n  var columns = line.split(/\\s+/);\n  // ignore empty lines\n  if (columns.length === 1) return;\n\n  tLine.seqname = columns[0];\n  tLine.source = columns[1];\n  tLine.feature = columns[2];\n  tLine.start = parseInt(columns[3]);\n  tLine.end = parseInt(columns[4]);\n  tLine.score = columns[5]; // only DNA,RNA\n  tLine.strand = columns[6]; // only DNA,RNA\n  tLine.frame = columns[7]; // only DNA,RNA\n  var attr = columns.slice(8).join(" "); // plain text comments\n\n  // remove undefined (dot)\n  Object.keys(tLine).forEach(function (key) {\n    if (typeof tLine[key] === "string") {\n      tLine[key] = tLine[key].trim(); // triming is important\n    }\n    if (tLine[key] === ".") {\n      tLine[key] = undefined;\n    }\n  });\n\n  // parse optional parameters\n  if (tLine.score) {\n    tLine.score = parseFloat(tLine.score);\n  }\n  if (tLine.frame) {\n    tLine.frame = parseInt(tLine.frame);\n  }\n\n  tLine.attributes = _utils2.default.extractKeys(attr);\n  return tLine;\n};\n\ngff.exportLine = function (line) {\n  var attrs = Object.keys(line.attributes).map(function (key) {\n    return key + "=" + line.attributes[key];\n  }).join(";");\n  var cells = [line.seqname, line.source, line.feature, line.start, line.end, line.score, line.strand, line.frame, attrs];\n  cells = cells.map(function (e) {\n    if (e === undefined) {\n      return ".";\n    }\n    return e;\n  });\n  return cells.join("\\t");\n};\n\ngff.exportLines = function (lines) {\n  return "##gff-version 3\\n" + lines.map(gff.exportLine).join("\\n");\n};\n\ngff.exportSeqs = gff.export = function (seqs) {\n  var lines = [];\n  var pLine = function pLine(e) {\n    e.seqname = key;\n    lines.push(e);\n  };\n\n  for (var key in seqs) {\n    seqs[key].forEach(pLine);\n  }\n  return gff.exportLines(lines);\n};\n\n// expose utils\ngff.utils = _utils2.default;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/gff/index.js?')},"./node_modules/bio.io/lib/gff/jalview.js":
/*!************************************************!*\
  !*** ./node_modules/bio.io/lib/gff/jalview.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _utils = __webpack_require__(/*! ./utils */ "./node_modules/bio.io/lib/gff/utils.js");\n\nvar jalview = {};\nexports.default = jalview;\n\n// http://www.jalview.org/help/html/features/featuresFormat.html\n\njalview.readHeader = function (lines) {\n  var colors = {};\n  var i = 0;\n  var features = [];\n  var currentGroup;\n\n  for (; i < lines.length; i++) {\n    var line = lines[i];\n    if (line.indexOf("#") >= 0) {\n      // no comments allowed -> stop\n      break;\n    }\n    var columns = line.split(/\\t/);\n    var firstCell = columns[0].trim();\n    if (firstCell === "GFF") {\n      // this symbolizes the end\n      break;\n    } else if (columns.length === 2) {\n      if (firstCell === "startgroup") {\n        currentGroup = columns[1].trim();\n      } else if (firstCell === "endgroup") {\n        currentGroup = "";\n        continue;\n      } else {\n        // parse color\n        colors[columns[0]] = jalview.parseColor(columns[1]);\n      }\n    } else if (columns.length >= 5) {\n      var arr = jalview.parseLine(columns);\n      if (currentGroup) {\n        arr.attributes.Parent = currentGroup;\n      }\n      features.push(arr);\n    }\n  }\n\n  return {\n    offset: i,\n    colors: colors,\n    features: features\n  };\n};\n\njalview.parseColor = function (cell) {\n  if (cell.indexOf(",") >= 0) {\n    // rgb code\n    return (0, _utils.rgbToHex)(cell.split(",").map(function (el) {\n      return parseInt(el);\n    }));\n  }\n  // color names with length == 6\n  // \'bisque,maroon,orange,orchid,purple,salmon,sienna,tomato,violet,yellow\'\n  if (cell.length === 6 && parseInt(cell.charAt(0), 16) <= 16 && cell !== \'bisque\') {\n    // hex code\n    return "#" + cell;\n  }\n  // color name\n  return cell;\n};\n\njalview.parseLine = function (columns) {\n  var obj = {\n    attributes: {}\n  };\n  obj.attributes.Name = columns[0].trim(); //desc\n  obj.seqname = columns[1].trim(); // id\n  obj.start = parseInt(columns[3]);\n  obj.end = parseInt(columns[4]);\n  obj.feature = columns[5].trim();\n  if (obj.seqname === "ID_NOT_SPECIFIED") {\n    obj.seqname = columns[2].trim(); // alternative id\n  }\n  return obj;\n};\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/gff/jalview.js?')},"./node_modules/bio.io/lib/gff/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/bio.io/lib/gff/utils.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.extractKeys = extractKeys;\nexports.rgbToHex = rgbToHex;\nfunction extractKeys(attr) {\n  // extract key-value definitions\n  var attributes = {};\n  var attrArr = attr.split(";");\n  attrArr.forEach(function (el) {\n    var keyArr, key, val;\n    if (el.indexOf("=") > 0) {\n      keyArr = el.split("=");\n      key = keyArr[0];\n      val = keyArr[1];\n      attributes[key] = val;\n    } else if (el.indexOf(" ") > 0) {\n      keyArr = el.split(" ");\n      key = keyArr[0];\n      val = keyArr[1].replace(/"/g, \'\');\n      attributes[key] = val;\n    }\n  });\n  return attributes;\n};\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? "0" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  if (r.length === 3) {\n    return rgbToHex(r[0], r[1], r[2]);\n  }\n  return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n};\n\n// exporting with star is expensive\nexports.default = {\n  extractKeys: extractKeys,\n  rgbToHex: rgbToHex\n};\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/gff/utils.js?')},"./node_modules/bio.io/lib/index.js":
/*!******************************************!*\
  !*** ./node_modules/bio.io/lib/index.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.version = exports.xhr = exports.seqs = exports.parser = exports.newick = exports.matrix = exports.gff = exports.fasta = exports.clustal = undefined;\n\nvar _clustal2 = __webpack_require__(/*! ./clustal */ "./node_modules/bio.io/lib/clustal.js");\n\nvar _clustal3 = _interopRequireDefault(_clustal2);\n\nvar _fasta2 = __webpack_require__(/*! ./fasta */ "./node_modules/bio.io/lib/fasta.js");\n\nvar _fasta3 = _interopRequireDefault(_fasta2);\n\nvar _gff2 = __webpack_require__(/*! ./gff */ "./node_modules/bio.io/lib/gff/index.js");\n\nvar _gff3 = _interopRequireDefault(_gff2);\n\nvar _matrix2 = __webpack_require__(/*! ./matrix */ "./node_modules/bio.io/lib/matrix.js");\n\nvar _matrix3 = _interopRequireDefault(_matrix2);\n\nvar _newick2 = __webpack_require__(/*! ./newick */ "./node_modules/bio.io/lib/newick/index.js");\n\nvar _newick3 = _interopRequireDefault(_newick2);\n\nvar _parser2 = __webpack_require__(/*! ./parser */ "./node_modules/bio.io/lib/parser.js");\n\nvar _parser3 = _interopRequireDefault(_parser2);\n\nvar _seqs2 = __webpack_require__(/*! ./seqs */ "./node_modules/bio.io/lib/seqs.js");\n\nvar _seqs3 = _interopRequireDefault(_seqs2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.clustal = _clustal3.default; // TODO: make BLAST slim\n//export blast from "./blast";\n\nexports.fasta = _fasta3.default;\nexports.gff = _gff3.default;\nexports.matrix = _matrix3.default;\nexports.newick = _newick3.default;\nexports.parser = _parser3.default;\nexports.seqs = _seqs3.default;\n\n// convenience export\n\nvar xhr = __webpack_require__(/*! xhr */ "./node_modules/xhr/index.js");\nexports.xhr = xhr;\n\n// version will be automatically injected by webpack\n// IO_VERSION is only defined if loaded via webpack\n\nvar VERSION = "imported";\nif (typeof IO_VERSION !== "undefined") {\n    VERSION = IO_VERSION;\n}\n\nvar version = exports.version = VERSION;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/index.js?')},"./node_modules/bio.io/lib/matrix.js":
/*!*******************************************!*\
  !*** ./node_modules/bio.io/lib/matrix.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _parser = __webpack_require__(/*! ./parser */ "./node_modules/bio.io/lib/parser.js");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Example of a simple 2d matrix parser\n * Can be used for e.g. BLOSUM\n * */\n\nvar MatrixReader = function MatrixReader(text) {\n  if (this.constructor != MatrixReader) return new MatrixReader(text);\n  this.matrix = {};\n  this.parsingOrder = [];\n  if (text != undefined) {\n    this.parse(text);\n  }\n  return this;\n};\n\n_parser2.default.mixin(MatrixReader);\n\nmodule.exports = MatrixReader;\n\nMatrixReader.prototype.parse = function (text) {\n  text.split("\\n").forEach(function (el) {\n    this.parseLine(el);\n  }.bind(this));\n  this.buildMatrix();\n  return this.matrix;\n};\n\nMatrixReader.read = function (url, cb) {\n  return new MatrixReader().read(url, cb);\n};\n\nMatrixReader.parse = function (text) {\n  return new MatrixReader().parse(text);\n};\n\nMatrixReader.prototype.parseLine = function (line) {\n  var c = line.charAt(0);\n  if (c === \'#\') {\n    return;\n  } else {\n    this.parsingOrder.push(c);\n    var intStr = line.substring(1);\n    var ints = intStr.split(/\\s+/).filter(function (e) {\n      return e.length > 0;\n    }).map(function (e) {\n      return parseInt(e);\n    });\n\n    var m = {};\n    for (var i = 0; i < ints.length; i++) {\n      m[this.parsingOrder[i]] = ints[i];\n    }\n    this.matrix[c] = m;\n  }\n};\n\nMatrixReader.prototype.export = function () {\n  return MatrixReader.export(this.matrix);\n};\n\nMatrixReader.export = function (matrix) {\n  var lines = [];\n  var max = 1;\n  // use the matrix attribute if an object is given\n  if ("matrix" in matrix) {\n    matrix = matrix.matrix;\n  }\n  for (var key in matrix) {\n    var line = key;\n    var keys = Object.keys(matrix[key]);\n    for (var i = 0; i < max; i++) {\n      line += "\\t" + matrix[key][keys[i]];\n    }\n    lines.push(line);\n    max++;\n  }\n  return lines.join("\\n");\n};\n\n/**\n * faster access time\n */\nMatrixReader.prototype.buildMatrix = function () {\n  for (var i = this.parsingOrder.length - 1; i >= 0; i--) {\n    var curC = this.parsingOrder[i];\n    var map = this.matrix[curC];\n    for (var key in map) {\n      this.matrix[key][curC] = map[key];\n    }\n  }\n};\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/matrix.js?')},"./node_modules/bio.io/lib/newick/extended_newick.js":
/*!***********************************************************!*\
  !*** ./node_modules/bio.io/lib/newick/extended_newick.js ***!
  \***********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.default = parse_nhx;\n/**\n * Extended Newick format parser in JavaScript.\n *\n * Copyright (c) Miguel Pignatelli 2014 based on Jason Davies\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Example tree (from http://en.wikipedia.org/wiki/Newick_format):\n *\n * +--0.1--A\n * F-----0.2-----B            +-------0.3----C\n * +------------------0.5-----E\n *                            +---------0.4------D\n *\n * Newick format:\n * (A:0.1,B:0.2,(C:0.3,D:0.4)E:0.5)F;\n *\n * Converted to JSON:\n * {\n *   name: \"F\",\n *   children: [\n *     {name: \"A\", branch_length: 0.1},\n *     {name: \"B\", branch_length: 0.2},\n *     {\n *       name: \"E\",\n *       length: 0.5,\n *       children: [\n *         {name: \"C\", branch_length: 0.3},\n *         {name: \"D\", branch_length: 0.4}\n *       ]\n *     }\n *   ]\n * }\n *\n * Converted to JSON, but with no names or lengths:\n * {\n *   children: [\n *     {}, {}, {\n *       children: [{}, {}]\n *     }\n *   ]\n * }\n */\n\nfunction parse_nhx(s) {\n  var ancestors = [];\n  var tree = {};\n  // var tokens = s.split(/\\s*(;|\\(|\\)|,|:)\\s*/);\n  //[&&NHX:D=N:G=ENSG00000139618:T=9606]\n  var tokens = s.split(/\\s*(;|\\(|\\)|\\[|\\]|,|:|=)\\s*/);\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    var subtree = void 0;\n    switch (token) {\n      case '(':\n        // new children\n        subtree = {};\n        tree.children = [subtree];\n        ancestors.push(tree);\n        tree = subtree;\n        break;\n      case ',':\n        // another branch\n        subtree = {};\n        ancestors[ancestors.length - 1].children.push(subtree);\n        tree = subtree;\n        break;\n      case ')':\n        // optional name next\n        tree = ancestors.pop();\n        break;\n      case ':':\n        // optional length next\n        break;\n      default:\n        var x = tokens[i - 1];\n        // var x2 = tokens[i-2];\n        if (x == ')' || x == '(' || x == ',') {\n          tree.name = token;\n        } else if (x == ':') {\n          var test_type = typeof token === 'undefined' ? 'undefined' : _typeof(token);\n          if (!isNaN(token)) {\n            tree.branch_length = parseFloat(token);\n          }\n          // tree.length = parseFloat(token);\n        } else if (x == '=') {\n            var x2 = tokens[i - 2];\n            switch (x2) {\n              case 'D':\n                tree.duplication = token;\n                break;\n              case 'G':\n                tree.gene_id = token;\n                break;\n              case 'T':\n                tree.taxon_id = token;\n                break;\n\n            }\n          } else {\n            var test;\n          }\n    }\n  }\n  return tree;\n};\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/newick/extended_newick.js?")},"./node_modules/bio.io/lib/newick/index.js":
/*!*************************************************!*\
  !*** ./node_modules/bio.io/lib/newick/index.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.parseNhx = exports.parse = undefined;\n\nvar _newick = __webpack_require__(/*! ./newick */ "./node_modules/bio.io/lib/newick/newick.js");\n\nvar _newick2 = _interopRequireDefault(_newick);\n\nvar _extended_newick = __webpack_require__(/*! ./extended_newick */ "./node_modules/bio.io/lib/newick/extended_newick.js");\n\nvar _extended_newick2 = _interopRequireDefault(_extended_newick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar newick = {};\nnewick.parse = _newick2.default;\nnewick.parseNhx = _extended_newick2.default;\n\nexports.default = newick;\nexports.parse = _newick2.default;\nexports.parseNhx = _extended_newick2.default;\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/newick/index.js?')},"./node_modules/bio.io/lib/newick/newick.js":
/*!**************************************************!*\
  !*** ./node_modules/bio.io/lib/newick/newick.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = parse_newick;\n/**\n * Newick format parser in JavaScript.\n *\n * Copyright (c) edited by Miguel Pignatelli 2014, based on Jason Davies 2010.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Example tree (from http://en.wikipedia.org/wiki/Newick_format):\n *\n * +--0.1--A\n * F-----0.2-----B            +-------0.3----C\n * +------------------0.5-----E\n *                            +---------0.4------D\n *\n * Newick format:\n * (A:0.1,B:0.2,(C:0.3,D:0.4)E:0.5)F;\n *\n * Converted to JSON:\n * {\n *   name: "F",\n *   children: [\n *     {name: "A", branch_length: 0.1},\n *     {name: "B", branch_length: 0.2},\n *     {\n *       name: "E",\n *       length: 0.5,\n *       children: [\n *         {name: "C", branch_length: 0.3},\n *         {name: "D", branch_length: 0.4}\n *       ]\n *     }\n *   ]\n * }\n *\n * Converted to JSON, but with no names or lengths:\n * {\n *   children: [\n *     {}, {}, {\n *       children: [{}, {}]\n *     }\n *   ]\n * }\n */\n\nfunction parse_newick(s) {\n  var ancestors = [];\n  var tree = {};\n  var tokens = s.split(/\\s*(;|\\(|\\)|,|:)\\s*/);\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    var subtree = void 0;\n    switch (token) {\n      case \'(\':\n        // new children\n        subtree = {};\n        tree.children = [subtree];\n        ancestors.push(tree);\n        tree = subtree;\n        break;\n      case \',\':\n        // another branch\n        subtree = {};\n        ancestors[ancestors.length - 1].children.push(subtree);\n        tree = subtree;\n        break;\n      case \')\':\n        // optional name next\n        tree = ancestors.pop();\n        break;\n      case \':\':\n        // optional length next\n        break;\n      default:\n        var x = tokens[i - 1];\n        if (x == \')\' || x == \'(\' || x == \',\') {\n          tree.name = token;\n        } else if (x == \':\') {\n          tree.branch_length = parseFloat(token);\n        }\n    }\n  }\n  return tree;\n};\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/newick/newick.js?')},"./node_modules/bio.io/lib/parser.js":
/*!*******************************************!*\
  !*** ./node_modules/bio.io/lib/parser.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };\n\nvar xhr = __webpack_require__(/*! request */ "./node_modules/xhr/index.js");\nvar GenericReader = {};\n\nexports.default = GenericReader;\n\n// returns a promise if callback is undefined\n\nGenericReader.read = function (url, callback) {\n  var onret = function (_this) {\n    return function (err, response, text) {\n      return GenericReader._onRetrieval(err, text, callback, _this);\n    };\n  }(this);\n\n  if (typeof callback === "undefined") {\n    return new Promise(function (resolve, reject) {\n      callback = function callback(err, res) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(res);\n        }\n      };\n      xhr(url, onret);\n    });\n  } else {\n    return xhr(url, onret);\n  }\n};\n\nGenericReader._onRetrieval = function (err, text, callback, _this) {\n  var rText = void 0;\n  if (typeof err !== "undefined") {\n    rText = _this.parse(text);\n  }\n  return callback.call(_this, err, rText);\n};\n\n// provide a convenient shortcut to inherit\nGenericReader.extend = function (obj, statics) {\n  return extend(GenericReader, obj, statics);\n};\n// Mixin utility\nGenericReader.mixin = function (proto) {\n  var exports = [\'read\'];\n  if ((typeof proto === "undefined" ? "undefined" : _typeof(proto)) !== "object") {\n    proto = proto.prototype;\n  }\n  exports.forEach(function (name) {\n    proto[name] = GenericReader[name];\n  }, this);\n  return proto;\n};\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/parser.js?')},"./node_modules/bio.io/lib/seqs.js":
/*!*****************************************!*\
  !*** ./node_modules/bio.io/lib/seqs.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar st = {};\nexports.default = st;\n\n/****\n * Seems to be lots of different ways to format FASTA headers.\n *\n * Generally there\'s an ID and a DESCRIPTION\n *   >ID DESCRIPTION\n *\n *   >(parts|of|ID) (DESCRIPTION with optional key=values)\n *\n * This is complicated by the fact that the "values" in the description can have spaces\n * e.g. OS=Arabidopsis thaliana GN=CCD8\n *\n ****\n*/\n\n// extract IDs and push them to the meta dict\n\nst.getMeta = function (label) {\n\n  var full_id = false,\n      full_desc = false;\n  var name,\n      ids = {},\n      details = {},\n      description;\n\n  var label_parts = label.split(" ");\n\n  if (label_parts.length >= 1) {\n    full_id = label_parts.shift(); // everything up to the first white space\n    full_desc = label_parts.join(" "); // everything else\n  } else {\n      full_id = label;\n    }\n\n  if (full_id) {\n    var id_parts = full_id.split(\'|\');\n\n    // the last item is the accession\n    name = id_parts.pop();\n\n    details.en = name;\n\n    // everything else should be pairs: db|id\n    while (id_parts.length != 0) {\n      var db = id_parts.shift();\n      var id = id_parts.shift();\n      ids[db] = id;\n    }\n  } else {\n    name = full_id;\n  }\n\n  if (full_desc) {\n\n    var kv_parts = full_desc.split(\'=\');\n\n    if (kv_parts.length > 1) {\n\n      var current_key, next_key;\n      var kv;\n      var kv_idx_max = kv_parts.length - 1;\n      var kv_idx = 0;\n      kv_parts.forEach(function (value_and_maybe_next_key) {\n\n        value_and_maybe_next_key = value_and_maybe_next_key.trim();\n\n        var value_parts = value_and_maybe_next_key.split(" ");\n        var value;\n        if (value_parts.length > 1) {\n          next_key = value_parts.pop();\n          value = value_parts.join(\' \');\n        } else {\n          value = value_and_maybe_next_key;\n        }\n\n        if (current_key) {\n          var key = current_key.toLowerCase();\n          details[key] = value;\n        } else {\n          description = value;\n        }\n        current_key = next_key;\n      });\n    } else {\n      description = kv_parts.shift();\n    }\n  }\n\n  var meta = {\n    name: name,\n    ids: ids,\n    details: details\n  };\n\n  if (description) {\n    meta.desc = description;\n  }\n\n  return meta;\n};\n\nvar findSepInArr = function findSepInArr(arr, sep) {\n  for (var i = 0; i < arr.lenght; i++) {\n    if (arr[i].indexOf(i)) {\n      return i;\n    }\n  }\n  return arr.length - 1;\n};\n\nvar strToDict = function strToDict(str, sep, toJoin) {\n  toJoin = toJoin || {};\n  var entries = str.split(sep);\n  toJoin[entries[0].toLowerCase()] = entries[1];\n  return toJoin;\n};\n\nvar identDB = {\n  "sp": {\n    link: "http://www.uniprot.org/%s",\n    name: "Uniprot"\n  },\n  "tr": {\n    link: "http://www.uniprot.org/%s",\n    name: "Trembl"\n  },\n  "gb": {\n    link: "http://www.ncbi.nlm.nih.gov/nuccore/%s",\n    name: "Genbank"\n  },\n  "pdb": {\n    link: "http://www.rcsb.org/pdb/explore/explore.do?structureId=%s",\n    name: "PDB"\n  }\n};\n\nst.buildLinks = function (meta) {\n  var links = {};\n  meta = meta || {};\n  Object.keys(meta).forEach(function (id) {\n    if (id in identDB) {\n      var entry = identDB[id];\n      var link = entry.link.replace("%s", meta[id]);\n      links[entry.name] = link;\n    }\n  });\n  return links;\n};\n\n// search for a text\nst.contains = function (text, search) {\n  return \'\'.indexOf.call(text, search, 0) !== -1;\n};\n\n// split after e.g. 80 chars\nst.splitNChars = function (txt, num) {\n  var i, _ref;\n  num = num || 80;\n  var result = [];\n  for (i = 0, _ref = txt.length - 1; i <= _ref; i += num) {\n    result.push(txt.substr(i, num));\n  }\n  return result;\n};\n\nst.reverse = function (seq) {\n  return seq.split(\'\').reverse().join(\'\');\n};\n\nst.complement = function (seq) {\n  var newSeq = seq + "";\n  var replacements = [\n  // cg\n  [/g/g, "0"], [/c/g, "1"], [/0/g, "c"], [/1/g, "g"],\n  // CG\n  [/G/g, "0"], [/C/g, "1"], [/0/g, "C"], [/1/g, "G"],\n  // at\n  [/a/g, "0"], [/t/g, "1"], [/0/g, "t"], [/1/g, "a"],\n  // AT\n  [/A/g, "0"], [/T/g, "1"], [/0/g, "T"], [/1/g, "A"]];\n\n  for (var rep in replacements) {\n    newSeq = newSeq.replace(replacements[rep][0], replacements[rep][1]);\n  }\n  return newSeq;\n};\n\nst.reverseComplement = function (seq) {\n  return st.reverse(st.complement(seq));\n};\n\nst.model = function Seq(seq, name, id) {\n  this.seq = seq;\n  this.name = name;\n  this.id = id;\n  this.ids = {};\n};\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/seqs.js?')},"./node_modules/bio.io/lib/utils/extend.js":
/*!*************************************************!*\
  !*** ./node_modules/bio.io/lib/utils/extend.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n\tvalue: true\n});\n\nexports.default = function (out) {\n\tout = out || {};\n\tvar iterable = __range__(0, arguments.length, false);\n\tfor (var j = 0; j < iterable.length; j++) {\n\t\tvar i = iterable[j];\n\t\tif (!arguments[i]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (var k = 0; k < arguments[i].length; k++) {\n\t\t\tvar key = arguments[i][k];\n\t\t\tif (arguments[i].hasOwnProperty(key)) {\n\t\t\t\tout[key] = arguments[i][key];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n};\n\n;\n\nfunction __range__(left, right, inclusive) {\n\tvar range = [];\n\tvar ascending = left < right;\n\tvar end = !inclusive ? right : ascending ? right + 1 : right - 1;\n\tfor (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n\t\trange.push(i);\n\t}\n\treturn range;\n}\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/bio.io/lib/utils/extend.js?')},"./node_modules/biojs-events/index.js":
/*!********************************************!*\
  !*** ./node_modules/biojs-events/index.js ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('var events = __webpack_require__(/*! backbone-events-standalone */ "./node_modules/backbone-events-standalone/index.js");\n\nevents.onAll = function(callback,context){\n  this.on("all", callback,context);\n  return this;\n};\n\n// Mixin utility\nevents.oldMixin = events.mixin;\nevents.mixin = function(proto) {\n  events.oldMixin(proto);\n  // add custom onAll\n  var exports = [\'onAll\'];\n  for(var i=0; i < exports.length;i++){\n    var name = exports[i];\n    proto[name] = this[name];\n  }\n  return proto;\n};\n\nmodule.exports = events;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-events/index.js?')},"./node_modules/biojs-model/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/biojs-model/src/index.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports.seq = __webpack_require__(/*! ./seq */ "./node_modules/biojs-model/src/seq.js");\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-model/src/index.js?')},"./node_modules/biojs-model/src/seq.js":
/*!*********************************************!*\
  !*** ./node_modules/biojs-model/src/seq.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports){eval("module.exports = function(seq, name, id) {\n    this.seq = seq;\n    this.name = name;\n    this.id = id;\n    this.meta = {};\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-model/src/seq.js?")},"./node_modules/biojs-vis-seqlogo/light.js":
/*!*************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/light.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('// this is a light-weight build without the scrolling module\nmodule.exports = __webpack_require__(/*! ./src/index.js */ "./node_modules/biojs-vis-seqlogo/src/index.js");\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/light.js?')},"./node_modules/biojs-vis-seqlogo/src/axis.js":
/*!****************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/axis.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n    render_x_axis_label: function () {\n      var label = "Model Position";\n      if (this.display_ali_map) {\n        label = "Alignment Column";\n      }\n      this.called_on.find(\'.logo_xaxis\').remove();\n      this.called_on.prepend(\'<div class="logo_xaxis" class="centered" style="margin-left:40px"><p class="xaxis_text" style="width:10em;margin:1em auto">\' + label + \'</p></div>\');\n\n    },\n    render_y_axis_label: function () {\n      //attach a canvas for the y-axis\n      this.dom_element.parent().before(\'<canvas class="logo_yaxis" height="\'+this.options.height+\'" width="55"></canvas>\');\n      var canvas = this.called_on.find(\'.logo_yaxis\'),\n      top_pix_height = 0,\n      bottom_pix_height = 0,\n      top_height = Math.abs(this.data.max_height),\n      bottom_height = (isNaN(this.data.min_height_obs)) ? 0 : parseInt(this.data.min_height_obs, 10),\n      context = null,\n      axis_label = "Information Content (bits)";\n\n      context = canvas[0].getContext(\'2d\');\n      //draw min/max tick marks\n      context.beginPath();\n      context.moveTo(55, 1);\n      context.lineTo(40, 1);\n\n      context.moveTo(55, this.info_content_height);\n      context.lineTo(40, this.info_content_height);\n\n\n      context.moveTo(55, (this.info_content_height / 2));\n      context.lineTo(40, (this.info_content_height / 2));\n      context.lineWidth = 1;\n      context.strokeStyle = "#666666";\n      context.stroke();\n\n      //draw the label text\n      context.fillStyle = "#666666";\n      context.textAlign = "right";\n      context.font = "bold 10px Arial";\n\n      // draw the max label\n      context.textBaseline = "top";\n      context.fillText(parseFloat(this.data.max_height).toFixed(1), 38, 0);\n      context.textBaseline = "middle";\n\n      // draw the midpoint labels\n      context.fillText(parseFloat(this.data.max_height / 2).toFixed(1), 38, (this.info_content_height / 2));\n      // draw the min label\n      context.fillText(\'0\', 38, this.info_content_height);\n\n      // draw the axis label\n      if (this.data.height_calc === \'score\') {\n        axis_label = "Score (bits)";\n      }\n\n      context.save();\n      context.translate(5, this.height / 2 - 20);\n      context.rotate(-Math.PI / 2);\n      context.textAlign = "center";\n      context.font = "normal 12px Arial";\n      context.fillText(axis_label, 1, 0);\n      context.restore();\n\n      // draw the insert row labels\n      context.fillText(\'occupancy\', 55, this.info_content_height + 7);\n      if (this.show_inserts) {\n        context.fillText(\'ins. prob.\', 50, 280);\n        context.fillText(\'ins. len.\', 46, 296);\n      }\n    }\n}; \n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/axis.js?')},"./node_modules/biojs-vis-seqlogo/src/canvasSupport.js":
/*!*************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/canvasSupport.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports){eval("var canv_support = null;\n\nmodule.exports = function canvasSupport() {\n  if (!canv_support) {\n    var elem = document.createElement('canvas');\n    canv_support = !!(elem.getContext && elem.getContext('2d'));\n  }\n  return canv_support;\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/canvasSupport.js?")},"./node_modules/biojs-vis-seqlogo/src/colors/aa.js":
/*!*********************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/colors/aa.js ***!
  \*********************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = {\n  'A': '#FF9966',\n  'C': '#009999',\n  'D': '#FF0000',\n  'E': '#CC0033',\n  'F': '#00FF00',\n  'G': '#f2f20c',\n  'H': '#660033',\n  'I': '#CC9933',\n  'K': '#663300',\n  'L': '#FF9933',\n  'M': '#CC99CC',\n  'N': '#336666',\n  'P': '#0099FF',\n  'Q': '#6666CC',\n  'R': '#990000',\n  'S': '#0000FF',\n  'T': '#00FFFF',\n  'V': '#FFCC33',\n  'W': '#66CC66',\n  'Y': '#006600'\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/colors/aa.js?")},"./node_modules/biojs-vis-seqlogo/src/colors/dna.js":
/*!**********************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/colors/dna.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = {\n    'A': '#cbf751',\n    'C': '#5ec0cc',\n    'G': '#ffdf59',\n    'T': '#b51f16',\n    'U': '#b51f16'\n  };\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/colors/dna.js?")},"./node_modules/biojs-vis-seqlogo/src/eventListener.js":
/*!*************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/eventListener.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var $ = __webpack_require__(/*! jbone */ \"./node_modules/jbone/dist/jbone.js\");\n\nmodule.exports = function($el,logo, logo_graphic){\n\n  $el.find('.logo_settings_switch, .logo_settings .close').on('click', function (e) {\n    e.preventDefault();\n    $('.logo_settings').toggle();\n  });\n\n  $el.find('.logo_reset').on('click', function (e) {\n    e.preventDefault();\n    logo.changeZoom({'target': logo.default_zoom});\n  });\n\n  $el.find('.logo_change').on('click', function (e) {\n    e.preventDefault();\n  });\n\n  $el.find('.logo_zoomin').on('click', function (e) {\n    e.preventDefault();\n    logo.changeZoom({'distance': 0.1, 'direction': '+'});\n  });\n\n  $el.find('.logo_zoomout').on('click', function (e) {\n    e.preventDefault();\n    logo.changeZoom({'distance': 0.1, 'direction': '-'});\n  });\n\n  $el.find('.logo_scale').on('change', function (e) {\n    logo.toggleScale(this.value);\n  });\n\n  $el.find('.logo_color').on('change', function (e) {\n    logo.toggleColorscheme(this.value);\n  });\n\n  $el.find('.logo_ali_map').on('change', function (e) {\n    logo.toggleAliMap(this.value);\n  });\n\n  $el.find('.logo_position').on('change', function () {\n    if (!this.value.match(/^\\d+$/m)) {\n      return;\n    }\n    logo.scrollToColumn(this.value, 1);\n  });\n\n  logo_graphic.on('dblclick', function (e) {\n    // need to get coordinates of mouse click\n    console.log(\"dblclick\", logo);\n\n    offset = logo.logo_graphic.offset(),\n    x = parseInt((e.pageX - offset.left), 10),\n\n    // get mouse position in the window\n    window_position = e.pageX - $el.parent().offset().left,\n\n    // get column number\n    col = logo.columnFromCoordinates(x),\n\n    console.log(\"col\", col);\n\n    // choose new zoom level and zoom in.\n    current = logo.zoom;\n\n    if (current < 1) {\n      logo.changeZoom({'target': 1, offset: window_position, column: col});\n    } else {\n      logo.changeZoom({'target': 0.3, offset: window_position, column: col});\n    }\n\n    return;\n  });\n\n  $(document).on($el.attr('id') + \".scrolledTo\", function (e, left, top, zoom) {\n    logo.render({target: left});\n  });\n\n  $(document).on('keydown', function (e) {\n    if (!e.ctrlKey) {\n      if (e.which === 61 || e.which === 107) {\n        zoom += 0.1;\n        logo.changeZoom({'distance': 0.1, 'direction': '+'});\n      }\n      if (e.which === 109 || e.which === 0) {\n        zoom = zoom - 0.1;\n        logo.changeZoom({'distance': 0.1, 'direction': '-'});\n      }\n    }\n  });\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/eventListener.js?")},"./node_modules/biojs-vis-seqlogo/src/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('_ = __webpack_require__(/*! underscore */ "./node_modules/underscore/underscore.js");\n\n//var ConsensusColors = require("./consensusColors.js");\nvar canvasSupport = __webpack_require__(/*! ./canvasSupport.js */ "./node_modules/biojs-vis-seqlogo/src/canvasSupport.js");\nvar render = __webpack_require__(/*! ./render/render.js */ "./node_modules/biojs-vis-seqlogo/src/render/render.js");\nvar Letter = __webpack_require__(/*! ./model/letter.js */ "./node_modules/biojs-vis-seqlogo/src/model/letter.js");\nvar view = __webpack_require__(/*! backbone-viewj */ "./node_modules/backbone-viewj/index.js");\nvar axis = __webpack_require__(/*! ./axis */ "./node_modules/biojs-vis-seqlogo/src/axis.js");\nvar eventListener = __webpack_require__(/*! ./eventListener.js */ "./node_modules/biojs-vis-seqlogo/src/eventListener.js");\nvar settings = __webpack_require__(/*! ./info/settings.js */ "./node_modules/biojs-vis-seqlogo/src/info/settings.js");\n\nvar jbone = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\n\nmodule.exports = view.extend({\n\n  options: {\n    xaxis: true,\n    yaxis: true,\n    height: 300,\n    column_width: 34,\n    debug: true,\n    scale_height_enabled: true,\n    scaled_max: true,\n    zoom_buttons: true,\n    colorscheme: \'default\',\n    data: undefined,\n    start: 1,\n    end: undefined,\n    zoom: 0.4,\n    colors: undefined,\n    divider: false,\n    show_probs: false,\n    divider_step: 5,\n    show_divider: false,\n    border: false,\n    settings: false,\n    scroller: true,\n    positionMarker: true\n  },\n\n  loadDefault: function(options){\n    this.data = options.data;\n\n    // never show the alignment coordinates by default as that would get\n    // really confusing.\n    this.display_ali_map = 0;\n\n    this.alphabet = options.data.alphabet || \'dna\';\n\n    this.start = options.start;\n    //this.end = options.end || this.data.heightArr.length;\n    this.zoom = parseFloat(options.zoom) || 0.4;\n    this.default_zoom = this.zoom;\n\n    this.column_width = options.column_width;\n    this.height = options.height;\n    this.canvas_width = 5000;\n    this.scale_height_enabled = options.scale_height_enabled;\n\n    // this needs to be set to null here so that we can initialise it after\n    // the render function has fired and the width determined.\n    this.scrollme = null;\n\n    this.previous_target = 0;\n    // keeps track of which canvas elements have been drawn and which ones haven\'t.\n    this.rendered = [];\n    this.previous_zoom = 0;\n\n    if(this.data.max_height == undefined){\n      this.data.max_height = this.calcMaxHeight(this.data.heightArr); \n    }\n\n    // only show insert when we actually have the data\n    if(!this.data.insert_probs || !this.data.delete_probs){\n      this.options.show_probs = false;\n    }\n\n    if (options.scaled_max) {\n      this.data.max_height = options.data.max_height_obs || this.data.max_height || 2;\n    } else {\n      this.data.max_height = options.data.max_height_theory || this.data.max_height || 2;\n    }\n\n    if(options.colors){\n      this.changeColors(options.colors);\n    }else{\n      if (this.alphabet === \'aa\') {\n        this.aa_colors = __webpack_require__(/*! ./colors/aa.js */ "./node_modules/biojs-vis-seqlogo/src/colors/aa.js");\n        this.changeColors(this.aa_colors);\n      }else{\n        this.dna_colors = __webpack_require__(/*! ./colors/dna.js */ "./node_modules/biojs-vis-seqlogo/src/colors/dna.js");\n        this.changeColors(this.dna_colors);\n      }\n    }\n  },\n  initialize: function(options) {\n    if (!canvasSupport()) {\n      this.el.textContent = "Your browser doesn\'t support canvas.";\n      return;\n    }\n    if(options.data == undefined){\n      this.el.textContent = "No data added.";\n    }\n\n    // load default settings\n    _.extend(this.options,options);\n    var opt = this.options;\n    this.loadDefault(opt);\n\n    if(!this.options.show_probs){\n      this.info_content_height = this.height;\n    }else{\n      // turn off the insert rows if the hmm used the observed or weighted processing flags.\n      if (this.data.processing && /^observed|weighted/.test(this.data.processing)) {\n        this.show_inserts = 0;\n        this.info_content_height = this.height - 14;\n      } else {\n        this.show_inserts = 1;\n        this.info_content_height = this.height - 44;\n      }\n    }\n    this.$el = jbone(this.el);\n\n    this.initDivs();\n\n    if(this.options.settings){\n      var form = settings(this,opt);\n      this.$el.append(form);\n    }\n\n    eventListener(this.$el,this, this.logo_graphic);\n    /*\n       if (opt.columnInfo) {\n       var columnInfo = require("./info/column_info.js");\n       columnInfo(this);\n       }\n       */\n\n  },\n  initDivs: function(){\n    var logo_graphic = mk("div");\n    logo_graphic.className = "logo_graphic";\n    this.logo_graphic = jbone(logo_graphic);\n\n    var container = mk("div");\n    container.className = "logo_container";\n    container.style.height = this.height;\n    this.container = jbone(container);\n\n    this.container.append(logo_graphic);\n\n    // add some internal divs for scrolling etc.\n    this.$el.append(container);\n\n    if(this.options.divider){\n      var divider = mk("div");\n      divider.className = "logo_divider";\n      this.$el.append(divider);\n    }\n\n    this.dom_element = jbone(logo_graphic);\n    this.called_on = this.$el;\n\n    if(this.options.xaxis){\n      axis.render_x_axis_label.call(this);\n    }\n    if(this.options.yaxis){\n      axis.render_y_axis_label.call(this);\n    }else{\n      this.container[0].style.marginLeft = "0px";\n    }\n\n  },\n\n  render: function(){\n    render.call(this); \n    return this;\n  },\n\n  changeColors: function(colors){\n    this.colors = colors;\n    var bUseColorObject = (colors != undefined && colors.type != undefined);\n    if(bUseColorObject){\n      this.colorscheme = "dynamic";\n    }\n    this.buildAlphabet();\n  },\n\n  buildAlphabet: function(){\n    /*\n       if (this.alphabet === \'aa\') {\n       var probs_arr = this.data.probs_arr;\n       if (probs_arr) {\n       var cc = new ConsensusColors();\n       this.cmap = cc.color_map(probs_arr);\n       }\n       }\n       */\n\n    //build the letter canvases\n    this.letters = {};\n    var colors = this.colors;\n    if(this.colorscheme == "dynamic"){\n      var tColors = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(\'\');\n      colors = {};\n      tColors.forEach(function(e){\n        colors[e] = "";\n      });\n    }\n    for (var letter in colors) {\n      if (colors.hasOwnProperty(letter)) {\n        var loptions = {color: colors[letter]};\n        this.letters[letter] = new Letter(letter, loptions);\n      }\n    }\n  },\n\n  toggleColorscheme: function (scheme) {\n    // work out the current column we are on so we can return there\n    var col_total = this.currentColumn();\n\n    if (scheme) {\n      if (scheme === \'default\') {\n        this.colorscheme = \'default\';\n      } else {\n        this.colorscheme = \'consensus\';\n      }\n    } else {\n      if (this.colorscheme === \'default\') {\n        this.colorscheme = \'consensus\';\n      } else {\n        this.colorscheme = \'default\';\n      }\n    }\n\n    // reset the rendered counter so that each section will re-render\n    // with the new heights\n    this.rendered = [];\n\n    // re-flow and re-render the content\n    this.scrollme.reflow();\n    //scroll off by one to force a render of the canvas.\n    this.scrollToColumn(col_total + 1);\n    //scroll back to the location we started at.\n    this.scrollToColumn(col_total);\n  },\n\n  toggleScale: function (scale) {\n    // work out the current column we are on so we can return there\n    var col_total = this.currentColumn();\n\n    if (scale) {\n      if (scale === \'obs\') {\n        this.data.max_height = this.data.max_height_obs;\n      } else {\n        this.data.max_height = this.data.max_height_theory;\n      }\n    } else {\n      // toggle the max height\n      if (this.data.max_height === this.data.max_height_obs) {\n        this.data.max_height = this.data.max_height_theory;\n      } else {\n        this.data.max_height = this.data.max_height_obs;\n      }\n    }\n    // reset the rendered counter so that each section will re-render\n    // with the new heights\n    this.rendered = [];\n    //update the y-axis\n    if(this.logoYAxis){\n      this.logoYAxis.remove();\n      //this.called_on.find(\'.logo_yaxis\').remove();\n    }\n    axis.render_y_axis_label.call(this);\n\n    // re-flow and re-render the content\n    this.scrollme.reflow();\n    //scroll off by one to force a render of the canvas.\n    this.scrollToColumn(col_total + 1);\n    //scroll back to the location we started at.\n    this.scrollToColumn(col_total);\n  },\n  toggleAliMap: function (coords) {\n    // work out the current column we are on so we can return there\n    var col_total = this.currentColumn();\n\n    if (coords) {\n      if (coords === \'model\') {\n        this.display_ali_map = 0;\n      } else {\n        this.display_ali_map = 1;\n      }\n    } else {\n      // toggle the max height\n      if (this.display_ali_map === 1) {\n        this.display_ali_map = 0;\n      } else {\n        this.display_ali_map = 1;\n      }\n    }\n    axis.render_x_axis_label(this);\n\n    // reset the rendered counter so that each section will re-render\n    // with the new heights\n    this.rendered = [];\n\n    // re-flow and re-render the content\n    this.scrollme.reflow();\n    //scroll off by one to force a render of the canvas.\n    this.scrollToColumn(col_total + 1);\n    //scroll back to the location we started at.\n    this.scrollToColumn(col_total);\n  },\n\n  currentColumn: function () {\n    var before_left = this.scrollme.scroller.getValues().left,\n    col_width = (this.column_width * this.zoom),\n    col_count = before_left / col_width,\n    half_visible_columns = (this.container.width() / col_width) / 2,\n    col_total = Math.ceil(col_count + half_visible_columns);\n    return col_total;\n  },\n\n  changeZoom: function (options) {\n    var zoom_level = 0.3,\n    expected_width = null;\n    if (options.target) {\n      zoom_level = options.target;\n    } else if (options.distance) {\n      zoom_level = (parseFloat(this.zoom) - parseFloat(options.distance)).toFixed(1);\n      if (options.direction === \'+\') {\n        zoom_level = (parseFloat(this.zoom) + parseFloat(options.distance)).toFixed(1);\n      }\n    }\n\n    if (zoom_level > 1) {\n      zoom_level = 1;\n    } else if (zoom_level < 0.1) {\n      zoom_level = 0.1;\n    }\n\n    // see if we need to zoom or not\n    expected_width = (this.logo_graphic.width() * zoom_level) / this.zoom;\n    if (expected_width > this.container.width()) {\n      // if a center is not specified, then use the current center of the view\n      if (!options.column) {\n        //work out my current position\n        var col_total = this.currentColumn();\n\n        this.zoom = zoom_level;\n        this.render({zoom: this.zoom});\n        this.scrollme.reflow();\n\n        //scroll to previous position\n        this.scrollToColumn(col_total);\n      } else { // center around the mouse click position.\n        this.zoom = zoom_level;\n        this.render({zoom: this.zoom});\n        this.scrollme.reflow();\n\n        var coords = this.coordinatesFromColumn(options.column);\n        this.scrollme.scroller.scrollTo(coords - options.offset);\n      }\n    }\n    return this.zoom;\n\n  },\n\n  columnFromCoordinates: function (x) {\n    var column = Math.ceil(x / (this.column_width * this.zoom));\n    return column;\n  },\n\n  coordinatesFromColumn: function (col) {\n    var new_column = col - 1,\n    x = (new_column  * (this.column_width * this.zoom)) + ((this.column_width * this.zoom) / 2);\n    return x;\n  },\n\n  scrollToColumn: function (num, animate) {\n    var half_view = (this.logo_container.width() / 2),\n    new_left = this.coordinatesFromColumn(num);\n    this.scrollme.scroller.scrollTo(new_left - half_view, 0, animate);\n  },\n  calcMaxHeight: function(columns){\n    // loops over all columns and return the max height seen \n    return columns.reduce(function(m,c){\n      var col = 0;\n      for(var k in c){\n        col += c[k];\n      }\n      return col > m ? col : m;\n    },0);\n  }\n\n\n});\n\nvar mk = function(name){\n  return document.createElement(name);\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/index.js?')},"./node_modules/biojs-vis-seqlogo/src/info/settings.js":
/*!*************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/info/settings.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('var $ = __webpack_require__(/*! jbone */ "./node_modules/jbone/dist/jbone.js");\n\nmodule.exports = function(logo,options){\n  var form = $(\'<form class="logo_form"><fieldset><label for="position">Column number</label>\' +\n               \'<input type="text" name="position" class="logo_position"></input>\' +\n               \'<button class="button logo_change">Go</button></fieldset>\' +\n               \'</form>\');\n\n  var settings = $(\'<div class="logo_settings"></div>\');\n  settings.append(\'<span class="close">x</span>\');\n\n\n\n  /* we don\'t want to toggle if the max height_obs is greater than max theoretical\n   * as letters will fall off the top.\n   */\n  if (logo.scale_height_enabled && (logo.data.max_height_obs < logo.data.max_height_theory)) {\n    var obs_checked = \'\',\n    theory_checked = \'\',\n    theory_help = \'\',\n    obs_help = \'\';\n\n    if (logo.data.max_height_obs === logo.data.max_height) {\n      obs_checked = \'checked\';\n    } else {\n      theory_checked = \'checked\';\n    }\n  }\n\n\n\n  var scale_controls = \'<fieldset><legend>Scale</legend>\' +\n    \'<label><input type="radio" name="scale" class="logo_scale" value="obs" \' + obs_checked +\n    \'/>Maximum Observed \' + obs_help +\n    \'</label></br>\' +\n    \'<label><input type="radio" name="scale" class="logo_scale" value="theory" \' + theory_checked +\n    \'/>Maximum Theoretical \' + theory_help +\n    \'</label>\' +\n    \'</fieldset>\';\n\n  settings.append(scale_controls);\n\n  if (logo.data.height_calc !== \'score\' && logo.data.alphabet === \'aa\' && logo.data.probs_arr) {\n\n    var def_color = null,\n    con_color = null,\n    def_help = \'\',\n    con_help = \'\';\n\n    if (logo.colorscheme === \'default\') {\n      def_color = \'checked\';\n    } else {\n      con_color = \'checked\';\n    };\n\n    if (options.help) {\n      def_help = \'<a class="help" href="/help#colors_default" title="Each letter receives its own color.">\' +\n        \'<span aria-hidden="true" data-icon="?"></span><span class="reader-text">help</span></a>\';\n      con_help = \'<a class="help" href="/help#colors_consensus" title="Letters are colored as in Clustalx and Jalview, with colors depending on composition of the column.">\' +\n        \'<span aria-hidden="true" data-icon="?"></span><span class="reader-text">help</span></a>\';\n    }\n\n    var color_controls = \'<fieldset><legend>Color Scheme</legend>\' +\n      \'<label><input type="radio" name="color" class="logo_color" value="default" \' + def_color +\n      \'/>Default \' + def_help +\n      \'</label></br>\' +\n      \'<label><input type="radio" name="color" class="logo_color" value="consensus" \' + con_color +\n      \'/>Consensus Colors \' + con_help +\n      \'</label>\' +\n      \'</fieldset>\';\n    settings.append(color_controls);\n  }\n\n\n  if (logo.data.ali_map) {\n    var mod_checked = null,\n    ali_checked = null,\n    mod_help = \'\',\n    ali_help = \'\';\n\n    if (logo.display_ali_map === 0) {\n      mod_checked = \'checked\';\n    } else {\n      ali_checked = \'checked\';\n    }\n\n    if (options.help) {\n      mod_help = \'<a class="help" href="/help#coords_model" title="The coordinates along the top of the plot show the model position.">\' +\n        \'<span aria-hidden="true" data-icon="?"></span><span class="reader-text">help</span></a>\';\n      ali_help = \'<a class="help" href="/help#coords_ali" title="The coordinates along the top of the plot show the column in the alignment associated with the model">\' +\n        \'<span aria-hidden="true" data-icon="?"></span><span class="reader-text">help</span></a>\';\n    }\n\n    var ali_controls = \'<fieldset><legend>Coordinates</legend>\' +\n      \'<label><input type="radio" name="coords" class="logo_ali_map" value="model" \' + mod_checked +\n      \'/>Model \' + mod_help +\n      \'</label></br>\' +\n      \'<label><input type="radio" name="coords" class="logo_ali_map" value="alignment" \' + ali_checked +\n      \'/>Alignment \' + ali_help +\n      \'</label>\' +\n      \'</fieldset>\';\n    settings.append(ali_controls);\n  }\n\n\n  var controls = $(\'<div class="logo_controls"></div>\');\n  if (logo.zoom_enabled) {\n    controls.append(\'<button class="logo_zoomout button">-</button>\' +\n                    \'<button class="logo_zoomin button">+</button>\');\n  }\n\n  if (settings.children().length > 0) {\n    controls.append(\'<button class="logo_settings_switch button">Settings</button>\');\n    controls.append(settings);\n  }\n\n  form.append(controls);\n\n  return form;\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/info/settings.js?')},"./node_modules/biojs-vis-seqlogo/src/model/letter.js":
/*!************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/model/letter.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = function Letter(letter, options) {\n  options = options || {};\n  this.value = letter;\n  this.width = parseInt(options.width, 10) || 100;\n\n  //W is 30% wider than the other letters, so need to make sure\n  //it gets modified accordingly.\n  if (this.value === 'W') {\n    this.width += (this.width * 30) / 100;\n  }\n\n  this.height = parseInt(options.height, 10) || 100;\n\n  this.color = options.color || '#000000';\n  // if the height and width are changed from the default, then\n  // this will also need to be changed as it cant be calculated\n  // dynamically.\n  this.fontSize = options.fontSize || 138;\n\n  this.scaled = function () { };\n\n  this.draw = function (ext_ctx, target_height, target_width, x, y, color) {\n    var h_ratio = target_height / this.height,\n    w_ratio = target_width / this.width,\n    prev_font = ext_ctx.font;\n    ext_ctx.transform(w_ratio, 0, 0, h_ratio, x, y);\n    ext_ctx.fillStyle = color || this.color;\n    ext_ctx.textAlign = \"center\";\n    ext_ctx.font = \"bold \" + this.fontSize + \"px Arial\";\n\n    ext_ctx.fillText(this.value, 0, 0);\n    //restore the canvas settings\n    ext_ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ext_ctx.fillStyle = '#000000';\n    ext_ctx.font = prev_font;\n  };\n\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/model/letter.js?")},"./node_modules/biojs-vis-seqlogo/src/render/draw/border.js":
/*!******************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/render/draw/border.js ***!
  \******************************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = function draw_border(context, y, width) {\n  context.beginPath();\n  context.moveTo(0, y);\n  context.lineTo(width, y);\n  context.lineWidth = 1;\n  context.strokeStyle = "#999999";\n  context.stroke();\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/render/draw/border.js?')},"./node_modules/biojs-vis-seqlogo/src/render/draw/column_number.js":
/*!*************************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/render/draw/column_number.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = function draw_column_number(context, x, y, col_width, col_num, fontsize, right) {\n  context.font = fontsize + "px Arial";\n  context.textAlign = right ? "right" : "center";\n  context.fillStyle = "#666666";\n  context.fillText(col_num, x + (col_width / 2), y);\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/render/draw/column_number.js?')},"./node_modules/biojs-vis-seqlogo/src/render/draw/ticks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/render/draw/ticks.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = function draw_ticks(context, x, y, height, color) {\n  color = color || '#999999';\n  context.beginPath();\n  context.moveTo(x, y);\n  context.lineTo(x, y + height);\n  context.lineWidth = 1;\n  context.strokeStyle = color;\n  context.stroke();\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/render/draw/ticks.js?")},"./node_modules/biojs-vis-seqlogo/src/render/render.js":
/*!*************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/render/render.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var renderWithText = __webpack_require__(/*! ./render_with_text.js */ \"./node_modules/biojs-vis-seqlogo/src/render/render_with_text.js\");\nvar renderWithRect = __webpack_require__(/*! ./render_with_rects.js */ \"./node_modules/biojs-vis-seqlogo/src/render/render_with_rects.js\");\nvar jbone = __webpack_require__(/*! jbone */ \"./node_modules/jbone/dist/jbone.js\");\n\n// the main render function that draws the logo based on the provided options.\nmodule.exports = function (options) {\n  if (!this.data) {\n    return;\n  }\n  options    = options || {};\n  var zoom   = options.zoom || this.zoom,\n  target = options.target || 1,\n  scaled = options.scaled || null;\n  var parent_width = this.dom_element.parent().attr('width'),\n  max_canvas_width = 1,\n  end = null,\n  start = null,\n  i = 0;\n\n  /*\n  if (target === this.previous_target) {\n    return;\n  }\n  */\n\n  this.previous_target = target;\n\n\n  if (options.start) {\n    this.start = options.start;\n  }\n  if (options.end) {\n    this.end = options.end;\n  }\n\n  if (zoom <= 0.1) {\n    zoom = 0.1;\n  } else if (zoom >= 1) {\n    zoom = 1;\n  }\n\n  this.zoom = zoom;\n\n  end = this.end || this.data.heightArr.length;\n  start = this.start || 1;\n  end     = (end > this.data.heightArr.length) ? this.data.heightArr.length : end;\n  end     = (end < start) ? start : end;\n\n  start     = (start > end) ? end : start;\n  start     = (start > 1) ? start : 1;\n\n  this.y = this.height - 20;\n  // Check to see if the logo will fit on the screen at full zoom.\n  this.max_width = this.column_width * ((end - start) + 1);\n  // If it fits then zoom out and disable zooming.\n  if (parent_width > this.max_width) {\n    zoom = 1;\n    this.zoom_enabled = false;\n  }\n  this.zoom = zoom;\n\n  this.zoomed_column = this.column_width * zoom;\n  this.total_width = this.zoomed_column * ((end - start) + 1);\n\n  // If zoom is not maxed and we still aren't filling the window\n  // then ramp up the zoom level until it fits, then disable zooming.\n  // Then we get a decent logo with out needing to zoom in or out.\n  if (zoom < 1) {\n    while (this.total_width < parent_width) {\n      this.zoom += 0.1;\n      this.zoomed_column = this.column_width * this.zoom;\n      this.total_width = this.zoomed_column * ((end - start) + 1);\n      this.zoom_enabled = false;\n      if (zoom >= 1) {\n        break;\n      }\n    }\n  }\n\n  if (target > this.total_width) {\n    target = this.total_width;\n  }\n  this.dom_element.attr({'width': this.total_width + 'px'}).css({width: this.total_width + 'px'});\n\n  this.canvas_width = this.total_width;\n  var canvas_count = Math.ceil(this.total_width / this.canvas_width);\n  this.columns_per_canvas = Math.ceil(this.canvas_width / this.zoomed_column);\n\n\n  if (this.previous_zoom !== this.zoom) {\n    this.dom_element.find('canvas').remove();\n    this.previous_zoom = this.zoom;\n    this.rendered = [];\n  }\n\n  this.canvases = [];\n  this.contexts = [];\n\n\n  for (i = 0; i < canvas_count; i++) {\n\n    var split_start = (this.columns_per_canvas * i) + start,\n    split_end   = split_start + this.columns_per_canvas - 1;\n    if (split_end > end) {\n      split_end = end;\n    }\n\n    var adjusted_width = ((split_end - split_start) + 1) * this.zoomed_column;\n\n    if (adjusted_width > max_canvas_width) {\n      max_canvas_width = adjusted_width;\n    }\n\n    var canv_start = max_canvas_width * i,\n    canv_end = canv_start + adjusted_width;\n\n    if (target < canv_end + (canv_end / 2) && target > canv_start - (canv_start / 2)) {\n      // Check that we aren't redrawing the canvas and if not, then attach it and draw.\n      //if (this.rendered[i] !== 1) {\n\n        this.canvases[i] = attach_canvas(this.dom_element, this.height, adjusted_width, i, max_canvas_width);\n        this.contexts[i] = this.canvases[i].getContext('2d');\n        this.contexts[i].setTransform(1, 0, 0, 1, 0, 0);\n        this.contexts[i].clearRect(0, 0, adjusted_width, this.height);\n        this.contexts[i].fillStyle = \"#ffffff\";\n        this.contexts[i].fillRect(0, 0, canv_end, this.height);\n\n\n        if (this.zoomed_column > 12) {\n          var fontsize = parseInt(10 * zoom, 10);\n          fontsize = (fontsize > 10) ? 10 : fontsize;\n          if (this.debug) {\n            renderWithRect.call(this,split_start, split_end, i, 1);\n          }\n          renderWithText.call(this,split_start, split_end, i, fontsize);\n        } else {\n          renderWithRect.call(this,split_start, split_end, i);\n        }\n        //this.rendered[i] = 1;\n      //}\n    }\n\n  }\n\n  // check if the scroller object has been initialised and if not then do so.\n  // we do this here as opposed to at object creation, because we need to\n  // make sure the logo has been rendered and the width is correct, otherwise\n  // we get a weird initial state where the canvas will bounce back to the\n  // beginning the first time it is scrolled, because it thinks it has a\n  // width of 0.\n  if (!this.scrollme && this.options.scroller) {\n    this.scrollme = new EasyScroller(this.dom_element[0], {\n      scrollingX: 1,\n      scrollingY: 0,\n      eventTarget: this.called_on\n    });\n  }\n\n  if (target !== 1) {\n    this.scrollme.reflow();\n  }\n  return;\n};\n\n\nfunction attach_canvas(DOMid, height, width, id, canv_width) {\n  var canvas = jbone(DOMid).find('#canv_' + id);\n\n  if (!canvas.length) {\n    jbone(DOMid).append('<canvas class=\"canvas_logo\" id=\"canv_' + id + '\"  height=\"' + height + '\" width=\"' + width + '\" style=\"left:' + canv_width * id + 'px\"></canvas>');\n    canvas = jbone(DOMid).find('#canv_' + id);\n  }\n\n  jbone(canvas).attr('width', width).attr('height', height);\n\n  return canvas[0];\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/render/render.js?")},"./node_modules/biojs-vis-seqlogo/src/render/render_with_rects.js":
/*!************************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/render/render_with_rects.js ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var draw_border = __webpack_require__(/*! ./draw/border.js */ \"./node_modules/biojs-vis-seqlogo/src/render/draw/border.js\");\nvar draw_ticks = __webpack_require__(/*! ./draw/ticks.js */ \"./node_modules/biojs-vis-seqlogo/src/render/draw/ticks.js\");\nvar draw_column_number = __webpack_require__(/*! ./draw/column_number.js */ \"./node_modules/biojs-vis-seqlogo/src/render/draw/column_number.js\");\n\nmodule.exports = function (start, end, context_num, borders) {\n  var x = 0,\n  column_num = start,\n  column_label = null,\n  i = 0,\n  top_height = Math.abs(this.data.max_height),\n  bottom_height = Math.abs(this.data.min_height_obs),\n  total_height = top_height + bottom_height,\n  top_percentage    = Math.round((Math.abs(this.data.max_height) * 100) / total_height),\n  //convert % to pixels\n  top_pix_height = Math.round((this.info_content_height * top_percentage) / 100),\n  bottom_pix_height = this.info_content_height - top_pix_height,\n  mod = 10;\n\n\n  for (i = start; i <= end; i++) {\n    if (this.data.mmline && this.data.mmline[i - 1] === 1) {\n      this.contexts[context_num].fillStyle = '#cccccc';\n      this.contexts[context_num].fillRect(x, 10, this.zoomed_column, this.height - 40);\n    } else {\n      var column = this.data.heightArr[i - 1],\n      previous_height = 0,\n      previous_neg_height = top_pix_height,\n      letters = column.length,\n      j = 0;\n      for(var j in column){\n        var values = [j,column[j]];\n        if (values[1] > 0.01) {\n          var letter_height = parseFloat(values[1]) / this.data.max_height,\n          x_pos = x,\n          glyph_height = (this.info_content_height - 2) * letter_height,\n          y_pos = (this.info_content_height - 2) - previous_height - glyph_height,\n          color = null;\n\n\n          if(this.colorscheme === 'dynamic'){\n            color = this.colors.getColor(values[0], {pos: i - 1} )\n          }else{\n            if(this.colorscheme === 'consensus') {\n              color = this.cmap[i - 1][values[0]] || \"#7a7a7a\";\n            } else {\n              color = this.colors[values[0]];\n            }\n          }\n\n          if (borders) {\n            this.contexts[context_num].strokeStyle = color;\n            this.contexts[context_num].strokeRect(x_pos, y_pos, this.zoomed_column, glyph_height);\n          } else {\n            this.contexts[context_num].fillStyle = color;\n            this.contexts[context_num].fillRect(x_pos, y_pos, this.zoomed_column, glyph_height);\n          }\n\n          previous_height = previous_height + glyph_height;\n        }\n      }\n    }\n\n\n    if (this.zoom < 0.2) {\n      mod = 20;\n    } else if (this.zoom < 0.3) {\n      mod = 10;\n    }\n\n    if(this.options.positionMarker){\n      if (i % mod === 0) {\n        // draw column dividers\n        if(this.options.show_probs){\n          draw_ticks(this.contexts[context_num], x + this.zoomed_column, this.height - 30, parseFloat(this.height), '#dddddd');\n        }\n        // draw top ticks\n        draw_ticks(this.contexts[context_num], x + this.zoomed_column, 0, 5);\n\n        // if ali_coordinates exist and toggle is set then display the\n        // alignment coordinates and not the model coordinates.\n        if (this.display_ali_map) {\n          column_label = this.data.ali_map[i - 1];\n        } else {\n          column_label = column_num;\n        }\n        // draw column numbers\n        draw_column_number(this.contexts[context_num], x - 2,  10, this.zoomed_column, column_label, 10, true);\n      }\n\n    }\n\n\n    // draw insert probabilities/lengths\n    if(this.options.show_probs){\n      draw_small_insert(\n        this.contexts[context_num],\n        x,\n        this.height - 42,\n        this.zoomed_column,\n        this.data.insert_probs[i - 1],\n        this.data.insert_lengths[i - 1],\n        this.data.delete_probs[i - 1],\n        this.show_inserts\n      );\n    }\n\n    if(this.options.show_probs){\n      // draw other dividers\n      if (this.show_inserts) {\n        draw_border(this.contexts[context_num], this.height - 45, this.total_width);\n      } else {\n        draw_border(this.contexts[context_num], this.height - 15, this.total_width);\n      }\n    }\n\n    if(this.options.border){\n      draw_border(this.contexts[context_num], 0, this.total_width);\n    }\n\n    x += this.zoomed_column;\n    column_num++;\n  }\n\n};\n\n\nfunction draw_small_insert(context, x, y, col_width, in_odds, in_length, del_odds, show_inserts) {\n  var fill = \"#ffffff\";\n  if (show_inserts) {\n    if (in_odds > 0.1) {\n      fill = '#d7301f';\n    } else if (in_odds > 0.05) {\n      fill = '#fc8d59';\n    } else if (in_odds > 0.03) {\n      fill = '#fdcc8a';\n    }\n    context.fillStyle = fill;\n    context.fillRect(x, y + 15, col_width, 10);\n\n    fill = \"#ffffff\";\n    // draw insert length\n    if (in_length > 9) {\n      fill = '#d7301f';\n    } else if (in_length > 7) {\n      fill = '#fc8d59';\n    } else if (in_length > 4) {\n      fill = '#fdcc8a';\n    }\n    context.fillStyle = fill;\n    context.fillRect(x, y + 30, col_width, 10);\n  } else {\n    y  = y + 30;\n  }\n\n  fill = \"#ffffff\";\n  // draw delete odds\n  if (del_odds < 0.75) {\n    fill = '#2171b5';\n  } else if (del_odds < 0.85) {\n    fill = '#6baed6';\n  } else if (del_odds < 0.95) {\n    fill = '#bdd7e7';\n  }\n  context.fillStyle = fill;\n  context.fillRect(x, y, col_width, 10);\n}\n\n\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/render/render_with_rects.js?")},"./node_modules/biojs-vis-seqlogo/src/render/render_with_text.js":
/*!***********************************************************************!*\
  !*** ./node_modules/biojs-vis-seqlogo/src/render/render_with_text.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var draw_border = __webpack_require__(/*! ./draw/border.js */ \"./node_modules/biojs-vis-seqlogo/src/render/draw/border.js\");\nvar draw_ticks = __webpack_require__(/*! ./draw/ticks.js */ \"./node_modules/biojs-vis-seqlogo/src/render/draw/ticks.js\");\nvar draw_column_number = __webpack_require__(/*! ./draw/column_number.js */ \"./node_modules/biojs-vis-seqlogo/src/render/draw/column_number.js\");\n\nmodule.exports = function (start, end, context_num, fontsize) {\n  var x = 0,\n  column_num = start,\n  column_label = null,\n  i = 0,\n  top_height = Math.abs(this.data.max_height),\n  bottom_height = (isNaN(this.data.min_height_obs)) ? 0 : parseInt(this.data.min_height_obs, 10),\n  total_height = top_height + Math.abs(bottom_height),\n  top_percentage    = Math.round((Math.abs(this.data.max_height) * 100) / total_height),\n  //convert % to pixels\n  top_pix_height = Math.round((this.info_content_height * top_percentage) / 100),\n  bottom_pix_height = this.info_content_height - top_pix_height,\n  // this is used to transform the 256px high letters into the correct size\n  // when displaying negative values, so that they fit above the 0 line.\n  top_pix_conversion = top_pix_height / this.info_content_height,\n  bottom_pix_conversion = bottom_pix_height / this.info_content_height;\n\n  // add 3 extra columns so that numbers don't get clipped at the end of a canvas\n  // that ends before a large column. DF0000830 was suffering at zoom level 0.6,\n  // column 2215. This adds a little extra overhead, but is the easiest fix for now.\n  if (end + 3 <= this.end) {\n    end += 3;\n  }\n\n  for (i = start; i <= end; i++) {\n    if (this.data.mmline && this.data.mmline[i - 1] === 1) {\n      this.contexts[context_num].fillStyle = '#cccccc';\n      this.contexts[context_num].fillRect(x, 10, this.zoomed_column, this.height - 40);\n    } else {\n      var column = this.data.heightArr[i - 1],\n      col_positions = [];\n      if (column) {\n        var previous_height = 0,\n        letters = column.length,\n        previous_neg_height = top_pix_height,\n        j = 0,\n        color = null;\n\n        for(var j in column){\n          var letter = column[j],\n          values = [j,letter];\n          var x_pos = x + (this.zoomed_column / 2),\n          letter_height = null;\n\n          // we don't render anything with a value between 0 and 0.01. These\n          // letters would be too small to be meaningful on any scale, so we\n          // just squash them out.\n          if (values[1] > 0.01) {\n            letter_height = parseFloat(values[1]) / this.data.max_height;\n            var y_pos = (this.info_content_height - 2) - previous_height,\n            glyph_height = (this.info_content_height - 2) * letter_height;\n\n            col_positions[j] = [glyph_height, this.zoomed_column, x_pos, y_pos];\n            previous_height = previous_height + glyph_height;\n          }\n        }\n\n        // render the letters in reverse order so that the larger letters on the top\n        // don't clobber the smaller letters below them.\n        //for (j = letters; j >= 0; j--) {\n        for(var j in column){\n          if (col_positions[j] && this.letters[j]) {\n\n            if(this.colorscheme === 'dynamic'){\n              color = this.colors.getColor(j, {pos: i - 1} );\n            }else{\n              if (this.colorscheme === 'consensus') {\n                color = this.cmap[i - 1][j] || \"#7a7a7a\";\n              } else {\n                color = null;\n              }\n            }\n            this.letters[j].draw(this.contexts[context_num], col_positions[j][0], col_positions[j][1], col_positions[j][2], col_positions[j][3], color);\n          }\n        }\n      }\n    }\n\n\n    // if ali_coordinates exist and toggle is set then display the\n    // alignment coordinates and not the model coordinates.\n    if (this.display_ali_map) {\n      column_label = this.data.ali_map[i - 1];\n    } else {\n      column_label = column_num;\n    }\n\n    if(this.options.show_divider){\n      if (this.zoom < 0.7) {\n        if (i % this.options.divider_step === 0) {\n          draw_column_divider(this,{\n            context_num : context_num,\n            x : x,\n            fontsize: 10,\n            column_num: column_label,\n            ralign: true\n          });\n        }\n      } else {\n        draw_column_divider(this,{\n          context_num : context_num,\n          x : x,\n          fontsize: fontsize,\n          column_num: column_label\n        });\n      }\n    }\n\n    if(this.options.show_probs){\n      draw_delete_odds(this.contexts[context_num], x, this.height, this.zoomed_column, this.data.delete_probs[i - 1], fontsize, this.show_inserts);\n      //draw insert length ticks\n      draw_ticks(this.contexts[context_num], x, this.height - 15, 5);\n      if (this.show_inserts) {\n        draw_insert_odds(this.contexts[context_num], x, this.height, this.zoomed_column, this.data.insert_probs[i - 1], fontsize);\n        draw_insert_length(this.contexts[context_num], x, this.height - 5, this.zoomed_column, this.data.insert_lengths[i - 1], fontsize);\n\n        // draw delete probability ticks\n        draw_ticks(this.contexts[context_num], x, this.height - 45, 5);\n        // draw insert probability ticks\n        draw_ticks(this.contexts[context_num], x, this.height - 30, 5);\n      }\n\n    }\n\n    x += this.zoomed_column;\n    column_num++;\n  }\n\n\n  if(this.options.show_probs){\n    // draw other dividers\n    if (this.show_inserts) {\n      draw_border(this.contexts[context_num], this.height - 30, this.total_width);\n      draw_border(this.contexts[context_num], this.height - 45, this.total_width);\n    }\n    draw_border(this.contexts[context_num], this.height - 15, this.total_width);\n  }\n  if(this.options.border){\n    draw_border(this.contexts[context_num], 0, this.total_width);\n  }\n};\n\n\nfunction draw_delete_odds(context, x, height, col_width, text, fontsize, show_inserts) {\n  var y        = height - 4,\n  fill     = '#ffffff',\n  textfill = '#555555';\n\n  if (show_inserts) {\n    y = height - 35;\n  }\n\n  if (text < 0.75) {\n    fill     = '#2171b5';\n    textfill = '#ffffff';\n  } else if (text < 0.85) {\n    fill = '#6baed6';\n  } else if (text < 0.95) {\n    fill = '#bdd7e7';\n  }\n\n  draw_rect_with_text(context, x, y, text, fontsize, col_width, fill, textfill);\n}\n\nfunction draw_rect_with_text(context, x, y, text, fontsize, col_width, fill, textfill) {\n  context.font = fontsize + \"px Arial\";\n  context.fillStyle = fill;\n  context.fillRect(x, y - 10, col_width, 14);\n  context.textAlign = \"center\";\n  context.fillStyle = textfill;\n  context.fillText(text, x + (col_width / 2), y);\n}\n\nfunction draw_column_divider(inst, opts) {\n  var div_x = opts.ralign ? opts.x + inst.zoomed_column : opts.x,\n  num_x = opts.ralign ? opts.x + 2 : opts.x;\n  // draw column dividers\n  draw_ticks(inst.contexts[opts.context_num], div_x, inst.height - 30, -30 - inst.height, '#dddddd');\n  // draw top ticks\n  draw_ticks(inst.contexts[opts.context_num], div_x, 0, 5);\n  // draw column numbers\n  draw_column_number(inst.contexts[opts.context_num], num_x, 10, inst.zoomed_column, opts.column_num, opts.fontsize, opts.ralign);\n};\n\n\n\nfunction draw_insert_odds(context, x, height, col_width, text, fontsize) {\n  var y        = height - 20,\n  fill     = '#ffffff',\n  textfill = '#555555';\n\n  if (text > 0.1) {\n    fill     = '#d7301f';\n    textfill = '#ffffff';\n  } else if (text > 0.05) {\n    fill = '#fc8d59';\n  } else if (text > 0.03) {\n    fill = '#fdcc8a';\n  }\n\n  draw_rect_with_text(context, x, y, text, fontsize, col_width, fill, textfill);\n\n  //draw vertical line to indicate where the insert would occur\n  if (text > 0.03) {\n    draw_ticks(context, x + col_width, height - 30, -30 - height, fill);\n  }\n}\nfunction draw_insert_length(context, x, y, col_width, text, fontsize) {\n  var fill = '#ffffff',\n  textfill = '#555555';\n\n  if (text > 9) {\n    fill     = '#d7301f';\n    textfill = '#ffffff';\n  } else if (text > 7) {\n    fill = '#fc8d59';\n  } else if (text > 4) {\n    fill = '#fdcc8a';\n  }\n  draw_rect_with_text(context, x, y, text, fontsize, col_width, fill, textfill);\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/biojs-vis-seqlogo/src/render/render_with_text.js?")},"./node_modules/blueimp_canvastoblob/index.js":
/*!****************************************************!*\
  !*** ./node_modules/blueimp_canvastoblob/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval("/*\n * JavaScript Canvas to Blob 2.0.5\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\nvar CanvasPrototype = window.HTMLCanvasElement &&\nwindow.HTMLCanvasElement.prototype,\n  hasBlobConstructor = window.Blob && (function () {\n    try {\n      return Boolean(new Blob());\n    } catch (e) {\n      return false;\n    }\n  }()),\n  hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array &&\n  (function () {\n    try {\n      return new Blob([new Uint8Array(100)]).size === 100;\n    } catch (e) {\n      return false;\n    }\n  }()),\n  BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder ||\n  window.MozBlobBuilder || window.MSBlobBuilder,\n  dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob &&\n  window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n    var byteString,\n    arrayBuffer,\n    intArray,\n      i,\n      mimeString,\n        bb;\n    if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n      // Convert base64 to raw binary data held in a string:\n      byteString = atob(dataURI.split(',')[1]);\n    } else {\n      // Convert base64/URLEncoded data component to raw binary data:\n      byteString = decodeURIComponent(dataURI.split(',')[1]);\n    }\n    // Write the bytes of the string to an ArrayBuffer:\n    arrayBuffer = new ArrayBuffer(byteString.length);\n    intArray = new Uint8Array(arrayBuffer);\n    for (i = 0; i < byteString.length; i += 1) {\n      intArray[i] = byteString.charCodeAt(i);\n    }\n    // Separate out the mime component:\n    mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n    if (hasBlobConstructor) {\n      return new Blob(\n          [hasArrayBufferViewSupport ? intArray : arrayBuffer],\n          {type: mimeString}\n          );\n    }\n    bb = new BlobBuilder();\n    bb.append(arrayBuffer);\n    return bb.getBlob(mimeString);\n  };\nif (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n  if (CanvasPrototype.mozGetAsFile) {\n    CanvasPrototype.toBlob = function (callback, type, quality) {\n      if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n        callback(dataURLtoBlob(this.toDataURL(type, quality)));\n      } else {\n        callback(this.mozGetAsFile('blob', type));\n      }\n    };\n  } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n    CanvasPrototype.toBlob = function (callback, type, quality) {\n      callback(dataURLtoBlob(this.toDataURL(type, quality)));\n    };\n  }\n}\n\nmodule.exports = dataURLtoBlob;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/blueimp_canvastoblob/index.js?")},"./node_modules/browser-saveas/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browser-saveas/index.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* FileSaver.js\n *  A saveAs() FileSaver implementation.\n *  2014-05-27\n *\n *  By Eli Grey, http://eligrey.com\n *  License: X11/MIT\n *    See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs\n  // IE 10+ (native saveAs)\n  || (typeof navigator !== "undefined" &&\n      navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator))\n  // Everyone else\n  || (function(view) {\n\t"use strict";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== "undefined" &&\n\t    /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn\'t overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")\n\t\t, can_use_save_link = !view.externalHost && "download" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = doc.createEvent("MouseEvents");\n\t\t\tevent.initMouseEvent(\n\t\t\t\t"click", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t, false, false, false, false, 0, null\n\t\t\t);\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = "application/octet-stream"\n\t\t, fs_min_size = 0\n\t\t, deletion_queue = []\n\t\t, process_deletion_queue = function() {\n\t\t\tvar i = deletion_queue.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar file = deletion_queue[i];\n\t\t\t\tif (typeof file === "string") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeletion_queue.length = 0; // clear queue\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver["on" + event_types[i]];\n\t\t\t\tif (typeof listener === "function") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, FileSaver = function(blob, name) {\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, get_object_url = function() {\n\t\t\t\t\tvar object_url = get_URL().createObjectURL(blob);\n\t\t\t\t\tdeletion_queue.push(object_url);\n\t\t\t\t\treturn object_url;\n\t\t\t\t}\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, "writestart progress write writeend".split(" "));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\t// don\'t create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.open(object_url, "_blank");\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = "download";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tclick(save_link);\n\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\tdispatch_all();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can\'t be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== "download") {\n\t\t\t\tname += ".download";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory("saved", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tdeletion_queue.push(file);\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, "writeend", event);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t"writestart progress write abort".split(" ").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter["on" + event] = filesaver["on" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name) {\n\t\t\treturn new FileSaver(blob, name);\n\t\t}\n\t;\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, "abort");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\tview.addEventListener("unload", process_deletion_queue, false);\n\tsaveAs.unload = function() {\n\t\tprocess_deletion_queue();\n\t\tview.removeEventListener("unload", process_deletion_queue, false);\n\t};\n\treturn saveAs;\n}(\n\t   typeof self !== "undefined" && self\n\t|| typeof window !== "undefined" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nvar amdDefine = window.define;\nif( typeof amdDefine === "undefined" && (typeof window.almond !== "undefined" \n    && "define" in window.almond )){\n  amdDefine = window.almond.define;\n}\n\nif ( true && module !== null) {\n  module.exports = saveAs;\n} else if ((typeof amdDefine !== "undefined" && amdDefine !== null) && (amdDefine.amd != null)) {\n  amdDefine("saveAs",[], function() {\n    return saveAs;\n  });\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/browser-saveas/index.js?')},"./node_modules/define-properties/index.js":
/*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar keys = __webpack_require__(/*! object-keys */ \"./node_modules/object-keys/index.js\");\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/define-properties/index.js?")},"./node_modules/dom-helper/index.js":
/*!******************************************!*\
  !*** ./node_modules/dom-helper/index.js ***!
  \******************************************/
/*! no static exports found */function(module,exports){eval("var Utils = {};\n\n\n/*\nRemove an element and provide a function that inserts it into its original position\nhttps://developers.google.com/speed/articles/javascript-dom\n@param element {Element} The element to be temporarily removed\n@return {Function} A function that inserts the element into its original position\n */\n\nUtils.removeToInsertLater = function(element) {\n  var nextSibling, parentNode;\n  parentNode = element.parentNode;\n  nextSibling = element.nextSibling;\n  parentNode.removeChild(element);\n  return function() {\n    if (nextSibling) {\n      parentNode.insertBefore(element, nextSibling);\n    } else {\n      parentNode.appendChild(element);\n    }\n  };\n};\n\n\n/*\nfastest possible way to destroy all sub nodes (aka childs)\nhttp://jsperf.com/innerhtml-vs-removechild/15\n@param element {Element} The element for which all childs should be removed\n */\n\nUtils.removeAllChilds = function(element) {\n  var count;\n  count = 0;\n  while (element.firstChild) {\n    count++;\n    element.removeChild(element.firstChild);\n  }\n};\n\nmodule.exports = Utils;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/dom-helper/index.js?")},"./node_modules/es-abstract/GetIntrinsic.js":
/*!**************************************************!*\
  !*** ./node_modules/es-abstract/GetIntrinsic.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-abstract/GetIntrinsic.js?")},"./node_modules/es-abstract/es5.js":
/*!*****************************************!*\
  !*** ./node_modules/es-abstract/es5.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar GetIntrinsic = __webpack_require__(/*! ./GetIntrinsic */ \"./node_modules/es-abstract/GetIntrinsic.js\");\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = __webpack_require__(/*! ./helpers/assertRecord */ \"./node_modules/es-abstract/helpers/assertRecord.js\");\nvar $isNaN = __webpack_require__(/*! ./helpers/isNaN */ \"./node_modules/es-abstract/helpers/isNaN.js\");\nvar $isFinite = __webpack_require__(/*! ./helpers/isFinite */ \"./node_modules/es-abstract/helpers/isFinite.js\");\n\nvar sign = __webpack_require__(/*! ./helpers/sign */ \"./node_modules/es-abstract/helpers/sign.js\");\nvar mod = __webpack_require__(/*! ./helpers/mod */ \"./node_modules/es-abstract/helpers/mod.js\");\n\nvar IsCallable = __webpack_require__(/*! is-callable */ \"./node_modules/is-callable/index.js\");\nvar toPrimitive = __webpack_require__(/*! es-to-primitive/es5 */ \"./node_modules/es-to-primitive/es5.js\");\n\nvar has = __webpack_require__(/*! has */ \"./node_modules/has/src/index.js\");\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-abstract/es5.js?")},"./node_modules/es-abstract/helpers/assertRecord.js":
/*!**********************************************************!*\
  !*** ./node_modules/es-abstract/helpers/assertRecord.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar GetIntrinsic = __webpack_require__(/*! ../GetIntrinsic */ \"./node_modules/es-abstract/GetIntrinsic.js\");\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = __webpack_require__(/*! has */ \"./node_modules/has/src/index.js\");\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-abstract/helpers/assertRecord.js?")},"./node_modules/es-abstract/helpers/isFinite.js":
/*!******************************************************!*\
  !*** ./node_modules/es-abstract/helpers/isFinite.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports){eval("var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-abstract/helpers/isFinite.js?")},"./node_modules/es-abstract/helpers/isNaN.js":
/*!***************************************************!*\
  !*** ./node_modules/es-abstract/helpers/isNaN.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-abstract/helpers/isNaN.js?")},"./node_modules/es-abstract/helpers/mod.js":
/*!*************************************************!*\
  !*** ./node_modules/es-abstract/helpers/mod.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-abstract/helpers/mod.js?")},"./node_modules/es-abstract/helpers/sign.js":
/*!**************************************************!*\
  !*** ./node_modules/es-abstract/helpers/sign.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-abstract/helpers/sign.js?")},"./node_modules/es-to-primitive/es5.js":
/*!*********************************************!*\
  !*** ./node_modules/es-to-primitive/es5.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = __webpack_require__(/*! ./helpers/isPrimitive */ \"./node_modules/es-to-primitive/helpers/isPrimitive.js\");\n\nvar isCallable = __webpack_require__(/*! is-callable */ \"./node_modules/is-callable/index.js\");\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-to-primitive/es5.js?")},"./node_modules/es-to-primitive/helpers/isPrimitive.js":
/*!*************************************************************!*\
  !*** ./node_modules/es-to-primitive/helpers/isPrimitive.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/es-to-primitive/helpers/isPrimitive.js?")},"./node_modules/for-each/index.js":
/*!****************************************!*\
  !*** ./node_modules/for-each/index.js ***!
  \****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isCallable = __webpack_require__(/*! is-callable */ \"./node_modules/is-callable/index.js\");\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/for-each/index.js?")},"./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/function-bind/implementation.js?")},"./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar implementation = __webpack_require__(/*! ./implementation */ "./node_modules/function-bind/implementation.js");\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/function-bind/index.js?')},"./node_modules/global/window.js":
/*!***************************************!*\
  !*** ./node_modules/global/window.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {var win;\n\nif (typeof window !== "undefined") {\n    win = window;\n} else if (typeof global !== "undefined") {\n    win = global;\n} else if (typeof self !== "undefined"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/global/window.js?')},"./node_modules/has/src/index.js":
/*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/has/src/index.js?')},"./node_modules/is-callable/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-callable/index.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/is-callable/index.js?")},"./node_modules/is-function/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-function/index.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports){eval("module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/is-function/index.js?")},"./node_modules/jbone/dist/jbone.js":
/*!******************************************!*\
  !*** ./node_modules/jbone/dist/jbone.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jBone v1.2.1 - 2017-09-19 - Library for DOM manipulation\n *\n * http://jbone.js.org\n *\n * Copyright 2017 Alexey Kupriyanenko\n * Released under the MIT license.\n */\n\n(function (win) {\n\nvar\n// cache previous versions\n_$ = win.$,\n_jBone = win.jBone,\n\n// Quick match a standalone tag\nrquickSingleTag = /^<(\\w+)\\s*\\/?>$/,\n\n// A simple way to check for HTML strings\n// Prioritize #id over <tag> to avoid XSS via location.hash\nrquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\n\n// Alias for function\nslice = [].slice,\nsplice = [].splice,\nkeys = Object.keys,\n\n// Alias for global variables\ndoc = win.document,\n\nisString = function(el) {\n    return typeof el === "string";\n},\nisObject = function(el) {\n    return el instanceof Object;\n},\nisFunction = function(el) {\n    return ({}).toString.call(el) === "[object Function]";\n},\nisArray = function(el) {\n    return Array.isArray(el);\n},\njBone = function(element, data) {\n    return new fn.init(element, data);\n},\nfn;\n\n// set previous values and return the instance upon calling the no-conflict mode\njBone.noConflict = function() {\n    win.$ = _$;\n    win.jBone = _jBone;\n\n    return jBone;\n};\n\nfn = jBone.fn = jBone.prototype = {\n    init: function(element, data) {\n        var elements, tag, wraper, fragment;\n\n        if (!element) {\n            return this;\n        }\n        if (isString(element)) {\n            // Create single DOM element\n            if (tag = rquickSingleTag.exec(element)) {\n                this[0] = doc.createElement(tag[1]);\n                this.length = 1;\n\n                if (isObject(data)) {\n                    this.attr(data);\n                }\n\n                return this;\n            }\n            // Create DOM collection\n            if ((tag = rquickExpr.exec(element)) && tag[1]) {\n                fragment = doc.createDocumentFragment();\n                wraper = doc.createElement("div");\n                wraper.innerHTML = element;\n                while (wraper.lastChild) {\n                    fragment.appendChild(wraper.firstChild);\n                }\n                elements = slice.call(fragment.childNodes);\n\n                return jBone.merge(this, elements);\n            }\n            // Find DOM elements with querySelectorAll\n            if (jBone.isElement(data)) {\n                return jBone(data).find(element);\n            }\n\n            try {\n                elements = doc.querySelectorAll(element);\n\n                return jBone.merge(this, elements);\n            } catch (e) {\n                return this;\n            }\n        }\n        // Wrap DOMElement\n        if (element.nodeType) {\n            this[0] = element;\n            this.length = 1;\n\n            return this;\n        }\n        // Run function\n        if (isFunction(element)) {\n            return element();\n        }\n        // Return jBone element as is\n        if (element instanceof jBone) {\n            return element;\n        }\n\n        // Return element wrapped by jBone\n        return jBone.makeArray(element, this);\n    },\n\n    pop: [].pop,\n    push: [].push,\n    reverse: [].reverse,\n    shift: [].shift,\n    sort: [].sort,\n    splice: [].splice,\n    slice: [].slice,\n    indexOf: [].indexOf,\n    forEach: [].forEach,\n    unshift: [].unshift,\n    concat: [].concat,\n    join: [].join,\n    every: [].every,\n    some: [].some,\n    filter: [].filter,\n    map: [].map,\n    reduce: [].reduce,\n    reduceRight: [].reduceRight,\n    length: 0\n};\n\nfn.constructor = jBone;\n\nfn.init.prototype = fn;\n\njBone.setId = function(el) {\n    var jid = el.jid;\n\n    if (el === win) {\n        jid = "window";\n    } else if (el.jid === undefined) {\n        el.jid = jid = ++jBone._cache.jid;\n    }\n\n    if (!jBone._cache.events[jid]) {\n        jBone._cache.events[jid] = {};\n    }\n};\n\njBone.getData = function(el) {\n    el = el instanceof jBone ? el[0] : el;\n\n    var jid = el === win ? "window" : el.jid;\n\n    return {\n        jid: jid,\n        events: jBone._cache.events[jid]\n    };\n};\n\njBone.isElement = function(el) {\n    return el && el instanceof jBone || el instanceof HTMLElement || isString(el);\n};\n\njBone._cache = {\n    events: {},\n    jid: 0\n};\n\nfunction isArraylike(obj) {\n    var length = obj.length,\n        type = typeof obj;\n\n    if (isFunction(type) || obj === win) {\n        return false;\n    }\n\n    if (obj.nodeType === 1 && length) {\n        return true;\n    }\n\n    return isArray(type) || length === 0 ||\n        typeof length === "number" && length > 0 && (length - 1) in obj;\n}\n\nfn.pushStack = function(elems) {\n    var ret = jBone.merge(this.constructor(), elems);\n\n    return ret;\n};\n\njBone.merge = function(first, second) {\n    var l = second.length,\n        i = first.length,\n        j = 0;\n\n    while (j < l) {\n        first[i++] = second[j++];\n    }\n\n    first.length = i;\n\n    return first;\n};\n\njBone.contains = function(container, contained) {\n    return container.contains(contained);\n};\n\njBone.extend = function(target) {\n    var tg;\n\n    splice.call(arguments, 1).forEach(function(source) {\n        tg = target; //caching target for perf improvement\n\n        if (source) {\n            for (var prop in source) {\n                tg[prop] = source[prop];\n            }\n        }\n    });\n\n    return target;\n};\n\njBone.makeArray = function(arr, results) {\n    var ret = results || [];\n\n    if (arr !== null) {\n        if (isArraylike(arr)) {\n            jBone.merge(ret, isString(arr) ? [arr] : arr);\n        } else {\n            ret.push(arr);\n        }\n    }\n\n    return ret;\n};\n\njBone.unique = function(array) {\n    if (array == null) {\n        return [];\n    }\n\n    var result = [];\n\n    for (var i = 0, length = array.length; i < length; i++) {\n        var value = array[i];\n        if (result.indexOf(value) < 0) {\n            result.push(value);\n        }\n    }\n    return result;\n};\n\nfunction BoneEvent(e, data) {\n    var key, setter;\n\n    this.originalEvent = e;\n\n    setter = function(key, e) {\n        if (key === "preventDefault") {\n            this[key] = function() {\n                this.defaultPrevented = true;\n                return e[key]();\n            };\n        } else if (key === "stopImmediatePropagation") {\n            this[key] = function() {\n                this.immediatePropagationStopped = true;\n                return e[key]();\n            };\n        } else if (isFunction(e[key])) {\n            this[key] = function() {\n                return e[key]();\n            };\n        } else {\n            this[key] = e[key];\n        }\n    };\n\n    for (key in e) {\n        if (e[key] || typeof e[key] === "function") {\n            setter.call(this, key, e);\n        }\n    }\n\n    jBone.extend(this, data, {\n        isImmediatePropagationStopped: function() {\n            return !!this.immediatePropagationStopped;\n        }\n    });\n}\n\njBone.Event = function(event, data) {\n    var namespace, eventType;\n\n    if (event.type && !data) {\n        data = event;\n        event = event.type;\n    }\n\n    namespace = event.split(".").splice(1).join(".");\n    eventType = event.split(".")[0];\n\n    event = doc.createEvent("Event");\n    event.initEvent(eventType, true, true);\n\n    return jBone.extend(event, {\n        namespace: namespace,\n        isDefaultPrevented: function() {\n            return event.defaultPrevented;\n        }\n    }, data);\n};\n\njBone.event = {\n\n    /**\n     * Attach a handler to an event for the elements\n     * @param {Node}        el         - Events will be attached to this DOM Node\n     * @param {String}      types      - One or more space-separated event types and optional namespaces\n     * @param {Function}    handler    - A function to execute when the event is triggered\n     * @param {Object}      [data]     - Data to be passed to the handler in event.data\n     * @param {String}      [selector] - A selector string to filter the descendants of the selected elements\n     */\n    add: function(el, types, handler, data, selector) {\n        jBone.setId(el);\n\n        var eventHandler = function(e) {\n                jBone.event.dispatch.call(el, e);\n            },\n            events = jBone.getData(el).events,\n            eventType, t, event;\n\n        types = types.split(" ");\n        t = types.length;\n        while (t--) {\n            event = types[t];\n\n            eventType = event.split(".")[0];\n            events[eventType] = events[eventType] || [];\n\n            if (events[eventType].length) {\n                // override with previous event handler\n                eventHandler = events[eventType][0].fn;\n            } else {\n                el.addEventListener && el.addEventListener(eventType, eventHandler, false);\n            }\n\n            events[eventType].push({\n                namespace: event.split(".").splice(1).join("."),\n                fn: eventHandler,\n                selector: selector,\n                data: data,\n                originfn: handler\n            });\n        }\n    },\n\n    /**\n     * Remove an event handler\n     * @param  {Node}       el        - Events will be deattached from this DOM Node\n     * @param  {String}     types     - One or more space-separated event types and optional namespaces\n     * @param  {Function}   handler   - A handler function previously attached for the event(s)\n     * @param  {String}     [selector] - A selector string to filter the descendants of the selected elements\n     */\n    remove: function(el, types, handler, selector) {\n        var removeListener = function(events, eventType, index, el, e) {\n                var callback;\n\n                // get callback\n                if ((handler && e.originfn === handler) || !handler) {\n                    callback = e.fn;\n                }\n\n                if (events[eventType][index].fn === callback) {\n                    // remove handler from cache\n                    events[eventType].splice(index, 1);\n\n                    if (!events[eventType].length) {\n                        el.removeEventListener(eventType, callback);\n                    }\n                }\n            },\n            events = jBone.getData(el).events,\n            l,\n            eventsByType;\n\n        if (!events) {\n            return;\n        }\n\n        // remove all events\n        if (!types && events) {\n            return keys(events).forEach(function(eventType) {\n                eventsByType = events[eventType];\n                l = eventsByType.length;\n\n                while(l--) {\n                    removeListener(events, eventType, l, el, eventsByType[l]);\n                }\n            });\n        }\n\n        types.split(" ").forEach(function(eventName) {\n            var eventType = eventName.split(".")[0],\n                namespace = eventName.split(".").splice(1).join("."),\n                e;\n\n            // remove named events\n            if (events[eventType]) {\n                eventsByType = events[eventType];\n                l = eventsByType.length;\n\n                while(l--) {\n                    e = eventsByType[l];\n                    if ((!namespace || (namespace && e.namespace === namespace)) &&\n                        (!selector  || (selector  && e.selector === selector))) {\n                        removeListener(events, eventType, l, el, e);\n                    }\n                }\n            }\n            // remove all namespaced events\n            else if (namespace) {\n                keys(events).forEach(function(eventType) {\n                    eventsByType = events[eventType];\n                    l = eventsByType.length;\n\n                    while(l--) {\n                        e = eventsByType[l];\n                        if (e.namespace.split(".")[0] === namespace.split(".")[0]) {\n                            removeListener(events, eventType, l, el, e);\n                        }\n                    }\n                });\n            }\n        });\n    },\n\n    /**\n     * Execute all handlers and behaviors attached to the matched elements for the given event type.\n     * @param  {Node}       el       - Events will be triggered for thie DOM Node\n     * @param  {String}     event    - One or more space-separated event types and optional namespaces\n     */\n    trigger: function(el, event) {\n        var events = [];\n\n        if (isString(event)) {\n            events = event.split(" ").map(function(event) {\n                return jBone.Event(event);\n            });\n        } else {\n            event = event instanceof Event ? event : jBone.Event(event);\n            events = [event];\n        }\n\n        events.forEach(function(event) {\n            if (!event.type) {\n                return;\n            }\n\n            el.dispatchEvent && el.dispatchEvent(event);\n        });\n    },\n\n    dispatch: function(e) {\n        var i = 0,\n            j = 0,\n            el = this,\n            handlers = jBone.getData(el).events[e.type],\n            length = handlers.length,\n            handlerQueue = [],\n            targets = [],\n            l,\n            expectedTarget,\n            handler,\n            event,\n            eventOptions;\n\n        // cache all events handlers, fix issue with multiple handlers (issue #45)\n        for (; i < length; i++) {\n            handlerQueue.push(handlers[i]);\n        }\n\n        i = 0;\n        length = handlerQueue.length;\n\n        for (;\n            // if event exists\n            i < length &&\n            // if handler is not removed from stack\n            ~handlers.indexOf(handlerQueue[i]) &&\n            // if propagation is not stopped\n            !(event && event.isImmediatePropagationStopped());\n        i++) {\n            expectedTarget = null;\n            eventOptions = {};\n            handler = handlerQueue[i];\n            handler.data && (eventOptions.data = handler.data);\n\n            // event handler without selector\n            if (!handler.selector) {\n                event = new BoneEvent(e, eventOptions);\n\n                if (!(e.namespace && e.namespace !== handler.namespace)) {\n                    handler.originfn.call(el, event);\n                }\n            }\n            // event handler with selector\n            else if (\n                // if target and selected element the same\n                ~(targets = jBone(el).find(handler.selector)).indexOf(e.target) && (expectedTarget = e.target) ||\n                // if one of element matched with selector contains target\n                (el !== e.target && el.contains(e.target))\n            ) {\n                // get element matched with selector\n                if (!expectedTarget) {\n                    l = targets.length;\n                    j = 0;\n\n                    for (; j < l; j++) {\n                        if (targets[j] && targets[j].contains(e.target)) {\n                            expectedTarget = targets[j];\n                        }\n                    }\n                }\n\n                if (!expectedTarget) {\n                    continue;\n                }\n\n                eventOptions.currentTarget = expectedTarget;\n                event = new BoneEvent(e, eventOptions);\n\n                if (!(e.namespace && e.namespace !== handler.namespace)) {\n                    handler.originfn.call(expectedTarget, event);\n                }\n            }\n        }\n    }\n};\n\nfn.on = function(types, selector, data, fn) {\n    var length = this.length,\n        i = 0;\n\n    if (data == null && fn == null) {\n        // (types, fn)\n        fn = selector;\n        data = selector = undefined;\n    } else if (fn == null) {\n        if (typeof selector === "string") {\n            // (types, selector, fn)\n            fn = data;\n            data = undefined;\n        } else {\n            // (types, data, fn)\n            fn = data;\n            data = selector;\n            selector = undefined;\n        }\n    }\n\n    if (!fn) {\n        return this;\n    }\n\n    for (; i < length; i++) {\n        jBone.event.add(this[i], types, fn, data, selector);\n    }\n\n    return this;\n};\n\nfn.one = function(event) {\n    var args = arguments,\n        i = 0,\n        length = this.length,\n        oneArgs = slice.call(args, 1, args.length - 1),\n        callback = slice.call(args, -1)[0],\n        addListener;\n\n    addListener = function(el) {\n        var $el = jBone(el);\n\n        event.split(" ").forEach(function(event) {\n            var fn = function(e) {\n                $el.off(event, fn);\n                callback.call(el, e);\n            };\n\n            $el.on.apply($el, [event].concat(oneArgs, fn));\n        });\n    };\n\n    for (; i < length; i++) {\n        addListener(this[i]);\n    }\n\n    return this;\n};\n\nfn.trigger = function(event) {\n    var i = 0,\n        length = this.length;\n\n    if (!event) {\n        return this;\n    }\n\n    for (; i < length; i++) {\n        jBone.event.trigger(this[i], event);\n    }\n\n    return this;\n};\n\nfn.off = function(types, selector, handler) {\n    var i = 0,\n        length = this.length;\n\n    if (isFunction(selector)) {\n        handler = selector;\n        selector = undefined;\n    }\n\n    for (; i < length; i++) {\n        jBone.event.remove(this[i], types, handler, selector);\n    }\n\n    return this;\n};\n\nfn.find = function(selector) {\n    var results = [],\n        i = 0,\n        length = this.length,\n        finder = function(el) {\n            if (isFunction(el.querySelectorAll)) {\n                [].forEach.call(el.querySelectorAll(selector), function(found) {\n                    results.push(found);\n                });\n            }\n        };\n\n    for (; i < length; i++) {\n        finder(this[i]);\n    }\n\n    return jBone(results);\n};\n\nfn.get = function(index) {\n    return index != null ?\n\n        // Return just one element from the set\n        (index < 0 ? this[index + this.length] : this[index]) :\n\n        // Return all the elements in a clean array\n        slice.call(this);\n};\n\nfn.eq = function(index) {\n    return jBone(this[index]);\n};\n\nfn.parent = function() {\n    var results = [],\n        parent,\n        i = 0,\n        length = this.length;\n\n    for (; i < length; i++) {\n        if (!~results.indexOf(parent = this[i].parentElement) && parent) {\n            results.push(parent);\n        }\n    }\n\n    return jBone(results);\n};\n\nfn.toArray = function() {\n    return slice.call(this);\n};\n\nfn.is = function() {\n    var args = arguments;\n\n    return this.some(function(el) {\n        return el.tagName.toLowerCase() === args[0];\n    });\n};\n\nfn.has = function() {\n    var args = arguments;\n\n    return this.some(function(el) {\n        return el.querySelectorAll(args[0]).length;\n    });\n};\n\nfn.add = function(selector, context) {\n    return this.pushStack(\n        jBone.unique(\n            jBone.merge(this.get(), jBone(selector, context))\n        )\n    );\n};\n\nfn.attr = function(key, value) {\n    var args = arguments,\n        i = 0,\n        length = this.length,\n        setter;\n\n    if (isString(key) && args.length === 1) {\n        return this[0] && this[0].getAttribute(key);\n    }\n\n    if (args.length === 2) {\n        setter = function(el) {\n            el.setAttribute(key, value);\n        };\n    } else if (isObject(key)) {\n        setter = function(el) {\n            keys(key).forEach(function(name) {\n                el.setAttribute(name, key[name]);\n            });\n        };\n    }\n\n    for (; i < length; i++) {\n        setter(this[i]);\n    }\n\n    return this;\n};\n\nfn.removeAttr = function(key) {\n    var i = 0,\n        length = this.length;\n\n    for (; i < length; i++) {\n        this[i].removeAttribute(key);\n    }\n\n    return this;\n};\n\nfn.val = function(value) {\n    var i = 0,\n        length = this.length;\n\n    if (arguments.length === 0) {\n        return this[0] && this[0].value;\n    }\n\n    for (; i < length; i++) {\n        this[i].value = value;\n    }\n\n    return this;\n};\n\nfn.css = function(key, value) {\n    var args = arguments,\n        i = 0,\n        length = this.length,\n        setter;\n\n    // Get attribute\n    if (isString(key) && args.length === 1) {\n        return this[0] && win.getComputedStyle(this[0])[key];\n    }\n\n    // Set attributes\n    if (args.length === 2) {\n        setter = function(el) {\n            el.style[key] = value;\n        };\n    } else if (isObject(key)) {\n        setter = function(el) {\n            keys(key).forEach(function(name) {\n                el.style[name] = key[name];\n            });\n        };\n    }\n\n    for (; i < length; i++) {\n        setter(this[i]);\n    }\n\n    return this;\n};\n\nfn.data = function(key, value) {\n    var args = arguments, data = {},\n        i = 0,\n        length = this.length,\n        setter,\n        setValue = function(el, key, value) {\n            if (isObject(value)) {\n                el.jdata = el.jdata || {};\n                el.jdata[key] = value;\n            } else {\n                el.dataset[key] = value;\n            }\n        },\n        getValue = function(value) {\n            if (value === "true") {\n                return true;\n            } else if (value === "false") {\n                return false;\n            } else {\n                return value;\n            }\n        };\n\n    // Get all data\n    if (args.length === 0) {\n        this[0].jdata && (data = this[0].jdata);\n\n        keys(this[0].dataset).forEach(function(key) {\n            data[key] = getValue(this[0].dataset[key]);\n        }, this);\n\n        return data;\n    }\n    // Get data by name\n    if (args.length === 1 && isString(key)) {\n        return this[0] && getValue(this[0].dataset[key] || this[0].jdata && this[0].jdata[key]);\n    }\n\n    // Set data\n    if (args.length === 1 && isObject(key)) {\n        setter = function(el) {\n            keys(key).forEach(function(name) {\n                setValue(el, name, key[name]);\n            });\n        };\n    } else if (args.length === 2) {\n        setter = function(el) {\n            setValue(el, key, value);\n        };\n    }\n\n    for (; i < length; i++) {\n        setter(this[i]);\n    }\n\n    return this;\n};\n\nfn.removeData = function(key) {\n    var i = 0,\n        length = this.length,\n        jdata, dataset;\n\n    for (; i < length; i++) {\n        jdata = this[i].jdata;\n        dataset = this[i].dataset;\n\n        if (key) {\n            jdata && jdata[key] && delete jdata[key];\n            delete dataset[key];\n        } else {\n            for (key in jdata) {\n                delete jdata[key];\n            }\n\n            for (key in dataset) {\n                delete dataset[key];\n            }\n        }\n    }\n\n    return this;\n};\n\nfn.addClass = function(className) {\n    var i = 0,\n        j = 0,\n        length = this.length,\n        classes = className ? className.trim().split(/\\s+/) : [];\n\n    for (; i < length; i++) {\n        j = 0;\n\n        for (j = 0; j < classes.length; j++) {\n            this[i].classList.add(classes[j]);\n        }\n    }\n\n    return this;\n};\n\nfn.removeClass = function(className) {\n    var i = 0,\n        j = 0,\n        length = this.length,\n        classes = className ? className.trim().split(/\\s+/) : [];\n\n    for (; i < length; i++) {\n        j = 0;\n\n        for (j = 0; j < classes.length; j++) {\n            this[i].classList.remove(classes[j]);\n        }\n    }\n\n    return this;\n};\n\nfn.toggleClass = function(className, force) {\n    var i = 0,\n        length = this.length,\n        method = "toggle";\n\n    force === true && (method = "add") || force === false && (method = "remove");\n\n    if (className) {\n        for (; i < length; i++) {\n            this[i].classList[method](className);\n        }\n    }\n\n    return this;\n};\n\nfn.hasClass = function(className) {\n    var i = 0, length = this.length;\n\n    if (className) {\n        for (; i < length; i++) {\n            if (this[i].classList.contains(className)) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n};\n\nfn.html = function(value) {\n    var args = arguments,\n        el;\n\n    // add HTML into elements\n    if (args.length === 1 && value !== undefined) {\n        return this.empty().append(value);\n    }\n    // get HTML from element\n    else if (args.length === 0 && (el = this[0])) {\n        return el.innerHTML;\n    }\n\n    return this;\n};\n\nfn.append = function(appended) {\n    var i = 0,\n        length = this.length,\n        setter;\n\n    // create jBone object and then append\n    if (isString(appended) && rquickExpr.exec(appended)) {\n        appended = jBone(appended);\n    }\n    // create text node for insertion\n    else if (!isObject(appended)) {\n        appended = document.createTextNode(appended);\n    }\n\n    appended = appended instanceof jBone ? appended : jBone(appended);\n\n    setter = function(el, i) {\n        appended.forEach(function(node) {\n            if (i) {\n                el.appendChild(node.cloneNode(true));\n            } else {\n                el.appendChild(node);\n            }\n        });\n    };\n\n    for (; i < length; i++) {\n        setter(this[i], i);\n    }\n\n    return this;\n};\n\nfn.appendTo = function(to) {\n    jBone(to).append(this);\n\n    return this;\n};\n\nfn.empty = function() {\n    var i = 0,\n        length = this.length,\n        el;\n\n    for (; i < length; i++) {\n        el = this[i];\n\n        while (el.lastChild) {\n            el.removeChild(el.lastChild);\n        }\n    }\n\n    return this;\n};\n\nfn.remove = function() {\n    var i = 0,\n        length = this.length,\n        el;\n\n    // remove all listeners\n    this.off();\n\n    for (; i < length; i++) {\n        el = this[i];\n\n        // remove data and nodes\n        delete el.jdata;\n        el.parentNode && el.parentNode.removeChild(el);\n    }\n\n    return this;\n};\n\nif ( true && module && typeof module.exports === "object") {\n    // Expose jBone as module.exports in loaders that implement the Node\n    // module pattern (including browserify). Do not create the global, since\n    // the user will be storing it themselves locally, and globals are frowned\n    // upon in the Node module world.\n    module.exports = jBone;\n}\n// Register as a AMD module\nelse if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n        return jBone;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n    win.jBone = win.$ = jBone;\n} else {}\n\n}(typeof window !== "undefined" ? window : this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/jbone/dist/jbone.js?')},"./node_modules/koala-js/index.js":
/*!****************************************!*\
  !*** ./node_modules/koala-js/index.js ***!
  \****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var koalajs = {};\n\n// pass an alternative default value\nkoalajs.d = koalajs.defaultValue = function defaultValue(obj, defValue) {\n  if (obj === undefined) {\n    if (typeof obj === "function") {\n      return defValue();\n    }\n    return defValue;\n  }\n  return obj;\n};\n\n// alias for getElementById\nkoalajs.id = function mk(el) {\n  return document.getElementById(el);\n};\n\n// alias for createElement\nkoalajs.mk = function mk(el) {\n  return document.createElement(el);\n};\n\nif (module !== undefined && module.exports !== undefined) {\n  module.exports = koalajs;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/koala-js/index.js?')},"./node_modules/linear-scale/linear-scale.js":
/*!***************************************************!*\
  !*** ./node_modules/linear-scale/linear-scale.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("(function(root) {\n  'use strict';\n\n  function LinearScale(domain, range) {\n    if (!(this instanceof LinearScale)) {\n      return new LinearScale(domain, range);\n    }\n    this.domain = [];\n    this.range = [];\n\n    if (Array.isArray(domain)) {\n      this.domain = domain;\n    }\n    if (Array.isArray(range)) {\n      this.range = range;\n    }\n\n    var scale = function(value) {\n      if (typeof value !== 'number') {\n        return null;\n      }\n\n      var minValue = this.domain[0];\n      var maxValue = this.domain[1];\n\n      var minScale = this.range[0];\n      var maxScale = this.range[1];\n\n      if (minScale !== 'number' && typeof maxScale !== 'number') {\n        minScale = minValue;\n        maxScale = maxValue;\n      }\n\n      var ratio = (maxScale - minScale) / (maxValue - minValue);\n      return minScale + ratio * (value - minValue);\n    }.bind(this);\n\n    scale.domain = function(value) {\n      if (Array.isArray(value)) {\n        this.domain = value;\n      }\n      return scale;\n    }.bind(this);\n\n    scale.range = function(value) {\n      if (Array.isArray(value)) {\n        this.range = value;\n      }\n      return scale;\n    }.bind(this);\n\n    return scale;\n  }\n\n  if (true) {\n    if ( true && module.exports) {\n      exports = module.exports = LinearScale;\n    }\n    exports.LinearScale = LinearScale;\n  } else {}\n\n})(this);\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/linear-scale/linear-scale.js?")},"./node_modules/lodash/lodash.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports =  true && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else {}\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/lodash/lodash.js?")},"./node_modules/mouse-pos/index.js":
/*!*****************************************!*\
  !*** ./node_modules/mouse-pos/index.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports){eval('var Mouse;\n\nmodule.exports = Mouse = {\n  rel: function(e) {\n    var mouseX, mouseY, rect, target;\n    mouseX = e.offsetX;\n    mouseY = e.offsetY;\n    if (mouseX == undefined) {\n      rect = target.getBoundingClientRect();\n      target = e.target || e.srcElement;\n      if (mouseX == undefined) {\n        mouseX = e.clientX - rect.left;\n        mouseY = e.clientY - rect.top;\n      }\n      if (mouseX == undefined) {\n        mouseX = e.pageX - target.offsetLeft;\n        mouseY = e.pageY - target.offsetTop;\n      }\n      if (mouseX == undefined) {\n        console.log(e, "no mouse event defined. your browser sucks");\n        return;\n      }\n    }\n    return [mouseX, mouseY];\n  },\n  abs: function(e) {\n    var mouseX, mouseY;\n    mouseX = e.pageX;\n    mouseY = e.pageY;\n    if (mouseX == undefined) {\n      mouseX = e.layerX;\n      mouseY = e.layerY;\n    }\n    if (mouseX == undefined) {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    }\n    if (mouseX == undefined) {\n      mouseX = e.x;\n      mouseY = e.y;\n    }\n    return [mouseX, mouseY];\n  },\n  wheelDelta: function(e) {\n    var delta;\n    delta = [e.deltaX, e.deltaY];\n    if (delta[0] == undefined) {\n      // in case there is a more detailed scroll sensor - use it\n      if (e.mozMovementX) {\n        delta = [0, e.mozMovementX];\n      }\n    }\n    // safety first\n    if (isNaN(delta[0])) {\n      delta[0] = 0;\n    }\n    if (isNaN(delta[1])) {\n      delta[1] = 0;\n    }\n    return delta;\n  }\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/mouse-pos/index.js?')},"./node_modules/msa-colorschemes/src/buried.js":
/*!*****************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/buried.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#00a35c",\n  R: "#00fc03",\n  N: "#00eb14",\n  D: "#00eb14",\n  C: "#0000ff",\n  Q: "#00f10e",\n  E: "#00f10e",\n  G: "#009d62",\n  H: "#00d52a",\n  I: "#0054ab",\n  L: "#007b84",\n  K: "#00ff00",\n  M: "#009768",\n  F: "#008778",\n  P: "#00e01f",\n  S: "#00d52a",\n  T: "#00db24",\n  W: "#00a857",\n  Y: "#00e619",\n  V: "#005fa0",\n  B: "#00eb14",\n  X: "#00b649",\n  Z: "#00f10e"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/buried.js?')},"./node_modules/msa-colorschemes/src/cinema.js":
/*!*****************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/cinema.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#BBBBBB",\n  B: "grey",\n  C: "yellow",\n  D: "red",\n  E: "red",\n  F: "magenta",\n  G: "brown",\n  H: "#00FFFF",\n  I: "#BBBBBB",\n  J: "#fff",\n  K: "#00FFFF",\n  L: "#BBBBBB",\n  M: "#BBBBBB",\n  N: "green",\n  O: "#fff",\n  P: "brown",\n  Q: "green",\n  R: "#00FFFF",\n  S: "green",\n  T: "green",\n  U: "#fff",\n  V: "#BBBBBB",\n  W: "magenta",\n  X: "grey",\n  Y: "magenta",\n  Z: "grey",\n  Gap: "grey"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/cinema.js?')},"./node_modules/msa-colorschemes/src/clustal.js":
/*!******************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/clustal.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "orange",\n  B: "#fff",\n  C: "green",\n  D: "red",\n  E: "red",\n  F: "blue",\n  G: "orange",\n  H: "red",\n  I: "green",\n  J: "#fff",\n  K: "red",\n  L: "green",\n  M: "green",\n  N: "#fff",\n  O: "#fff",\n  P: "orange",\n  Q: "#fff",\n  R: "red",\n  S: "orange",\n  T: "orange",\n  U: "#fff",\n  V: "green",\n  W: "blue",\n  X: "#fff",\n  Y: "blue",\n  Z: "#fff",\n  Gap: "#fff"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/clustal.js?')},"./node_modules/msa-colorschemes/src/clustal2.js":
/*!*******************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/clustal2.js ***!
  \*******************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#80a0f0",\n  R: "#f01505",\n  N: "#00ff00",\n  D: "#c048c0",\n  C: "#f08080",\n  Q: "#00ff00",\n  E: "#c048c0",\n  G: "#f09048",\n  H: "#15a4a4",\n  I: "#80a0f0",\n  L: "#80a0f0",\n  K: "#f01505",\n  M: "#80a0f0",\n  F: "#80a0f0",\n  P: "#ffff00",\n  S: "#00ff00",\n  T: "#00ff00",\n  W: "#80a0f0",\n  Y: "#15a4a4",\n  V: "#80a0f0",\n  B: "#fff",\n  X: "#fff",\n  Z: "#fff"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/clustal2.js?')},"./node_modules/msa-colorschemes/src/helix.js":
/*!****************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/helix.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#e718e7",\n  R: "#6f906f",\n  N: "#1be41b",\n  D: "#778877",\n  C: "#23dc23",\n  Q: "#926d92",\n  E: "#ff00ff",\n  G: "#00ff00",\n  H: "#758a75",\n  I: "#8a758a",\n  L: "#ae51ae",\n  K: "#a05fa0",\n  M: "#ef10ef",\n  F: "#986798",\n  P: "#00ff00",\n  S: "#36c936",\n  T: "#47b847",\n  W: "#8a758a",\n  Y: "#21de21",\n  V: "#857a85",\n  B: "#49b649",\n  X: "#758a75",\n  Z: "#c936c9"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/helix.js?')},"./node_modules/msa-colorschemes/src/hydrophobicity.js":
/*!*************************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/hydrophobicity.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#ad0052",\n  B: "#0c00f3",\n  C: "#c2003d",\n  D: "#0c00f3",\n  E: "#0c00f3",\n  F: "#cb0034",\n  G: "#6a0095",\n  H: "#1500ea",\n  I: "#ff0000",\n  J: "#fff",\n  K: "#0000ff",\n  L: "#ea0015",\n  M: "#b0004f",\n  N: "#0c00f3",\n  O: "#fff",\n  P: "#4600b9",\n  Q: "#0c00f3",\n  R: "#0000ff",\n  S: "#5e00a1",\n  T: "#61009e",\n  U: "#fff",\n  V: "#f60009",\n  W: "#5b00a4",\n  X: "#680097",\n  Y: "#4f00b0",\n  Z: "#0c00f3"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/hydrophobicity.js?')},"./node_modules/msa-colorschemes/src/index.js":
/*!****************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('var schemes = __webpack_require__(/*! ./schemeclass */ "./node_modules/msa-colorschemes/src/schemeclass.js");\nvar StaticSchemeClass = schemes.stat;\nvar DynSchemeClass = schemes.dyn;\n\nvar Buried = __webpack_require__(/*! ./buried */ "./node_modules/msa-colorschemes/src/buried.js");\nvar Cinema = __webpack_require__(/*! ./cinema */ "./node_modules/msa-colorschemes/src/cinema.js");\nvar Clustal = __webpack_require__(/*! ./clustal */ "./node_modules/msa-colorschemes/src/clustal.js");\nvar Clustal2 = __webpack_require__(/*! ./clustal2 */ "./node_modules/msa-colorschemes/src/clustal2.js");\nvar Helix = __webpack_require__(/*! ./helix */ "./node_modules/msa-colorschemes/src/helix.js");\nvar Hydro = __webpack_require__(/*! ./hydrophobicity */ "./node_modules/msa-colorschemes/src/hydrophobicity.js");\nvar Lesk = __webpack_require__(/*! ./lesk */ "./node_modules/msa-colorschemes/src/lesk.js");\nvar Mae = __webpack_require__(/*! ./mae */ "./node_modules/msa-colorschemes/src/mae.js");\nvar Nucleotide = __webpack_require__(/*! ./nucleotide */ "./node_modules/msa-colorschemes/src/nucleotide.js");\nvar Purine = __webpack_require__(/*! ./purine */ "./node_modules/msa-colorschemes/src/purine.js");\nvar Strand = __webpack_require__(/*! ./strand */ "./node_modules/msa-colorschemes/src/strand.js");\nvar Taylor = __webpack_require__(/*! ./taylor */ "./node_modules/msa-colorschemes/src/taylor.js");\nvar Turn = __webpack_require__(/*! ./turn */ "./node_modules/msa-colorschemes/src/turn.js");\nvar Zappo = __webpack_require__(/*! ./zappo */ "./node_modules/msa-colorschemes/src/zappo.js");\n\nvar staticSchemes = {\n  buried: Buried,\n  buried_index: Buried,\n  cinema: Cinema,\n  clustal2: Clustal2,\n  clustal: Clustal,\n  helix: Helix,\n  helix_propensity: Helix,\n  hydro: Hydro,\n  lesk: Lesk,\n  mae: Mae,\n  nucleotide: Nucleotide,\n  purine: Purine,\n  purine_pyrimidine: Purine,\n  strand: Strand,\n  strand_propensity: Strand,\n  taylor: Taylor,\n  turn: Turn,\n  turn_propensity: Turn,\n  zappo: Zappo\n};\n\nvar pid = __webpack_require__(/*! ./pid_colors.js */ "./node_modules/msa-colorschemes/src/pid_colors.js");\n\nvar dynSchemes = {\n  pid: pid\n};\n\nvar Colors = function(opt){\n  this.maps = clone(staticSchemes);\n  this.dyn = clone(dynSchemes);\n  this.opt = opt;\n}\nmodule.exports = Colors;\n\nColors.getScheme = function(scheme){\n  return staticSchemes[scheme];\n}\nColors.prototype.getScheme = function(scheme) {\n  var color = this.maps[scheme];\n  if (color === undefined) {\n    color = {};\n    if(this.dyn[scheme] != undefined){\n      return new DynSchemeClass(this.dyn[scheme],this.opt);\n    }\n  }\n  return new StaticSchemeClass(color);\n};\n\nColors.prototype.addStaticScheme = function(name,scheme) {\n  this.maps[name] = scheme;\n}\n\nColors.prototype.addDynScheme = function(name,scheme) {\n  this.dyn[name] = scheme;\n}\n\n// small helper to clone an object\nfunction clone(obj) {\n  if (null == obj || "object" != typeof obj) return obj;\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n  return copy;\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/index.js?')},"./node_modules/msa-colorschemes/src/lesk.js":
/*!***************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/lesk.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: " orange",\n  B: " #fff",\n  C: " green",\n  D: " red",\n  E: " red",\n  F: " green",\n  G: " orange",\n  H: " magenta",\n  I: " green",\n  J: " #fff",\n  K: " red",\n  L: " green",\n  M: " green",\n  N: " magenta",\n  O: " #fff",\n  P: " green",\n  Q: " magenta",\n  R: " red",\n  S: " orange",\n  T: " orange",\n  U: " #fff",\n  V: " green",\n  W: " green",\n  X: " #fff",\n  Y: " green",\n  Z: " #fff",\n  Gap: " #fff"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/lesk.js?')},"./node_modules/msa-colorschemes/src/mae.js":
/*!**************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/mae.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: " #77dd88",\n  B: " #fff",\n  C: " #99ee66",\n  D: " #55bb33",\n  E: " #55bb33",\n  F: " #9999ff",\n  G: " #77dd88",\n  H: " #5555ff",\n  I: " #66bbff",\n  J: " #fff",\n  K: " #ffcc77",\n  L: " #66bbff",\n  M: " #66bbff",\n  N: " #55bb33",\n  O: " #fff",\n  P: " #eeaaaa",\n  Q: " #55bb33",\n  R: " #ffcc77",\n  S: " #ff4455",\n  T: " #ff4455",\n  U: " #fff",\n  V: " #66bbff",\n  W: " #9999ff",\n  X: " #fff",\n  Y: " #9999ff",\n  Z: " #fff",\n  Gap: " #fff"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/mae.js?')},"./node_modules/msa-colorschemes/src/nucleotide.js":
/*!*********************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/nucleotide.js ***!
  \*********************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: " #64F73F",\n  C: " #FFB340",\n  G: " #EB413C",\n  T: " #3C88EE",\n  U: " #3C88EE"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/nucleotide.js?')},"./node_modules/msa-colorschemes/src/pid_colors.js":
/*!*********************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/pid_colors.js ***!
  \*********************************************************/
/*! no static exports found */function(module,exports){eval('var pid;\nmodule.exports = pid = {};\n\n// calculating the conservation is expensive \n// we only want to do it once\npid.init = function(){\n  this.cons = this.opt.conservation();\n}\n\npid.run = function(letter,opts){\n  var cons = this.cons[opts.pos];\n  if(cons > 0.8){\n    return "#6464ff";\n  }else if(cons > 0.6){\n    return "#9da5ff";\n  }else if(cons > 0.4){\n    return "#cccccc";\n  }else{\n    return "#ffffff";\n  }\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/pid_colors.js?')},"./node_modules/msa-colorschemes/src/purine.js":
/*!*****************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/purine.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: " #FF83FA",\n  C: " #40E0D0",\n  G: " #FF83FA",\n  R: " #FF83FA",\n  T: " #40E0D0",\n  U: " #40E0D0",\n  Y: " #40E0D0"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/purine.js?')},"./node_modules/msa-colorschemes/src/schemeclass.js":
/*!**********************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/schemeclass.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports){eval('var StaticSchemeClass = function(map){\n  this.defaultColor = "#ffffff";\n  this.type = "static";\n  this.map = map;\n  this.getColor = function(letter){\n    if(this.map[letter] !== undefined){\n      return this.map[letter]; \n    }else{\n      return this.defaultColor;\n    }\n  };\n};\n\nvar DynSchemeClass = function(fun,opt){\n  this.type = "dyn";\n  this.opt = opt;\n  // init\n  if(fun.init !== undefined){\n    fun.init.call(this);\n    this.getColor = fun.run;\n    this.reset = fun.init;\n  }else{\n    this.getColor = fun;\n  }\n};\nmodule.exports.stat = StaticSchemeClass;\nmodule.exports.dyn = DynSchemeClass;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/schemeclass.js?')},"./node_modules/msa-colorschemes/src/strand.js":
/*!*****************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/strand.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#5858a7",\n  R: "#6b6b94",\n  N: "#64649b",\n  D: "#2121de",\n  C: "#9d9d62",\n  Q: "#8c8c73",\n  E: "#0000ff",\n  G: "#4949b6",\n  H: "#60609f",\n  I: "#ecec13",\n  L: "#b2b24d",\n  K: "#4747b8",\n  M: "#82827d",\n  F: "#c2c23d",\n  P: "#2323dc",\n  S: "#4949b6",\n  T: "#9d9d62",\n  W: "#c0c03f",\n  Y: "#d3d32c",\n  V: "#ffff00",\n  B: "#4343bc",\n  X: "#797986",\n  Z: "#4747b8"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/strand.js?')},"./node_modules/msa-colorschemes/src/taylor.js":
/*!*****************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/taylor.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#ccff00",\n  R: "#0000ff",\n  N: "#cc00ff",\n  D: "#ff0000",\n  C: "#ffff00",\n  Q: "#ff00cc",\n  E: "#ff0066",\n  G: "#ff9900",\n  H: "#0066ff",\n  I: "#66ff00",\n  L: "#33ff00",\n  K: "#6600ff",\n  M: "#00ff00",\n  F: "#00ff66",\n  P: "#ffcc00",\n  S: "#ff3300",\n  T: "#ff6600",\n  W: "#00ccff",\n  Y: "#00ffcc",\n  V: "#99ff00",\n  B: "#fff",\n  X: "#fff",\n  Z: "#fff"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/taylor.js?')},"./node_modules/msa-colorschemes/src/turn.js":
/*!***************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/turn.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#2cd3d3",\n  R: "#708f8f",\n  N: "#ff0000",\n  D: "#e81717",\n  C: "#a85757",\n  Q: "#3fc0c0",\n  E: "#778888",\n  G: "#ff0000",\n  H: "#708f8f",\n  I: "#00ffff",\n  L: "#1ce3e3",\n  K: "#7e8181",\n  M: "#1ee1e1",\n  F: "#1ee1e1",\n  P: "#f60909",\n  S: "#e11e1e",\n  T: "#738c8c",\n  W: "#738c8c",\n  Y: "#9d6262",\n  V: "#07f8f8",\n  B: "#f30c0c",\n  X: "#7c8383",\n  Z: "#5ba4a4"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/turn.js?')},"./node_modules/msa-colorschemes/src/zappo.js":
/*!****************************************************!*\
  !*** ./node_modules/msa-colorschemes/src/zappo.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\n  A: "#ffafaf",\n  R: "#6464ff",\n  N: "#00ff00",\n  D: "#ff0000",\n  C: "#ffff00",\n  Q: "#00ff00",\n  E: "#ff0000",\n  G: "#ff00ff",\n  H: "#6464ff",\n  I: "#ffafaf",\n  L: "#ffafaf",\n  K: "#6464ff",\n  M: "#ffafaf",\n  F: "#ffc800",\n  P: "#ff00ff",\n  S: "#00ff00",\n  T: "#00ff00",\n  W: "#ffc800",\n  Y: "#ffc800",\n  V: "#ffafaf",\n  B: "#fff",\n  X: "#fff",\n  Z: "#fff"\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/msa-colorschemes/src/zappo.js?')},"./node_modules/object-keys/implementation.js":
/*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = __webpack_require__(/*! ./isArguments */ \"./node_modules/object-keys/isArguments.js\"); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/object-keys/implementation.js?")},"./node_modules/object-keys/index.js":
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar slice = Array.prototype.slice;\nvar isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js");\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ "./node_modules/object-keys/implementation.js");\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/object-keys/index.js?')},"./node_modules/object-keys/isArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/object-keys/isArguments.js?")},"./node_modules/parse-headers/parse-headers.js":
/*!*****************************************************!*\
  !*** ./node_modules/parse-headers/parse-headers.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var trim = __webpack_require__(/*! string.prototype.trim */ \"./node_modules/string.prototype.trim/index.js\")\n  , forEach = __webpack_require__(/*! for-each */ \"./node_modules/for-each/index.js\")\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/parse-headers/parse-headers.js?")},"./node_modules/stat.seqs/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/stat.seqs/lib/index.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/underscore.js");\n\nvar stat = function(seqs, opts) {\n  // if someone forgets new\n  if (!this || this.constructor !== stat) {\n    return new stat(seqs);\n  }\n  if (seqs === undefined || typeof seqs === "string") {\n    throw new TypeError("you need to give the seq stat an array");\n  }\n  //if(seqs.length == 0){\n  //throw new TypeError("you need to give the seq stat a real array");\n  //}\n  this.resetSeqs(seqs);\n  this.alphabetSize = 4;\n  this._useBackground = false;\n  this.useGaps = false;\n  this.ignoredChars = ["-", "*"];\n  _.extend(this, opts);\n};\n\nstat.prototype.addSeq = function addSeq(seq) {\n  this.seqs.push(seq);\n  this._reset();\n};\n\nstat.prototype.removeSeq = function addSeq(seq) {\n  // check for int or string\n  if (typeof seq === \'number\') {\n    this.seqs.splice(seq, 1);\n  } else {\n    // identify matches (we could have multiple)\n    _.each(this.seqs, function(s, i) {\n      if (seq === s) {\n        this.seqs.splice(i, 1);\n      }\n    }.bind(this));\n  }\n  this._reset();\n};\n\nstat.prototype.addSeqs = function addSeqs(seqs) {\n  seqs.forEach(function(seq) {\n    this.addSeq(seq);\n  }.bind(this));\n};\n\nstat.prototype.resetSeqs = function reset(seqs) {\n  this.seqs = [];\n\n  // support sequence models\n  if (! seqs instanceof Array || "at" in seqs) {\n    this.mseqs = seqs;\n    var mSeqsPluck = function() {\n      var seqArr = this.mseqs.pluck("seq");\n      this.resetSeqs(seqArr);\n    };\n    seqs.on("add change reset ", mSeqsPluck, this);\n    mSeqsPluck.call(this);\n  } else {\n    this.addSeqs(seqs);\n    this._reset();\n    this.trigger("reset");\n  }\n};\n\nvar calcValues = ["consensus", "frequency", "maxLength", "ic", "gaps"];\n\nstat.prototype._reset = function _reset() {\n  for (var i = 0; i < calcValues.length; i++) {\n    this["_" + calcValues[i]] = undefined;\n  }\n  this._identity = undefined;\n  this._background = undefined;\n};\n\n// -----------------------------------------------------------------------------\n// BEGIN: setter/getter\n// -----------------------------------------------------------------------------\n\nstat.prototype.setBackground = function setBackground(b) {\n  this._useBackground = b;\n  this._reset();\n};\n\nstat.prototype.useBackground = function useBackground() {\n  this.setBackground(true);\n};\n\nstat.prototype.setDNA = function setNucleotide() {\n  this.alphabetSize = 4;\n};\n\nstat.prototype.setProtein = function setDNA() {\n  this.alphabetSize = 20;\n};\n\n// -----------------------------------------------------------------------------\n// BEGIN: auto wrappers\n// -----------------------------------------------------------------------------\n\n// neat auto-wrappers\ncalcValues.forEach(function(key) {\n  stat.prototype[key] = function() {\n    if (this["_" + key] === undefined) {\n      this["_" + key] = this[key + "Calc"]();\n    }\n    return this["_" + key];\n  };\n});\n\nstat.prototype.identity = function identitiy(seq) {\n  // do not cache if its called with a special compare seq\n  var ident;\n  if (this._identity === undefined || seq) {\n    ident = this.identityCalc(seq);\n    this._identity = undefined;\n  }\n  return this._identity || ident;\n};\n\n// set your own background with obj.bg\nstat.prototype.background = function background() {\n  if (this.bg !== undefined) {\n    return this.bg;\n  }\n  if (this._background === undefined) {\n    this.backgroundCalc();\n  }\n  return this._background;\n};\n\n\n// -----------------------------------------------------------------------------\n// BEGIN: calc tools\n// -----------------------------------------------------------------------------\n\n// calculates the relative frequency of a base at a given position\n// this is needed e.g. for the entropy calculation\n// seqs: array of sequences (strings)\n// opts:\n//    all: boolean (use to show the frequencies for all letters [including the ignored ones]\n//    (default false)\n// @returns array of all positions with a dictionary of all bases with their relative frequency\nstat.prototype.frequencyCalc = function frequencyCalc(opts) {\n  var occs, totalPerPos;\n  occs = new Array(this.maxLength());\n  totalPerPos = new Array(this.seqs.length);\n  var ignoredChars = this.ignoredChars;\n  if(opts !== undefined && opts.all){\n    ignoredChars = []; \n  }\n\n  // count the occurrences of the chars at a position\n  _.each(this.seqs, function(el) {\n    _.each(el, function(c, pos) {\n      if (ignoredChars.indexOf(c) >= 0) return;\n      if (occs[pos] === undefined) {\n        occs[pos] = {};\n      }\n      if (occs[pos][c] === undefined) {\n        occs[pos][c] = 0;\n      }\n      occs[pos][c] ++;\n      if (totalPerPos[pos] === undefined) {\n        totalPerPos[pos] = 0;\n      }\n      totalPerPos[pos] ++;\n    });\n  });\n\n  // normalize to 1\n  _.each(occs, function(el, pos) {\n    return _.each(el, function(val, c) {\n      return (occs[pos][c] = val / totalPerPos[pos]);\n    });\n  });\n  this._frequency = occs;\n  return occs;\n};\n\n// seqs: array of sequences (strings)\nstat.prototype.backgroundCalc = function backgroundCalc() {\n  var occ = {};\n  var total = 0;\n\n  // count the occurences of the chars of a position\n  _.each(this.seqs, function(el) {\n    _.each(el, function(c) {\n      if (occ[c] === undefined) {\n        occ[c] = 0;\n      }\n      occ[c] ++;\n      return total++;\n    });\n  });\n\n  // normalize to 1\n  occ = _.mapValues(occ, function(val) {\n    return val / total;\n  });\n  this._background = occ;\n  return occ;\n};\n\n\n// information content after Shannon\n// * gaps are excluded\nstat.prototype.icCalc = function icCalc() {\n  var f = this.frequency();\n  if (this._useBackground) {\n    var b = this.background();\n  }\n  var ignoredChars = this.ignoredChars;\n  var useBackground = this._useBackground;\n  var ic = _.map(f, function(el) {\n    return _.reduce(el, function(memo, val, c) {\n      if (ignoredChars.indexOf(c) >= 0) return memo;\n      if (useBackground) {\n        val = val / b[c];\n      }\n      return memo - val * (Math.log(val) / Math.log(2));\n    }, 0);\n  });\n  this._ic = ic;\n  return ic;\n};\n\n// sequence conservation after Schneider and Stephens (1990)\n// @cite Schneider, T.D. and Stephens, R.M. 1990. Sequence logos: A new way to\n// display consensus sequences. Nucleic Acids Res. 18: 6097–6100.\nstat.prototype.conservation = function conservation(alphabetSize) {\n  var ic = this.ic();\n  var gaps = this.gaps();\n  var self = this;\n\n  alphabetSize = alphabetSize || this.alphabetSize;\n  var icMax = Math.log(alphabetSize) / Math.log(2);\n  var i = 0;\n  var conserv = _.map(ic, function(el) {\n    var ret = (icMax - el);\n    if(self.useGaps){\n      ret = ret * (1 - gaps[i++]);\n    }\n    return ret;\n  });\n  return conserv;\n};\n\n// sequence conservation after Schneider and Stephens (1990)\n// conservation for each amino acid\n// * gaps are excluded\nstat.prototype.conservResidue = function conservation(input) {\n  var alphabetSize = input ? input.alphabetSize : undefined;\n  var ic;\n  var ignoredChars = this.ignoredChars;\n  if (input !== undefined && input.scaled) {\n    ic = this.scale(this.conservation(alphabetSize));\n  } else {\n    ic = this.conservation(alphabetSize);\n  }\n  var f = this.frequency();\n  var keys;\n  var conserv = _.map(f, function(el, i) {\n    keys = _.reject(_.keys(el), function(c) {\n      return ignoredChars.indexOf(c) >= 0;\n    });\n    var obj = {};\n    _.each(keys, function(key) {\n      obj[key] = el[key] * ic[i];\n    });\n    return obj;\n  });\n  return conserv;\n};\n\n// type 2 sequence logo method\n// scales relative to background\nstat.prototype.conservResidue2 = function conservation(alphabetSize) {\n  var f = this.frequency();\n  var ic = this.conservation(alphabetSize);\n  var b = this.background();\n  var conserv = _.map(f, function(el, i) {\n    return _.map(el, function(val) {\n      var sum = _.reduce(f[i], function(memo, e) {\n        return memo + e / b[i];\n      }, 0);\n      return ((val / b[i]) / sum) * ic[i];\n    }, 0);\n  });\n  return conserv;\n};\n\n// scale information content or conservation to 1\nstat.prototype.scale = function conservation(ic, alphabetSize) {\n  alphabetSize = alphabetSize || this.alphabetSize;\n  var icMax = Math.log(alphabetSize) / Math.log(2);\n  var conserv = _.map(ic, function(el) {\n    return el / icMax;\n  });\n  return conserv;\n};\n\nstat.prototype.maxLengthCalc = function() {\n  if(this.seqs.length === 0){\n    return 0;\n  }\n  return _.max(this.seqs, function(seq) {\n    return seq.length;\n  }).length;\n};\n\n// seqs: array of sequences (strings)\n// @returns consenus sequence\nstat.prototype.consensusCalc = function consensusCal() {\n  var occs = new Array(this.maxLength());\n\n  // count the occurrences of the chars of a position\n  _.each(this.seqs, function(el) {\n    _.each(el, function(c, pos) {\n      if (occs[pos] === undefined) {\n        occs[pos] = {};\n      }\n      if (occs[pos][c] === undefined) {\n        occs[pos][c] = 0;\n      }\n      occs[pos][c] ++;\n    });\n  });\n\n  // now pick the char with most occurrences\n  this._consensus = _.reduce(occs, function(memo, occ) {\n    var keys;\n    keys = _.keys(occ);\n    return memo += _.max(keys, function(key) {\n      return occ[key];\n    });\n  }, "");\n\n  return this._consensus;\n};\n\n// seqs: array of sequences (strings)\n// consensus: calculated consensus seq\n// calculates for each sequence\n// * matches with the consensus seq\n// * identity = matchedChars / totalChars (excluding gaps)\n// @returns: array of length of the seqs with the identity to the consensus (double)\nstat.prototype.identityCalc = function identitiyCalc(compareSeq) {\n  var consensus = compareSeq || this.consensus();\n  this._identity = this.seqs.map(function(seq) {\n    var matches = 0;\n    var total = 0;\n    for (var i = 0; i < seq.length; i++) {\n      if (seq[i] !== "-" && consensus[i] !== "-") {\n        total++;\n        if (seq[i] === consensus[i]) {\n          matches++;\n        }\n      }\n    }\n    return matches / total;\n  });\n  return this._identity;\n};\n\n// percentage of gaps per column\nstat.prototype.gapsCalc = function gapsCount() {\n  var mLength = this.maxLength();\n  if(mLength <= 1 || typeof mLength === "undefined" ){\n    return [];\n  }\n  var occs = new Array(this.maxLength());\n  // count the occurrences of the chars of a position\n  _.each(this.seqs, function(el) {\n    _.each(el, function(c, pos) {\n      if (occs[pos] === undefined) {\n        occs[pos] = {\n          g: 0,\n          t: 0\n        };\n      }\n      c = c === "-" ? "g" : "t";\n      occs[pos][c] ++;\n    });\n  });\n\n  // now pick the char with most occurrences\n  this._gaps = _.map(occs, function(el) {\n    return el.g / (el.g + el.t);\n  });\n  return this._gaps;\n};\n\n_.mixin({\n  mapValues: function(obj, f_val) {\n    return _.object(_.keys(obj), _.map(obj, f_val));\n  }\n});\n\n__webpack_require__(/*! biojs-events */ "./node_modules/biojs-events/index.js").mixin(stat.prototype);\n\nmodule.exports = stat;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/stat.seqs/lib/index.js?')},"./node_modules/string.prototype.trim/implementation.js":
/*!**************************************************************!*\
  !*** ./node_modules/string.prototype.trim/implementation.js ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\nvar ES = __webpack_require__(/*! es-abstract/es5 */ \"./node_modules/es-abstract/es5.js\");\nvar replace = bind.call(Function.call, String.prototype.replace);\n\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/string.prototype.trim/implementation.js?")},"./node_modules/string.prototype.trim/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/string.prototype.trim/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");\nvar define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");\n\nvar implementation = __webpack_require__(/*! ./implementation */ "./node_modules/string.prototype.trim/implementation.js");\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/string.prototype.trim/polyfill.js");\nvar shim = __webpack_require__(/*! ./shim */ "./node_modules/string.prototype.trim/shim.js");\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/string.prototype.trim/index.js?')},"./node_modules/string.prototype.trim/polyfill.js":
/*!********************************************************!*\
  !*** ./node_modules/string.prototype.trim/polyfill.js ***!
  \********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/string.prototype.trim/implementation.js\");\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/string.prototype.trim/polyfill.js?")},"./node_modules/string.prototype.trim/shim.js":
/*!****************************************************!*\
  !*** ./node_modules/string.prototype.trim/shim.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/string.prototype.trim/polyfill.js");\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });\n\treturn polyfill;\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/string.prototype.trim/shim.js?')},"./node_modules/underscore/underscore.js":
/*!***********************************************!*\
  !*** ./node_modules/underscore/underscore.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if ( true && !exports.nodeType) {\n    if ( true && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if ( true && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}());\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/underscore/underscore.js?")},"./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/(webpack)/buildin/global.js?')},"./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){eval('module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/(webpack)/buildin/module.js?')},"./node_modules/xhr/index.js":
/*!***********************************!*\
  !*** ./node_modules/xhr/index.js ***!
  \***********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar window = __webpack_require__(/*! global/window */ "./node_modules/global/window.js")\nvar isFunction = __webpack_require__(/*! is-function */ "./node_modules/is-function/index.js")\nvar parseHeaders = __webpack_require__(/*! parse-headers */ "./node_modules/parse-headers/parse-headers.js")\nvar xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js")\n\nmodule.exports = createXHR\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = "withCredentials" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray(["get", "put", "post", "patch", "head", "delete"], function(method) {\n    createXHR[method === "delete" ? "del" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === "string") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === "undefined"){\n        throw new Error("callback argument missing")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error("" + (evt || "Unknown XMLHttpRequest Error") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn\'t have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error("Internal XMLHttpRequest Error")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || "GET"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if ("json" in options && options.json !== false) {\n        isJson = true\n        headers["accept"] || headers["Accept"] || (headers["Accept"] = "application/json") //Don\'t override existing accept header declared by user\n        if (method !== "GET" && method !== "HEAD") {\n            headers["content-type"] || headers["Content-Type"] || (headers["Content-Type"] = "application/json") //Don\'t override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm\'s request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort("timeout")\n            var e = new Error("XMLHttpRequest timeout")\n            e.code = "ETIMEDOUT"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error("Headers cannot be set on an XDomainRequest object")\n    }\n\n    if ("responseType" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if ("beforeSend" in options &&\n        typeof options.beforeSend === "function"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends "undefined" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    // xhr.responseXML will throw Exception "InvalidStateError" or "DOMException"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n        if (xhr.responseType === "document") {\n            return xhr.responseXML\n        }\n        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === "parsererror"\n        if (xhr.responseType === "" && !firefoxBugTakenEffect) {\n            return xhr.responseXML\n        }\n    } catch (e) {}\n\n    return null\n}\n\nfunction noop() {}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/xhr/index.js?')},"./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports){eval("module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./node_modules/xtend/immutable.js?")},"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var msa = __webpack_require__(/*! @intermine/msa-viewer */ \"./node_modules/@intermine/msa-viewer/lib/index.js\");\nvar queryGeneToProtein = __webpack_require__(/*! ./queries/geneToProtein */ \"./src/queries/geneToProtein.js\");\nvar queryProteinToSeq = __webpack_require__(/*! ./queries/proteinToSequence */ \"./src/queries/proteinToSequence.js\");\n\nfunction renderError(el, message) {\n\tel.innerHTML = `\n\t<div class=\"center\">\n\t\t${message}\n\t</div>\n`;\n}\n\nfunction getAlignedSequence(length, fasta) {\n\tconst fetchResult = fetch('http://localhost:3000/align-sequence', {\n\t\tmethod: 'POST',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify({ sequence: fasta })\n\t}).then(res => res.json());\n\treturn length > 1 ? fetchResult : Promise.resolve({ data: fasta });\n}\n\n// make sure to export main, with the signature\nfunction main(el, service, imEntity, state, config) {\n\tif (!state) state = {};\n\tif (!el || !service || !imEntity || !state || !config) {\n\t\tthrow new Error('Call main with correct signature');\n\t}\n\n\tel.innerHTML = `\n\t<h3 class=\"center\">MSA Viewer - Loading...</h3>\n\t`;\n\n\tel.innerHTML += `\n\t<div class=\"loading center\"><div></div></div>\n\t`;\n\n\t// don't do queries when in `testing` state\n\tif (state.testing) return;\n\n\t// fetch all proteins associated with the particular gene\n\tqueryGeneToProtein(imEntity.value, service.root)\n\t\t.then(gene => {\n\t\t\tvar proteins = gene.proteins;\n\t\t\tvar queries = [];\n\n\t\t\tproteins.forEach(protein => {\n\t\t\t\t// protein to sequence query\n\t\t\t\tvar query = queryProteinToSeq(protein.primaryAccession, service.root);\n\t\t\t\tqueries.push(query);\n\t\t\t});\n\n\t\t\tvar fasta = '';\n\t\t\tPromise.all(queries).then(results => {\n\t\t\t\t// concat all sequences together\n\t\t\t\tresults.forEach((result, i) => {\n\t\t\t\t\tvar sequence =\n\t\t\t\t\t\tresult.sequence.residues + (i == results.length - 1 ? '' : '\\n');\n\t\t\t\t\tfasta += '>' + proteins[i].primaryAccession + '\\n' + sequence;\n\t\t\t\t});\n\n\t\t\t\tgetAlignedSequence(results.length, fasta)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t// parse sequences via msa lib\n\t\t\t\t\t\tvar seqs = msa.io.fasta.parse(res.data);\n\n\t\t\t\t\t\t// initialise viewer\n\t\t\t\t\t\tvar viewer = msa.default({\n\t\t\t\t\t\t\tel: el,\n\t\t\t\t\t\t\tseqs: seqs\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tviewer.render();\n\n\t\t\t\t\t\t// text to notify for horizontal scroll since the msa-viewer lib doesn't support showing the scrollbar and user must be aware\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tconst text = document.createElement('span');\n\t\t\t\t\t\t\ttext.innerText =\n\t\t\t\t\t\t\t\t'Remember: You can scroll through the viewer horizontally to view the full sequence';\n\t\t\t\t\t\t\ttext.style.fontSize = '12px';\n\t\t\t\t\t\t\tel.prepend(text);\n\t\t\t\t\t\t}, 1500);\n\n\t\t\t\t\t\t// remove header\n\t\t\t\t\t\tdocument.getElementsByClassName(\n\t\t\t\t\t\t\t'biojs_msa_header'\n\t\t\t\t\t\t)[0].style.display = 'none';\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\trenderError(el, 'Something went wrong! Could not align sequences!');\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch(() => {\n\t\t\trenderError(el, 'No Proteins associated with the gene!');\n\t\t});\n}\n\nmodule.exports = { main };\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./src/index.js?")},"./src/queries/geneToProtein.js":
/*!**************************************!*\
  !*** ./src/queries/geneToProtein.js ***!
  \**************************************/
/*! no static exports found */function(module,exports){eval("const queryGeneToProtein = geneId => ({\n\tname: 'Gene_Protein',\n\ttitle: 'Gene --\x3e Proteins.',\n\tcomment: 'Added 26OCT2010: ML',\n\tdescription:\n\t\t'For a given Gene (or List of Genes) returns the corresponding Protein(s) products.',\n\tfrom: 'Gene',\n\tselect: [\n\t\t'primaryIdentifier',\n\t\t'symbol',\n\t\t'proteins.primaryIdentifier',\n\t\t'proteins.primaryAccession',\n\t\t'proteins.name',\n\t\t'proteins.isUniprotCanonical',\n\t\t'proteins.molecularWeight',\n\t\t'proteins.length',\n\t\t'proteins.isFragment'\n\t],\n\torderBy: [\n\t\t{\n\t\t\tpath: 'primaryIdentifier',\n\t\t\tdirection: 'ASC'\n\t\t}\n\t],\n\twhere: [\n\t\t{\n\t\t\tpath: 'Gene.id',\n\t\t\top: '=',\n\t\t\tvalue: geneId\n\t\t}\n\t]\n});\n\n// eslint-disable-next-line\nfunction queryData(geneId, serviceUrl, imjsClient = imjs) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst service = new imjsClient.Service({ root: serviceUrl });\n\t\tservice\n\t\t\t.records(queryGeneToProtein(geneId))\n\t\t\t.then(data => {\n\t\t\t\tif (data.length) resolve(data[0]);\n\t\t\t\telse reject('No associated proteins found!');\n\t\t\t})\n\t\t\t.catch(reject);\n\t});\n}\n\nmodule.exports = queryData;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./src/queries/geneToProtein.js?")},"./src/queries/proteinToSequence.js":
/*!******************************************!*\
  !*** ./src/queries/proteinToSequence.js ***!
  \******************************************/
/*! no static exports found */function(module,exports){eval("const queryProteinToSequence = primaryAccession => ({\n\tname: 'Protein_Sequence',\n\ttitle: 'Protein --\x3e Sequence',\n\tdescription:\n\t\t'for a specified protein or list proteins give the protein sequence and length.',\n\tfrom: 'Protein',\n\tselect: [\n\t\t'primaryIdentifier',\n\t\t'primaryAccession',\n\t\t'sequence.length',\n\t\t'sequence.residues'\n\t],\n\torderBy: [\n\t\t{\n\t\t\tpath: 'primaryIdentifier',\n\t\t\tdirection: 'ASC'\n\t\t}\n\t],\n\twhere: [\n\t\t{\n\t\t\tpath: 'Protein.primaryAccession',\n\t\t\top: '=',\n\t\t\tvalue: primaryAccession\n\t\t}\n\t]\n});\n\n// eslint-disable-next-line\nfunction queryData(primaryAccession, serviceUrl, imjsClient = imjs) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst service = new imjsClient.Service({ root: serviceUrl });\n\t\tservice\n\t\t\t.records(queryProteinToSequence(primaryAccession))\n\t\t\t.then(data => {\n\t\t\t\tif (data.length) resolve(data[0]);\n\t\t\t\telse reject('No protein associated with passed `primaryAccession`!');\n\t\t\t})\n\t\t\t.catch(reject);\n\t});\n}\n\nmodule.exports = queryData;\n\n\n//# sourceURL=webpack://bluegenesMSAViewer/./src/queries/proteinToSequence.js?")}});